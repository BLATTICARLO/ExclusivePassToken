{
	"id": "e3ac35267821b134438b744986969966",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ExclusivePassToken.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract ExclusivePassToken is ERC20 {\r\n    address public organizer;\r\n    uint256 public maxAttendees;\r\n    uint256 public totalAttendees;\r\n    uint256 public tokenPrice; // Price per token in wei\r\n\r\n    // Mapping to keep track of whether a token has been used or not\r\n    mapping(address => bool) public hasAttended;\r\n\r\n    event TokenPurchased(address indexed buyer, uint256 amount, uint256 totalPrice);\r\n    event AttendanceRecorded(address indexed attendee);\r\n    event PriceUpdated(uint256 newPrice);\r\n\r\n    constructor(\r\n        string memory _name,\r\n        string memory _symbol,\r\n        uint256 _maxAttendees,\r\n        uint256 _tokenPrice\r\n    ) ERC20(_name, _symbol) {\r\n        organizer = msg.sender;\r\n        maxAttendees = _maxAttendees;\r\n        tokenPrice = _tokenPrice;\r\n    }\r\n\r\n    // Modifier to restrict access to the organizer only\r\n    modifier onlyOrganizer() {\r\n        require(msg.sender == organizer, \"Solo un organizzatore puo eseguire questa azione\");\r\n        _;\r\n    }\r\n\r\n    // Function to allow organizer to update the token price\r\n    function updateTokenPrice(uint256 _newPrice) external onlyOrganizer {\r\n        tokenPrice = _newPrice;\r\n        emit PriceUpdated(_newPrice);\r\n    }\r\n\r\n    // Function to allow purchase of tokens\r\n    function purchaseTokens(uint256 _amount) external payable {\r\n        uint256 totalPrice = _amount * tokenPrice;\r\n        require(totalSupply() + _amount <= maxAttendees, \"Superato il numero massimo di partecipanti\");\r\n        require(msg.value == totalPrice, \"Importo inviato non corretto\");\r\n\r\n        _mint(msg.sender, _amount);\r\n        totalAttendees += _amount;\r\n\r\n        emit TokenPurchased(msg.sender, _amount, totalPrice);\r\n    }\r\n\r\n    // Function to record attendance and burn token\r\n    function recordAttendance() external {\r\n        require(balanceOf(msg.sender) > 0, \"Nessun token posseduto\");\r\n        require(!hasAttended[msg.sender], \"Token utilizzato\");\r\n\r\n        hasAttended[msg.sender] = true;\r\n        totalAttendees--;\r\n\r\n        _burn(msg.sender, 1);\r\n\r\n        emit AttendanceRecorded(msg.sender);\r\n    }\r\n\r\n    // Function to withdraw funds (only available to organizer)\r\n    function withdrawFunds() external onlyOrganizer {\r\n        payable(organizer).transfer(address(this).balance);\r\n    }\r\n\r\n    // Function to get the number of available seats\r\n    function getAvailableSeats() external view returns (uint256) {\r\n        return maxAttendees - totalAttendees;\r\n    }\r\n\r\n    // Function to get the number of tickets sold\r\n    function getTicketsSold() external view returns (uint256) {\r\n        return totalAttendees;\r\n    }\r\n\r\n    // Function to get the total amount accumulated\r\n    function getTotalAccumulated() external view returns (uint256) {\r\n        return totalAttendees * tokenPrice;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ExclusivePassToken.sol": {
				"ExclusivePassToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_maxAttendees",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenPrice",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "attendee",
									"type": "address"
								}
							],
							"name": "AttendanceRecorded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newPrice",
									"type": "uint256"
								}
							],
							"name": "PriceUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalPrice",
									"type": "uint256"
								}
							],
							"name": "TokenPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAvailableSeats",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTicketsSold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalAccumulated",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hasAttended",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxAttendees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "organizer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "purchaseTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "recordAttendance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAttendees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPrice",
									"type": "uint256"
								}
							],
							"name": "updateTokenPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ExclusivePassToken.sol\":126:2933  contract ExclusivePassToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ExclusivePassToken.sol\":641:921  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ExclusivePassToken.sol\":790:795  _name */\n  dup4\n    /* \"contracts/ExclusivePassToken.sol\":797:804  _symbol */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/ExclusivePassToken.sol\":829:839  msg.sender */\n  caller\n    /* \"contracts/ExclusivePassToken.sol\":817:826  organizer */\n  0x05\n  0x00\n    /* \"contracts/ExclusivePassToken.sol\":817:839  organizer = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ExclusivePassToken.sol\":865:878  _maxAttendees */\n  dup2\n    /* \"contracts/ExclusivePassToken.sol\":850:862  maxAttendees */\n  0x06\n    /* \"contracts/ExclusivePassToken.sol\":850:878  maxAttendees = _maxAttendees */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ExclusivePassToken.sol\":902:913  _tokenPrice */\n  dup1\n    /* \"contracts/ExclusivePassToken.sol\":889:899  tokenPrice */\n  0x08\n    /* \"contracts/ExclusivePassToken.sol\":889:913  tokenPrice = _tokenPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ExclusivePassToken.sol\":641:921  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/ExclusivePassToken.sol\":126:2933  contract ExclusivePassToken is ERC20 {... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_15:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_16:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_17:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_18:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_19:\n    /* \"#utility.yul\":957:984   */\n  tag_55\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_17\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_57\n  tag_18\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1030:1118   */\ntag_56:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_20:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_59\n  tag_12\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_60\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_19\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_21:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_63\n  tag_18\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1434:1490   */\ntag_62:\n    /* \"#utility.yul\":1508:1537   */\n  tag_64\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_17\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_22:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_23:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_67\n    /* \"#utility.yul\":1885:1934   */\n  tag_68\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_21\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1869:1935   */\n  tag_20\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_70\n  tag_16\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2010:2122   */\ntag_69:\n    /* \"#utility.yul\":2131:2183   */\n  tag_71\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_22\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_24:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_74\n  tag_15\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2292:2414   */\ntag_73:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_75\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_23\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2647   */\ntag_25:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2636:2641   */\n  dup2\n    /* \"#utility.yul\":2625:2641   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2647   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2653:2775   */\ntag_26:\n    /* \"#utility.yul\":2726:2750   */\n  tag_78\n    /* \"#utility.yul\":2744:2749   */\n  dup2\n    /* \"#utility.yul\":2726:2750   */\n  tag_25\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2719:2724   */\n  dup2\n    /* \"#utility.yul\":2716:2751   */\n  eq\n    /* \"#utility.yul\":2706:2769   */\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2765:2766   */\n  0x00\n    /* \"#utility.yul\":2762:2763   */\n  dup1\n    /* \"#utility.yul\":2755:2767   */\n  revert\n    /* \"#utility.yul\":2706:2769   */\ntag_79:\n    /* \"#utility.yul\":2653:2775   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2781:2924   */\ntag_27:\n    /* \"#utility.yul\":2838:2843   */\n  0x00\n    /* \"#utility.yul\":2869:2875   */\n  dup2\n    /* \"#utility.yul\":2863:2876   */\n  mload\n    /* \"#utility.yul\":2854:2876   */\n  swap1\n  pop\n    /* \"#utility.yul\":2885:2918   */\n  tag_81\n    /* \"#utility.yul\":2912:2917   */\n  dup2\n    /* \"#utility.yul\":2885:2918   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2781:2924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2930:4096   */\ntag_3:\n    /* \"#utility.yul\":3047:3053   */\n  0x00\n    /* \"#utility.yul\":3055:3061   */\n  dup1\n    /* \"#utility.yul\":3063:3069   */\n  0x00\n    /* \"#utility.yul\":3071:3077   */\n  dup1\n    /* \"#utility.yul\":3120:3123   */\n  0x80\n    /* \"#utility.yul\":3108:3117   */\n  dup6\n    /* \"#utility.yul\":3099:3106   */\n  dup8\n    /* \"#utility.yul\":3095:3118   */\n  sub\n    /* \"#utility.yul\":3091:3124   */\n  slt\n    /* \"#utility.yul\":3088:3208   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3127:3206   */\n  tag_84\n  tag_13\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3088:3208   */\ntag_83:\n    /* \"#utility.yul\":3268:3269   */\n  0x00\n    /* \"#utility.yul\":3257:3266   */\n  dup6\n    /* \"#utility.yul\":3253:3270   */\n  add\n    /* \"#utility.yul\":3247:3271   */\n  mload\n    /* \"#utility.yul\":3298:3316   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3290:3296   */\n  dup2\n    /* \"#utility.yul\":3287:3317   */\n  gt\n    /* \"#utility.yul\":3284:3401   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":3320:3399   */\n  tag_86\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3284:3401   */\ntag_85:\n    /* \"#utility.yul\":3425:3499   */\n  tag_87\n    /* \"#utility.yul\":3491:3498   */\n  dup8\n    /* \"#utility.yul\":3482:3488   */\n  dup3\n    /* \"#utility.yul\":3471:3480   */\n  dup9\n    /* \"#utility.yul\":3467:3489   */\n  add\n    /* \"#utility.yul\":3425:3499   */\n  tag_24\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3415:3499   */\n  swap5\n  pop\n    /* \"#utility.yul\":3218:3509   */\n  pop\n    /* \"#utility.yul\":3569:3571   */\n  0x20\n    /* \"#utility.yul\":3558:3567   */\n  dup6\n    /* \"#utility.yul\":3554:3572   */\n  add\n    /* \"#utility.yul\":3548:3573   */\n  mload\n    /* \"#utility.yul\":3600:3618   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3592:3598   */\n  dup2\n    /* \"#utility.yul\":3589:3619   */\n  gt\n    /* \"#utility.yul\":3586:3703   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":3622:3701   */\n  tag_89\n  tag_14\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3586:3703   */\ntag_88:\n    /* \"#utility.yul\":3727:3801   */\n  tag_90\n    /* \"#utility.yul\":3793:3800   */\n  dup8\n    /* \"#utility.yul\":3784:3790   */\n  dup3\n    /* \"#utility.yul\":3773:3782   */\n  dup9\n    /* \"#utility.yul\":3769:3791   */\n  add\n    /* \"#utility.yul\":3727:3801   */\n  tag_24\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3717:3801   */\n  swap4\n  pop\n    /* \"#utility.yul\":3519:3811   */\n  pop\n    /* \"#utility.yul\":3850:3852   */\n  0x40\n    /* \"#utility.yul\":3876:3940   */\n  tag_91\n    /* \"#utility.yul\":3932:3939   */\n  dup8\n    /* \"#utility.yul\":3923:3929   */\n  dup3\n    /* \"#utility.yul\":3912:3921   */\n  dup9\n    /* \"#utility.yul\":3908:3930   */\n  add\n    /* \"#utility.yul\":3876:3940   */\n  tag_27\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3866:3940   */\n  swap3\n  pop\n    /* \"#utility.yul\":3821:3950   */\n  pop\n    /* \"#utility.yul\":3989:3991   */\n  0x60\n    /* \"#utility.yul\":4015:4079   */\n  tag_92\n    /* \"#utility.yul\":4071:4078   */\n  dup8\n    /* \"#utility.yul\":4062:4068   */\n  dup3\n    /* \"#utility.yul\":4051:4060   */\n  dup9\n    /* \"#utility.yul\":4047:4069   */\n  add\n    /* \"#utility.yul\":4015:4079   */\n  tag_27\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4005:4079   */\n  swap2\n  pop\n    /* \"#utility.yul\":3960:4089   */\n  pop\n    /* \"#utility.yul\":2930:4096   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4102:4201   */\ntag_28:\n    /* \"#utility.yul\":4154:4160   */\n  0x00\n    /* \"#utility.yul\":4188:4193   */\n  dup2\n    /* \"#utility.yul\":4182:4194   */\n  mload\n    /* \"#utility.yul\":4172:4194   */\n  swap1\n  pop\n    /* \"#utility.yul\":4102:4201   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4207:4387   */\ntag_29:\n    /* \"#utility.yul\":4255:4332   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4252:4253   */\n  0x00\n    /* \"#utility.yul\":4245:4333   */\n  mstore\n    /* \"#utility.yul\":4352:4356   */\n  0x22\n    /* \"#utility.yul\":4349:4350   */\n  0x04\n    /* \"#utility.yul\":4342:4357   */\n  mstore\n    /* \"#utility.yul\":4376:4380   */\n  0x24\n    /* \"#utility.yul\":4373:4374   */\n  0x00\n    /* \"#utility.yul\":4366:4381   */\n  revert\n    /* \"#utility.yul\":4393:4713   */\ntag_30:\n    /* \"#utility.yul\":4437:4443   */\n  0x00\n    /* \"#utility.yul\":4474:4475   */\n  0x02\n    /* \"#utility.yul\":4468:4472   */\n  dup3\n    /* \"#utility.yul\":4464:4476   */\n  div\n    /* \"#utility.yul\":4454:4476   */\n  swap1\n  pop\n    /* \"#utility.yul\":4521:4522   */\n  0x01\n    /* \"#utility.yul\":4515:4519   */\n  dup3\n    /* \"#utility.yul\":4511:4523   */\n  and\n    /* \"#utility.yul\":4542:4560   */\n  dup1\n    /* \"#utility.yul\":4532:4613   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4598:4602   */\n  0x7f\n    /* \"#utility.yul\":4590:4596   */\n  dup3\n    /* \"#utility.yul\":4586:4603   */\n  and\n    /* \"#utility.yul\":4576:4603   */\n  swap2\n  pop\n    /* \"#utility.yul\":4532:4613   */\ntag_96:\n    /* \"#utility.yul\":4660:4662   */\n  0x20\n    /* \"#utility.yul\":4652:4658   */\n  dup3\n    /* \"#utility.yul\":4649:4663   */\n  lt\n    /* \"#utility.yul\":4629:4647   */\n  dup2\n    /* \"#utility.yul\":4626:4664   */\n  sub\n    /* \"#utility.yul\":4623:4707   */\n  tag_97\n  jumpi\n    /* \"#utility.yul\":4679:4697   */\n  tag_98\n  tag_29\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4623:4707   */\ntag_97:\n    /* \"#utility.yul\":4444:4713   */\n  pop\n    /* \"#utility.yul\":4393:4713   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4719:4860   */\ntag_31:\n    /* \"#utility.yul\":4768:4772   */\n  0x00\n    /* \"#utility.yul\":4791:4794   */\n  dup2\n    /* \"#utility.yul\":4783:4794   */\n  swap1\n  pop\n    /* \"#utility.yul\":4814:4817   */\n  dup2\n    /* \"#utility.yul\":4811:4812   */\n  0x00\n    /* \"#utility.yul\":4804:4818   */\n  mstore\n    /* \"#utility.yul\":4848:4852   */\n  0x20\n    /* \"#utility.yul\":4845:4846   */\n  0x00\n    /* \"#utility.yul\":4835:4853   */\n  keccak256\n    /* \"#utility.yul\":4827:4853   */\n  swap1\n  pop\n    /* \"#utility.yul\":4719:4860   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4866:4959   */\ntag_32:\n    /* \"#utility.yul\":4903:4909   */\n  0x00\n    /* \"#utility.yul\":4950:4952   */\n  0x20\n    /* \"#utility.yul\":4945:4947   */\n  0x1f\n    /* \"#utility.yul\":4938:4943   */\n  dup4\n    /* \"#utility.yul\":4934:4948   */\n  add\n    /* \"#utility.yul\":4930:4953   */\n  div\n    /* \"#utility.yul\":4920:4953   */\n  swap1\n  pop\n    /* \"#utility.yul\":4866:4959   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4965:5072   */\ntag_33:\n    /* \"#utility.yul\":5009:5017   */\n  0x00\n    /* \"#utility.yul\":5059:5064   */\n  dup3\n    /* \"#utility.yul\":5053:5057   */\n  dup3\n    /* \"#utility.yul\":5049:5065   */\n  shl\n    /* \"#utility.yul\":5028:5065   */\n  swap1\n  pop\n    /* \"#utility.yul\":4965:5072   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5078:5471   */\ntag_34:\n    /* \"#utility.yul\":5147:5153   */\n  0x00\n    /* \"#utility.yul\":5197:5198   */\n  0x08\n    /* \"#utility.yul\":5185:5195   */\n  dup4\n    /* \"#utility.yul\":5181:5199   */\n  mul\n    /* \"#utility.yul\":5220:5317   */\n  tag_103\n    /* \"#utility.yul\":5250:5316   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5239:5248   */\n  dup3\n    /* \"#utility.yul\":5220:5317   */\n  tag_33\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5338:5377   */\n  tag_104\n    /* \"#utility.yul\":5368:5376   */\n  dup7\n    /* \"#utility.yul\":5357:5366   */\n  dup4\n    /* \"#utility.yul\":5338:5377   */\n  tag_33\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5326:5377   */\n  swap6\n  pop\n    /* \"#utility.yul\":5410:5414   */\n  dup1\n    /* \"#utility.yul\":5406:5415   */\n  not\n    /* \"#utility.yul\":5399:5404   */\n  dup5\n    /* \"#utility.yul\":5395:5416   */\n  and\n    /* \"#utility.yul\":5386:5416   */\n  swap4\n  pop\n    /* \"#utility.yul\":5459:5463   */\n  dup1\n    /* \"#utility.yul\":5449:5457   */\n  dup7\n    /* \"#utility.yul\":5445:5464   */\n  and\n    /* \"#utility.yul\":5438:5443   */\n  dup5\n    /* \"#utility.yul\":5435:5465   */\n  or\n    /* \"#utility.yul\":5425:5465   */\n  swap3\n  pop\n    /* \"#utility.yul\":5154:5471   */\n  pop\n  pop\n    /* \"#utility.yul\":5078:5471   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5477:5537   */\ntag_35:\n    /* \"#utility.yul\":5505:5508   */\n  0x00\n    /* \"#utility.yul\":5526:5531   */\n  dup2\n    /* \"#utility.yul\":5519:5531   */\n  swap1\n  pop\n    /* \"#utility.yul\":5477:5537   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5543:5685   */\ntag_36:\n    /* \"#utility.yul\":5593:5602   */\n  0x00\n    /* \"#utility.yul\":5626:5679   */\n  tag_107\n    /* \"#utility.yul\":5644:5678   */\n  tag_108\n    /* \"#utility.yul\":5653:5677   */\n  tag_109\n    /* \"#utility.yul\":5671:5676   */\n  dup5\n    /* \"#utility.yul\":5653:5677   */\n  tag_25\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5644:5678   */\n  tag_35\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5626:5679   */\n  tag_25\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5613:5679   */\n  swap1\n  pop\n    /* \"#utility.yul\":5543:5685   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5691:5766   */\ntag_37:\n    /* \"#utility.yul\":5734:5737   */\n  0x00\n    /* \"#utility.yul\":5755:5760   */\n  dup2\n    /* \"#utility.yul\":5748:5760   */\n  swap1\n  pop\n    /* \"#utility.yul\":5691:5766   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5772:6041   */\ntag_38:\n    /* \"#utility.yul\":5882:5921   */\n  tag_112\n    /* \"#utility.yul\":5913:5920   */\n  dup4\n    /* \"#utility.yul\":5882:5921   */\n  tag_36\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5943:6034   */\n  tag_113\n    /* \"#utility.yul\":5992:6033   */\n  tag_114\n    /* \"#utility.yul\":6016:6032   */\n  dup3\n    /* \"#utility.yul\":5992:6033   */\n  tag_37\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5984:5990   */\n  dup5\n    /* \"#utility.yul\":5977:5981   */\n  dup5\n    /* \"#utility.yul\":5971:5982   */\n  sload\n    /* \"#utility.yul\":5943:6034   */\n  tag_34\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5937:5941   */\n  dup3\n    /* \"#utility.yul\":5930:6035   */\n  sstore\n    /* \"#utility.yul\":5848:6041   */\n  pop\n    /* \"#utility.yul\":5772:6041   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6047:6120   */\ntag_39:\n    /* \"#utility.yul\":6092:6095   */\n  0x00\n    /* \"#utility.yul\":6047:6120   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6126:6315   */\ntag_40:\n    /* \"#utility.yul\":6203:6235   */\n  tag_117\n  tag_39\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":6244:6309   */\n  tag_118\n    /* \"#utility.yul\":6302:6308   */\n  dup2\n    /* \"#utility.yul\":6294:6300   */\n  dup5\n    /* \"#utility.yul\":6288:6292   */\n  dup5\n    /* \"#utility.yul\":6244:6309   */\n  tag_38\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6179:6315   */\n  pop\n    /* \"#utility.yul\":6126:6315   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6321:6507   */\ntag_41:\n    /* \"#utility.yul\":6381:6501   */\ntag_120:\n    /* \"#utility.yul\":6398:6401   */\n  dup2\n    /* \"#utility.yul\":6391:6396   */\n  dup2\n    /* \"#utility.yul\":6388:6402   */\n  lt\n    /* \"#utility.yul\":6381:6501   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":6452:6491   */\n  tag_123\n    /* \"#utility.yul\":6489:6490   */\n  0x00\n    /* \"#utility.yul\":6482:6487   */\n  dup3\n    /* \"#utility.yul\":6452:6491   */\n  tag_40\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6425:6426   */\n  0x01\n    /* \"#utility.yul\":6418:6423   */\n  dup2\n    /* \"#utility.yul\":6414:6427   */\n  add\n    /* \"#utility.yul\":6405:6427   */\n  swap1\n  pop\n    /* \"#utility.yul\":6381:6501   */\n  jump(tag_120)\ntag_122:\n    /* \"#utility.yul\":6321:6507   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6513:7056   */\ntag_42:\n    /* \"#utility.yul\":6614:6616   */\n  0x1f\n    /* \"#utility.yul\":6609:6612   */\n  dup3\n    /* \"#utility.yul\":6606:6617   */\n  gt\n    /* \"#utility.yul\":6603:7049   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":6648:6686   */\n  tag_126\n    /* \"#utility.yul\":6680:6685   */\n  dup2\n    /* \"#utility.yul\":6648:6686   */\n  tag_31\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6732:6761   */\n  tag_127\n    /* \"#utility.yul\":6750:6760   */\n  dup5\n    /* \"#utility.yul\":6732:6761   */\n  tag_32\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6722:6730   */\n  dup2\n    /* \"#utility.yul\":6718:6762   */\n  add\n    /* \"#utility.yul\":6915:6917   */\n  0x20\n    /* \"#utility.yul\":6903:6913   */\n  dup6\n    /* \"#utility.yul\":6900:6918   */\n  lt\n    /* \"#utility.yul\":6897:6946   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":6936:6944   */\n  dup2\n    /* \"#utility.yul\":6921:6944   */\n  swap1\n  pop\n    /* \"#utility.yul\":6897:6946   */\ntag_128:\n    /* \"#utility.yul\":6959:7039   */\n  tag_129\n    /* \"#utility.yul\":7015:7037   */\n  tag_130\n    /* \"#utility.yul\":7033:7036   */\n  dup6\n    /* \"#utility.yul\":7015:7037   */\n  tag_32\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":7005:7013   */\n  dup4\n    /* \"#utility.yul\":7001:7038   */\n  add\n    /* \"#utility.yul\":6988:6999   */\n  dup3\n    /* \"#utility.yul\":6959:7039   */\n  tag_41\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6618:7049   */\n  pop\n  pop\n    /* \"#utility.yul\":6603:7049   */\ntag_125:\n    /* \"#utility.yul\":6513:7056   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7062:7179   */\ntag_43:\n    /* \"#utility.yul\":7116:7124   */\n  0x00\n    /* \"#utility.yul\":7166:7171   */\n  dup3\n    /* \"#utility.yul\":7160:7164   */\n  dup3\n    /* \"#utility.yul\":7156:7172   */\n  shr\n    /* \"#utility.yul\":7135:7172   */\n  swap1\n  pop\n    /* \"#utility.yul\":7062:7179   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7185:7354   */\ntag_44:\n    /* \"#utility.yul\":7229:7235   */\n  0x00\n    /* \"#utility.yul\":7262:7313   */\n  tag_133\n    /* \"#utility.yul\":7310:7311   */\n  0x00\n    /* \"#utility.yul\":7306:7312   */\n  not\n    /* \"#utility.yul\":7298:7303   */\n  dup5\n    /* \"#utility.yul\":7295:7296   */\n  0x08\n    /* \"#utility.yul\":7291:7304   */\n  mul\n    /* \"#utility.yul\":7262:7313   */\n  tag_43\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7258:7314   */\n  not\n    /* \"#utility.yul\":7343:7347   */\n  dup1\n    /* \"#utility.yul\":7337:7341   */\n  dup4\n    /* \"#utility.yul\":7333:7348   */\n  and\n    /* \"#utility.yul\":7323:7348   */\n  swap2\n  pop\n    /* \"#utility.yul\":7236:7354   */\n  pop\n    /* \"#utility.yul\":7185:7354   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7359:7654   */\ntag_45:\n    /* \"#utility.yul\":7435:7439   */\n  0x00\n    /* \"#utility.yul\":7581:7610   */\n  tag_135\n    /* \"#utility.yul\":7606:7609   */\n  dup4\n    /* \"#utility.yul\":7600:7604   */\n  dup4\n    /* \"#utility.yul\":7581:7610   */\n  tag_44\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7573:7610   */\n  swap2\n  pop\n    /* \"#utility.yul\":7643:7646   */\n  dup3\n    /* \"#utility.yul\":7640:7641   */\n  0x02\n    /* \"#utility.yul\":7636:7647   */\n  mul\n    /* \"#utility.yul\":7630:7634   */\n  dup3\n    /* \"#utility.yul\":7627:7648   */\n  or\n    /* \"#utility.yul\":7619:7648   */\n  swap1\n  pop\n    /* \"#utility.yul\":7359:7654   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7659:9054   */\ntag_8:\n    /* \"#utility.yul\":7776:7813   */\n  tag_137\n    /* \"#utility.yul\":7809:7812   */\n  dup3\n    /* \"#utility.yul\":7776:7813   */\n  tag_28\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":7878:7896   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7870:7876   */\n  dup2\n    /* \"#utility.yul\":7867:7897   */\n  gt\n    /* \"#utility.yul\":7864:7920   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":7900:7918   */\n  tag_139\n  tag_18\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":7864:7920   */\ntag_138:\n    /* \"#utility.yul\":7944:7982   */\n  tag_140\n    /* \"#utility.yul\":7976:7980   */\n  dup3\n    /* \"#utility.yul\":7970:7981   */\n  sload\n    /* \"#utility.yul\":7944:7982   */\n  tag_30\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":8029:8096   */\n  tag_141\n    /* \"#utility.yul\":8089:8095   */\n  dup3\n    /* \"#utility.yul\":8081:8087   */\n  dup3\n    /* \"#utility.yul\":8075:8079   */\n  dup6\n    /* \"#utility.yul\":8029:8096   */\n  tag_42\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":8123:8124   */\n  0x00\n    /* \"#utility.yul\":8147:8151   */\n  0x20\n    /* \"#utility.yul\":8134:8151   */\n  swap1\n  pop\n    /* \"#utility.yul\":8179:8181   */\n  0x1f\n    /* \"#utility.yul\":8171:8177   */\n  dup4\n    /* \"#utility.yul\":8168:8182   */\n  gt\n    /* \"#utility.yul\":8196:8197   */\n  0x01\n    /* \"#utility.yul\":8191:8809   */\n  dup2\n  eq\n  tag_143\n  jumpi\n    /* \"#utility.yul\":8853:8854   */\n  0x00\n    /* \"#utility.yul\":8870:8876   */\n  dup5\n    /* \"#utility.yul\":8867:8944   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":8919:8928   */\n  dup3\n    /* \"#utility.yul\":8914:8917   */\n  dup8\n    /* \"#utility.yul\":8910:8929   */\n  add\n    /* \"#utility.yul\":8904:8930   */\n  mload\n    /* \"#utility.yul\":8895:8930   */\n  swap1\n  pop\n    /* \"#utility.yul\":8867:8944   */\ntag_144:\n    /* \"#utility.yul\":8970:9037   */\n  tag_145\n    /* \"#utility.yul\":9030:9036   */\n  dup6\n    /* \"#utility.yul\":9023:9028   */\n  dup3\n    /* \"#utility.yul\":8970:9037   */\n  tag_45\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":8964:8968   */\n  dup7\n    /* \"#utility.yul\":8957:9038   */\n  sstore\n    /* \"#utility.yul\":8826:9048   */\n  pop\n    /* \"#utility.yul\":8161:9048   */\n  jump(tag_142)\n    /* \"#utility.yul\":8191:8809   */\ntag_143:\n    /* \"#utility.yul\":8243:8247   */\n  0x1f\n    /* \"#utility.yul\":8239:8248   */\n  not\n    /* \"#utility.yul\":8231:8237   */\n  dup5\n    /* \"#utility.yul\":8227:8249   */\n  and\n    /* \"#utility.yul\":8277:8314   */\n  tag_146\n    /* \"#utility.yul\":8309:8313   */\n  dup7\n    /* \"#utility.yul\":8277:8314   */\n  tag_31\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":8336:8337   */\n  0x00\n    /* \"#utility.yul\":8350:8558   */\ntag_147:\n    /* \"#utility.yul\":8364:8371   */\n  dup3\n    /* \"#utility.yul\":8361:8362   */\n  dup2\n    /* \"#utility.yul\":8358:8372   */\n  lt\n    /* \"#utility.yul\":8350:8558   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":8443:8452   */\n  dup5\n    /* \"#utility.yul\":8438:8441   */\n  dup10\n    /* \"#utility.yul\":8434:8453   */\n  add\n    /* \"#utility.yul\":8428:8454   */\n  mload\n    /* \"#utility.yul\":8420:8426   */\n  dup3\n    /* \"#utility.yul\":8413:8455   */\n  sstore\n    /* \"#utility.yul\":8494:8495   */\n  0x01\n    /* \"#utility.yul\":8486:8492   */\n  dup3\n    /* \"#utility.yul\":8482:8496   */\n  add\n    /* \"#utility.yul\":8472:8496   */\n  swap2\n  pop\n    /* \"#utility.yul\":8541:8543   */\n  0x20\n    /* \"#utility.yul\":8530:8539   */\n  dup6\n    /* \"#utility.yul\":8526:8544   */\n  add\n    /* \"#utility.yul\":8513:8544   */\n  swap5\n  pop\n    /* \"#utility.yul\":8387:8391   */\n  0x20\n    /* \"#utility.yul\":8384:8385   */\n  dup2\n    /* \"#utility.yul\":8380:8392   */\n  add\n    /* \"#utility.yul\":8375:8392   */\n  swap1\n  pop\n    /* \"#utility.yul\":8350:8558   */\n  jump(tag_147)\ntag_149:\n    /* \"#utility.yul\":8586:8592   */\n  dup7\n    /* \"#utility.yul\":8577:8584   */\n  dup4\n    /* \"#utility.yul\":8574:8593   */\n  lt\n    /* \"#utility.yul\":8571:8750   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":8644:8653   */\n  dup5\n    /* \"#utility.yul\":8639:8642   */\n  dup10\n    /* \"#utility.yul\":8635:8654   */\n  add\n    /* \"#utility.yul\":8629:8655   */\n  mload\n    /* \"#utility.yul\":8687:8735   */\n  tag_151\n    /* \"#utility.yul\":8729:8733   */\n  0x1f\n    /* \"#utility.yul\":8721:8727   */\n  dup10\n    /* \"#utility.yul\":8717:8734   */\n  and\n    /* \"#utility.yul\":8706:8715   */\n  dup3\n    /* \"#utility.yul\":8687:8735   */\n  tag_44\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":8679:8685   */\n  dup4\n    /* \"#utility.yul\":8672:8736   */\n  sstore\n    /* \"#utility.yul\":8594:8750   */\n  pop\n    /* \"#utility.yul\":8571:8750   */\ntag_150:\n    /* \"#utility.yul\":8796:8797   */\n  0x01\n    /* \"#utility.yul\":8792:8793   */\n  0x02\n    /* \"#utility.yul\":8784:8790   */\n  dup9\n    /* \"#utility.yul\":8780:8794   */\n  mul\n    /* \"#utility.yul\":8776:8798   */\n  add\n    /* \"#utility.yul\":8770:8774   */\n  dup9\n    /* \"#utility.yul\":8763:8799   */\n  sstore\n    /* \"#utility.yul\":8198:8809   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8161:9048   */\ntag_142:\n  pop\n    /* \"#utility.yul\":7751:9054   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7659:9054   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ExclusivePassToken.sol\":126:2933  contract ExclusivePassToken is ERC20 {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ExclusivePassToken.sol\":126:2933  contract ExclusivePassToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x61203265\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x906d895d\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x906d895d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x9b13b20e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd866b0b6\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      jump(tag_1)\n    tag_24:\n      dup1\n      0x61203265\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x676c0d77\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7b97008d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7ff9b596\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_23:\n      dup1\n      0x24600fc3\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x24600fc3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x520198a8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5a4dc09f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5f3d7fa1\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0a5d288c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ExclusivePassToken.sol\":235:264  uint256 public totalAttendees */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ExclusivePassToken.sol\":2301:2418  function withdrawFunds() external onlyOrganizer {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ExclusivePassToken.sol\":2655:2753  function getTicketsSold() external view returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ExclusivePassToken.sol\":2814:2930  function getTotalAccumulated() external view returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ExclusivePassToken.sol\":201:228  uint256 public maxAttendees */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ExclusivePassToken.sol\":170:194  address public organizer */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ExclusivePassToken.sol\":1197:1345  function updateTokenPrice(uint256 _newPrice) external onlyOrganizer {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ExclusivePassToken.sol\":1398:1836  function purchaseTokens(uint256 _amount) external payable {... */\n    tag_15:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"contracts/ExclusivePassToken.sol\":271:296  uint256 public tokenPrice */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ExclusivePassToken.sol\":2480:2596  function getAvailableSeats() external view returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ExclusivePassToken.sol\":1897:2228  function recordAttendance() external {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ExclusivePassToken.sol\":401:444  mapping(address => bool) public hasAttended */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      tag_121\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_125\n      jump\t// in\n    tag_126:\n      dup1\n      iszero\n      tag_127\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_128\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_127)\n    tag_128:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_129:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_129\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ExclusivePassToken.sol\":235:264  uint256 public totalAttendees */\n    tag_40:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ExclusivePassToken.sol\":2301:2418  function withdrawFunds() external onlyOrganizer {... */\n    tag_55:\n        /* \"contracts/ExclusivePassToken.sol\":1045:1054  organizer */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ExclusivePassToken.sol\":1031:1054  msg.sender == organizer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ExclusivePassToken.sol\":1031:1041  msg.sender */\n      caller\n        /* \"contracts/ExclusivePassToken.sol\":1031:1054  msg.sender == organizer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ExclusivePassToken.sol\":1023:1107  require(msg.sender == organizer, \"Solo un organizzatore puo eseguire questa azione\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"contracts/ExclusivePassToken.sol\":2368:2377  organizer */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ExclusivePassToken.sol\":2360:2387  payable(organizer).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ExclusivePassToken.sol\":2360:2410  payable(organizer).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/ExclusivePassToken.sol\":2388:2409  address(this).balance */\n      selfbalance\n        /* \"contracts/ExclusivePassToken.sol\":2360:2410  payable(organizer).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_148:\n      pop\n        /* \"contracts/ExclusivePassToken.sol\":2301:2418  function withdrawFunds() external onlyOrganizer {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ExclusivePassToken.sol\":2655:2753  function getTicketsSold() external view returns (uint256) {... */\n    tag_63:\n        /* \"contracts/ExclusivePassToken.sol\":2704:2711  uint256 */\n      0x00\n        /* \"contracts/ExclusivePassToken.sol\":2731:2745  totalAttendees */\n      sload(0x07)\n        /* \"contracts/ExclusivePassToken.sol\":2724:2745  return totalAttendees */\n      swap1\n      pop\n        /* \"contracts/ExclusivePassToken.sol\":2655:2753  function getTicketsSold() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ExclusivePassToken.sol\":2814:2930  function getTotalAccumulated() external view returns (uint256) {... */\n    tag_67:\n        /* \"contracts/ExclusivePassToken.sol\":2868:2875  uint256 */\n      0x00\n        /* \"contracts/ExclusivePassToken.sol\":2912:2922  tokenPrice */\n      sload(0x08)\n        /* \"contracts/ExclusivePassToken.sol\":2895:2909  totalAttendees */\n      sload(0x07)\n        /* \"contracts/ExclusivePassToken.sol\":2895:2922  totalAttendees * tokenPrice */\n      tag_152\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"contracts/ExclusivePassToken.sol\":2888:2922  return totalAttendees * tokenPrice */\n      swap1\n      pop\n        /* \"contracts/ExclusivePassToken.sol\":2814:2930  function getTotalAccumulated() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ExclusivePassToken.sol\":201:228  uint256 public maxAttendees */\n    tag_71:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/ExclusivePassToken.sol\":170:194  address public organizer */\n    tag_75:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ExclusivePassToken.sol\":1197:1345  function updateTokenPrice(uint256 _newPrice) external onlyOrganizer {... */\n    tag_82:\n        /* \"contracts/ExclusivePassToken.sol\":1045:1054  organizer */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ExclusivePassToken.sol\":1031:1054  msg.sender == organizer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ExclusivePassToken.sol\":1031:1041  msg.sender */\n      caller\n        /* \"contracts/ExclusivePassToken.sol\":1031:1054  msg.sender == organizer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ExclusivePassToken.sol\":1023:1107  require(msg.sender == organizer, \"Solo un organizzatore puo eseguire questa azione\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_145\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"contracts/ExclusivePassToken.sol\":1289:1298  _newPrice */\n      dup1\n        /* \"contracts/ExclusivePassToken.sol\":1276:1286  tokenPrice */\n      0x08\n        /* \"contracts/ExclusivePassToken.sol\":1276:1298  tokenPrice = _newPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ExclusivePassToken.sol\":1314:1337  PriceUpdated(_newPrice) */\n      0x66cbca4f3c64fecf1dcb9ce094abcf7f68c3450a1d4e3a8e917dd621edb4ebe0\n        /* \"contracts/ExclusivePassToken.sol\":1327:1336  _newPrice */\n      dup2\n        /* \"contracts/ExclusivePassToken.sol\":1314:1337  PriceUpdated(_newPrice) */\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ExclusivePassToken.sol\":1197:1345  function updateTokenPrice(uint256 _newPrice) external onlyOrganizer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ExclusivePassToken.sol\":1398:1836  function purchaseTokens(uint256 _amount) external payable {... */\n    tag_91:\n        /* \"contracts/ExclusivePassToken.sol\":1467:1485  uint256 totalPrice */\n      0x00\n        /* \"contracts/ExclusivePassToken.sol\":1498:1508  tokenPrice */\n      sload(0x08)\n        /* \"contracts/ExclusivePassToken.sol\":1488:1495  _amount */\n      dup3\n        /* \"contracts/ExclusivePassToken.sol\":1488:1508  _amount * tokenPrice */\n      tag_161\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_161:\n        /* \"contracts/ExclusivePassToken.sol\":1467:1508  uint256 totalPrice = _amount * tokenPrice */\n      swap1\n      pop\n        /* \"contracts/ExclusivePassToken.sol\":1554:1566  maxAttendees */\n      sload(0x06)\n        /* \"contracts/ExclusivePassToken.sol\":1543:1550  _amount */\n      dup3\n        /* \"contracts/ExclusivePassToken.sol\":1527:1540  totalSupply() */\n      tag_162\n        /* \"contracts/ExclusivePassToken.sol\":1527:1538  totalSupply */\n      tag_45\n        /* \"contracts/ExclusivePassToken.sol\":1527:1540  totalSupply() */\n      jump\t// in\n    tag_162:\n        /* \"contracts/ExclusivePassToken.sol\":1527:1550  totalSupply() + _amount */\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"contracts/ExclusivePassToken.sol\":1527:1566  totalSupply() + _amount <= maxAttendees */\n      gt\n      iszero\n        /* \"contracts/ExclusivePassToken.sol\":1519:1613  require(totalSupply() + _amount <= maxAttendees, \"Superato il numero massimo di partecipanti\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"contracts/ExclusivePassToken.sol\":1645:1655  totalPrice */\n      dup1\n        /* \"contracts/ExclusivePassToken.sol\":1632:1641  msg.value */\n      callvalue\n        /* \"contracts/ExclusivePassToken.sol\":1632:1655  msg.value == totalPrice */\n      eq\n        /* \"contracts/ExclusivePassToken.sol\":1624:1688  require(msg.value == totalPrice, \"Importo inviato non corretto\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"contracts/ExclusivePassToken.sol\":1701:1727  _mint(msg.sender, _amount) */\n      tag_171\n        /* \"contracts/ExclusivePassToken.sol\":1707:1717  msg.sender */\n      caller\n        /* \"contracts/ExclusivePassToken.sol\":1719:1726  _amount */\n      dup4\n        /* \"contracts/ExclusivePassToken.sol\":1701:1706  _mint */\n      tag_172\n        /* \"contracts/ExclusivePassToken.sol\":1701:1727  _mint(msg.sender, _amount) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/ExclusivePassToken.sol\":1756:1763  _amount */\n      dup2\n        /* \"contracts/ExclusivePassToken.sol\":1738:1752  totalAttendees */\n      0x07\n      0x00\n        /* \"contracts/ExclusivePassToken.sol\":1738:1763  totalAttendees += _amount */\n      dup3\n      dup3\n      sload\n      tag_173\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_173:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ExclusivePassToken.sol\":1796:1806  msg.sender */\n      caller\n        /* \"contracts/ExclusivePassToken.sol\":1781:1828  TokenPurchased(msg.sender, _amount, totalPrice) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3ceffd410054fdaed44f598ff5c1fb450658778e2241892da4aa646979dee617\n        /* \"contracts/ExclusivePassToken.sol\":1808:1815  _amount */\n      dup4\n        /* \"contracts/ExclusivePassToken.sol\":1817:1827  totalPrice */\n      dup4\n        /* \"contracts/ExclusivePassToken.sol\":1781:1828  TokenPurchased(msg.sender, _amount, totalPrice) */\n      mload(0x40)\n      tag_174\n      swap3\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ExclusivePassToken.sol\":1456:1836  {... */\n      pop\n        /* \"contracts/ExclusivePassToken.sol\":1398:1836  function purchaseTokens(uint256 _amount) external payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/ExclusivePassToken.sol\":271:296  uint256 public tokenPrice */\n    tag_94:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/ExclusivePassToken.sol\":2480:2596  function getAvailableSeats() external view returns (uint256) {... */\n    tag_98:\n        /* \"contracts/ExclusivePassToken.sol\":2532:2539  uint256 */\n      0x00\n        /* \"contracts/ExclusivePassToken.sol\":2574:2588  totalAttendees */\n      sload(0x07)\n        /* \"contracts/ExclusivePassToken.sol\":2559:2571  maxAttendees */\n      sload(0x06)\n        /* \"contracts/ExclusivePassToken.sol\":2559:2588  maxAttendees - totalAttendees */\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"contracts/ExclusivePassToken.sol\":2552:2588  return maxAttendees - totalAttendees */\n      swap1\n      pop\n        /* \"contracts/ExclusivePassToken.sol\":2480:2596  function getAvailableSeats() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_180\n      swap1\n      tag_125\n      jump\t// in\n    tag_180:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_181\n      swap1\n      tag_125\n      jump\t// in\n    tag_181:\n      dup1\n      iszero\n      tag_182\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_183\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_182)\n    tag_183:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_184:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_184\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_182:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ExclusivePassToken.sol\":1897:2228  function recordAttendance() external {... */\n    tag_106:\n        /* \"contracts/ExclusivePassToken.sol\":1977:1978  0 */\n      0x00\n        /* \"contracts/ExclusivePassToken.sol\":1953:1974  balanceOf(msg.sender) */\n      tag_186\n        /* \"contracts/ExclusivePassToken.sol\":1963:1973  msg.sender */\n      caller\n        /* \"contracts/ExclusivePassToken.sol\":1953:1962  balanceOf */\n      tag_87\n        /* \"contracts/ExclusivePassToken.sol\":1953:1974  balanceOf(msg.sender) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/ExclusivePassToken.sol\":1953:1978  balanceOf(msg.sender) > 0 */\n      gt\n        /* \"contracts/ExclusivePassToken.sol\":1945:2005  require(balanceOf(msg.sender) > 0, \"Nessun token posseduto\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/ExclusivePassToken.sol\":2025:2036  hasAttended */\n      0x09\n        /* \"contracts/ExclusivePassToken.sol\":2025:2048  hasAttended[msg.sender] */\n      0x00\n        /* \"contracts/ExclusivePassToken.sol\":2037:2047  msg.sender */\n      caller\n        /* \"contracts/ExclusivePassToken.sol\":2025:2048  hasAttended[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ExclusivePassToken.sol\":2024:2048  !hasAttended[msg.sender] */\n      iszero\n        /* \"contracts/ExclusivePassToken.sol\":2016:2069  require(!hasAttended[msg.sender], \"Token utilizzato\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"contracts/ExclusivePassToken.sol\":2108:2112  true */\n      0x01\n        /* \"contracts/ExclusivePassToken.sol\":2082:2093  hasAttended */\n      0x09\n        /* \"contracts/ExclusivePassToken.sol\":2082:2105  hasAttended[msg.sender] */\n      0x00\n        /* \"contracts/ExclusivePassToken.sol\":2094:2104  msg.sender */\n      caller\n        /* \"contracts/ExclusivePassToken.sol\":2082:2105  hasAttended[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ExclusivePassToken.sol\":2082:2112  hasAttended[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ExclusivePassToken.sol\":2123:2137  totalAttendees */\n      0x07\n      0x00\n        /* \"contracts/ExclusivePassToken.sol\":2123:2139  totalAttendees-- */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/ExclusivePassToken.sol\":2152:2172  _burn(msg.sender, 1) */\n      tag_195\n        /* \"contracts/ExclusivePassToken.sol\":2158:2168  msg.sender */\n      caller\n        /* \"contracts/ExclusivePassToken.sol\":2170:2171  1 */\n      0x01\n        /* \"contracts/ExclusivePassToken.sol\":2152:2157  _burn */\n      tag_196\n        /* \"contracts/ExclusivePassToken.sol\":2152:2172  _burn(msg.sender, 1) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/ExclusivePassToken.sol\":2209:2219  msg.sender */\n      caller\n        /* \"contracts/ExclusivePassToken.sol\":2190:2220  AttendanceRecorded(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x316d1ea3d1525e2bff370eb30cae16e7a334c48bb414303791bc219776e2cc26\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ExclusivePassToken.sol\":1897:2228  function recordAttendance() external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ExclusivePassToken.sol\":401:444  mapping(address => bool) public hasAttended */\n    tag_115:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_215\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_233\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_236\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_236:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_237)\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_241)\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_242\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_243:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_244:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_245:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_246:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_247:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_282\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_243\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":711:782   */\n      tag_283\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_244\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_284\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_245\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":881:910   */\n      tag_285\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_246\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_30:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_287\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_247\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_249:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_251:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_252:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_293\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_251\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_253:\n        /* \"#utility.yul\":1876:1900   */\n      tag_295\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_252\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_296:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_254:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_298\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_253\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_255:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_256:\n        /* \"#utility.yul\":2232:2256   */\n      tag_301\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_255\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_302:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_257:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_304\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_256\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_34:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_307\n      tag_249\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":2525:2644   */\n    tag_306:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_308\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_254\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_309\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_257\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_258:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_259:\n        /* \"#utility.yul\":3089:3110   */\n      tag_312\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_258\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_37:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_314\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_259\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_260:\n        /* \"#utility.yul\":3426:3450   */\n      tag_316\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_255\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_42:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_318\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_260\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_50:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_321\n      tag_249\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":3801:3920   */\n    tag_320:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_322\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_254\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_323\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_254\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_324\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_257\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_261:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_262:\n        /* \"#utility.yul\":4491:4513   */\n      tag_327\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_261\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_60:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_329\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_262\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:4864   */\n    tag_263:\n        /* \"#utility.yul\":4833:4857   */\n      tag_331\n        /* \"#utility.yul\":4851:4856   */\n      dup2\n        /* \"#utility.yul\":4833:4857   */\n      tag_252\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":4828:4831   */\n      dup3\n        /* \"#utility.yul\":4821:4858   */\n      mstore\n        /* \"#utility.yul\":4746:4864   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4870:5092   */\n    tag_77:\n        /* \"#utility.yul\":4963:4967   */\n      0x00\n        /* \"#utility.yul\":5001:5003   */\n      0x20\n        /* \"#utility.yul\":4990:4999   */\n      dup3\n        /* \"#utility.yul\":4986:5004   */\n      add\n        /* \"#utility.yul\":4978:5004   */\n      swap1\n      pop\n        /* \"#utility.yul\":5014:5085   */\n      tag_333\n        /* \"#utility.yul\":5082:5083   */\n      0x00\n        /* \"#utility.yul\":5071:5080   */\n      dup4\n        /* \"#utility.yul\":5067:5084   */\n      add\n        /* \"#utility.yul\":5058:5064   */\n      dup5\n        /* \"#utility.yul\":5014:5085   */\n      tag_263\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":4870:5092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5098:5427   */\n    tag_81:\n        /* \"#utility.yul\":5157:5163   */\n      0x00\n        /* \"#utility.yul\":5206:5208   */\n      0x20\n        /* \"#utility.yul\":5194:5203   */\n      dup3\n        /* \"#utility.yul\":5185:5192   */\n      dup5\n        /* \"#utility.yul\":5181:5204   */\n      sub\n        /* \"#utility.yul\":5177:5209   */\n      slt\n        /* \"#utility.yul\":5174:5293   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":5212:5291   */\n      tag_336\n      tag_249\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":5174:5293   */\n    tag_335:\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5357:5410   */\n      tag_337\n        /* \"#utility.yul\":5402:5409   */\n      dup5\n        /* \"#utility.yul\":5393:5399   */\n      dup3\n        /* \"#utility.yul\":5382:5391   */\n      dup6\n        /* \"#utility.yul\":5378:5400   */\n      add\n        /* \"#utility.yul\":5357:5410   */\n      tag_257\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":5347:5410   */\n      swap2\n      pop\n        /* \"#utility.yul\":5303:5420   */\n      pop\n        /* \"#utility.yul\":5098:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5762   */\n    tag_86:\n        /* \"#utility.yul\":5492:5498   */\n      0x00\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5529:5538   */\n      dup3\n        /* \"#utility.yul\":5520:5527   */\n      dup5\n        /* \"#utility.yul\":5516:5539   */\n      sub\n        /* \"#utility.yul\":5512:5544   */\n      slt\n        /* \"#utility.yul\":5509:5628   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":5547:5626   */\n      tag_340\n      tag_249\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":5509:5628   */\n    tag_339:\n        /* \"#utility.yul\":5667:5668   */\n      0x00\n        /* \"#utility.yul\":5692:5745   */\n      tag_341\n        /* \"#utility.yul\":5737:5744   */\n      dup5\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5717:5726   */\n      dup6\n        /* \"#utility.yul\":5713:5735   */\n      add\n        /* \"#utility.yul\":5692:5745   */\n      tag_254\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":5682:5745   */\n      swap2\n      pop\n        /* \"#utility.yul\":5638:5755   */\n      pop\n        /* \"#utility.yul\":5433:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_120:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      dup1\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_344\n      tag_249\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":5861:5980   */\n    tag_343:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_345\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_254\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_346\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_254\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_264:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_125:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_349\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_349:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_351\n      tag_264\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":6664:6748   */\n    tag_350:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6995   */\n    tag_265:\n        /* \"#utility.yul\":6900:6934   */\n      0x536f6c6f20756e206f7267616e697a7a61746f72652070756f20657365677569\n        /* \"#utility.yul\":6896:6897   */\n      0x00\n        /* \"#utility.yul\":6888:6894   */\n      dup3\n        /* \"#utility.yul\":6884:6898   */\n      add\n        /* \"#utility.yul\":6877:6935   */\n      mstore\n        /* \"#utility.yul\":6969:6987   */\n      0x72652071756573746120617a696f6e6500000000000000000000000000000000\n        /* \"#utility.yul\":6964:6966   */\n      0x20\n        /* \"#utility.yul\":6956:6962   */\n      dup3\n        /* \"#utility.yul\":6952:6967   */\n      add\n        /* \"#utility.yul\":6945:6988   */\n      mstore\n        /* \"#utility.yul\":6760:6995   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7001:7367   */\n    tag_266:\n        /* \"#utility.yul\":7143:7146   */\n      0x00\n        /* \"#utility.yul\":7164:7231   */\n      tag_354\n        /* \"#utility.yul\":7228:7230   */\n      0x30\n        /* \"#utility.yul\":7223:7226   */\n      dup4\n        /* \"#utility.yul\":7164:7231   */\n      tag_244\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":7157:7231   */\n      swap2\n      pop\n        /* \"#utility.yul\":7240:7333   */\n      tag_355\n        /* \"#utility.yul\":7329:7332   */\n      dup3\n        /* \"#utility.yul\":7240:7333   */\n      tag_265\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":7358:7360   */\n      0x40\n        /* \"#utility.yul\":7353:7356   */\n      dup3\n        /* \"#utility.yul\":7349:7361   */\n      add\n        /* \"#utility.yul\":7342:7361   */\n      swap1\n      pop\n        /* \"#utility.yul\":7001:7367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7373:7792   */\n    tag_145:\n        /* \"#utility.yul\":7539:7543   */\n      0x00\n        /* \"#utility.yul\":7577:7579   */\n      0x20\n        /* \"#utility.yul\":7566:7575   */\n      dup3\n        /* \"#utility.yul\":7562:7580   */\n      add\n        /* \"#utility.yul\":7554:7580   */\n      swap1\n      pop\n        /* \"#utility.yul\":7626:7635   */\n      dup2\n        /* \"#utility.yul\":7620:7624   */\n      dup2\n        /* \"#utility.yul\":7616:7636   */\n      sub\n        /* \"#utility.yul\":7612:7613   */\n      0x00\n        /* \"#utility.yul\":7601:7610   */\n      dup4\n        /* \"#utility.yul\":7597:7614   */\n      add\n        /* \"#utility.yul\":7590:7637   */\n      mstore\n        /* \"#utility.yul\":7654:7785   */\n      tag_357\n        /* \"#utility.yul\":7780:7784   */\n      dup2\n        /* \"#utility.yul\":7654:7785   */\n      tag_266\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":7646:7785   */\n      swap1\n      pop\n        /* \"#utility.yul\":7373:7792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7798:7978   */\n    tag_267:\n        /* \"#utility.yul\":7846:7923   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7843:7844   */\n      0x00\n        /* \"#utility.yul\":7836:7924   */\n      mstore\n        /* \"#utility.yul\":7943:7947   */\n      0x11\n        /* \"#utility.yul\":7940:7941   */\n      0x04\n        /* \"#utility.yul\":7933:7948   */\n      mstore\n        /* \"#utility.yul\":7967:7971   */\n      0x24\n        /* \"#utility.yul\":7964:7965   */\n      0x00\n        /* \"#utility.yul\":7957:7972   */\n      revert\n        /* \"#utility.yul\":7984:8394   */\n    tag_153:\n        /* \"#utility.yul\":8024:8031   */\n      0x00\n        /* \"#utility.yul\":8047:8067   */\n      tag_360\n        /* \"#utility.yul\":8065:8066   */\n      dup3\n        /* \"#utility.yul\":8047:8067   */\n      tag_255\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":8042:8067   */\n      swap2\n      pop\n        /* \"#utility.yul\":8081:8101   */\n      tag_361\n        /* \"#utility.yul\":8099:8100   */\n      dup4\n        /* \"#utility.yul\":8081:8101   */\n      tag_255\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":8076:8101   */\n      swap3\n      pop\n        /* \"#utility.yul\":8136:8137   */\n      dup3\n        /* \"#utility.yul\":8133:8134   */\n      dup3\n        /* \"#utility.yul\":8129:8138   */\n      mul\n        /* \"#utility.yul\":8158:8188   */\n      tag_362\n        /* \"#utility.yul\":8176:8187   */\n      dup2\n        /* \"#utility.yul\":8158:8188   */\n      tag_255\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":8147:8188   */\n      swap2\n      pop\n        /* \"#utility.yul\":8337:8338   */\n      dup3\n        /* \"#utility.yul\":8328:8335   */\n      dup3\n        /* \"#utility.yul\":8324:8339   */\n      div\n        /* \"#utility.yul\":8321:8322   */\n      dup5\n        /* \"#utility.yul\":8318:8340   */\n      eq\n        /* \"#utility.yul\":8298:8299   */\n      dup4\n        /* \"#utility.yul\":8291:8300   */\n      iszero\n        /* \"#utility.yul\":8271:8354   */\n      or\n        /* \"#utility.yul\":8248:8387   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":8367:8385   */\n      tag_364\n      tag_267\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":8248:8387   */\n    tag_363:\n        /* \"#utility.yul\":8032:8394   */\n      pop\n        /* \"#utility.yul\":7984:8394   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8400:8591   */\n    tag_164:\n        /* \"#utility.yul\":8440:8443   */\n      0x00\n        /* \"#utility.yul\":8459:8479   */\n      tag_366\n        /* \"#utility.yul\":8477:8478   */\n      dup3\n        /* \"#utility.yul\":8459:8479   */\n      tag_255\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":8454:8479   */\n      swap2\n      pop\n        /* \"#utility.yul\":8493:8513   */\n      tag_367\n        /* \"#utility.yul\":8511:8512   */\n      dup4\n        /* \"#utility.yul\":8493:8513   */\n      tag_255\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":8488:8513   */\n      swap3\n      pop\n        /* \"#utility.yul\":8536:8537   */\n      dup3\n        /* \"#utility.yul\":8533:8534   */\n      dup3\n        /* \"#utility.yul\":8529:8538   */\n      add\n        /* \"#utility.yul\":8522:8538   */\n      swap1\n      pop\n        /* \"#utility.yul\":8557:8560   */\n      dup1\n        /* \"#utility.yul\":8554:8555   */\n      dup3\n        /* \"#utility.yul\":8551:8561   */\n      gt\n        /* \"#utility.yul\":8548:8584   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":8564:8582   */\n      tag_369\n      tag_267\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":8548:8584   */\n    tag_368:\n        /* \"#utility.yul\":8400:8591   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8597:8826   */\n    tag_268:\n        /* \"#utility.yul\":8737:8771   */\n      0x537570657261746f20696c206e756d65726f206d617373696d6f206469207061\n        /* \"#utility.yul\":8733:8734   */\n      0x00\n        /* \"#utility.yul\":8725:8731   */\n      dup3\n        /* \"#utility.yul\":8721:8735   */\n      add\n        /* \"#utility.yul\":8714:8772   */\n      mstore\n        /* \"#utility.yul\":8806:8818   */\n      0x727465636970616e746900000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8801:8803   */\n      0x20\n        /* \"#utility.yul\":8793:8799   */\n      dup3\n        /* \"#utility.yul\":8789:8804   */\n      add\n        /* \"#utility.yul\":8782:8819   */\n      mstore\n        /* \"#utility.yul\":8597:8826   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8832:9198   */\n    tag_269:\n        /* \"#utility.yul\":8974:8977   */\n      0x00\n        /* \"#utility.yul\":8995:9062   */\n      tag_372\n        /* \"#utility.yul\":9059:9061   */\n      0x2a\n        /* \"#utility.yul\":9054:9057   */\n      dup4\n        /* \"#utility.yul\":8995:9062   */\n      tag_244\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":8988:9062   */\n      swap2\n      pop\n        /* \"#utility.yul\":9071:9164   */\n      tag_373\n        /* \"#utility.yul\":9160:9163   */\n      dup3\n        /* \"#utility.yul\":9071:9164   */\n      tag_268\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":9189:9191   */\n      0x40\n        /* \"#utility.yul\":9184:9187   */\n      dup3\n        /* \"#utility.yul\":9180:9192   */\n      add\n        /* \"#utility.yul\":9173:9192   */\n      swap1\n      pop\n        /* \"#utility.yul\":8832:9198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9204:9623   */\n    tag_167:\n        /* \"#utility.yul\":9370:9374   */\n      0x00\n        /* \"#utility.yul\":9408:9410   */\n      0x20\n        /* \"#utility.yul\":9397:9406   */\n      dup3\n        /* \"#utility.yul\":9393:9411   */\n      add\n        /* \"#utility.yul\":9385:9411   */\n      swap1\n      pop\n        /* \"#utility.yul\":9457:9466   */\n      dup2\n        /* \"#utility.yul\":9451:9455   */\n      dup2\n        /* \"#utility.yul\":9447:9467   */\n      sub\n        /* \"#utility.yul\":9443:9444   */\n      0x00\n        /* \"#utility.yul\":9432:9441   */\n      dup4\n        /* \"#utility.yul\":9428:9445   */\n      add\n        /* \"#utility.yul\":9421:9468   */\n      mstore\n        /* \"#utility.yul\":9485:9616   */\n      tag_375\n        /* \"#utility.yul\":9611:9615   */\n      dup2\n        /* \"#utility.yul\":9485:9616   */\n      tag_269\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":9477:9616   */\n      swap1\n      pop\n        /* \"#utility.yul\":9204:9623   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9629:9807   */\n    tag_270:\n        /* \"#utility.yul\":9769:9799   */\n      0x496d706f72746f20696e766961746f206e6f6e20636f72726574746f00000000\n        /* \"#utility.yul\":9765:9766   */\n      0x00\n        /* \"#utility.yul\":9757:9763   */\n      dup3\n        /* \"#utility.yul\":9753:9767   */\n      add\n        /* \"#utility.yul\":9746:9800   */\n      mstore\n        /* \"#utility.yul\":9629:9807   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9813:10179   */\n    tag_271:\n        /* \"#utility.yul\":9955:9958   */\n      0x00\n        /* \"#utility.yul\":9976:10043   */\n      tag_378\n        /* \"#utility.yul\":10040:10042   */\n      0x1c\n        /* \"#utility.yul\":10035:10038   */\n      dup4\n        /* \"#utility.yul\":9976:10043   */\n      tag_244\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":9969:10043   */\n      swap2\n      pop\n        /* \"#utility.yul\":10052:10145   */\n      tag_379\n        /* \"#utility.yul\":10141:10144   */\n      dup3\n        /* \"#utility.yul\":10052:10145   */\n      tag_270\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":10170:10172   */\n      0x20\n        /* \"#utility.yul\":10165:10168   */\n      dup3\n        /* \"#utility.yul\":10161:10173   */\n      add\n        /* \"#utility.yul\":10154:10173   */\n      swap1\n      pop\n        /* \"#utility.yul\":9813:10179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10185:10604   */\n    tag_170:\n        /* \"#utility.yul\":10351:10355   */\n      0x00\n        /* \"#utility.yul\":10389:10391   */\n      0x20\n        /* \"#utility.yul\":10378:10387   */\n      dup3\n        /* \"#utility.yul\":10374:10392   */\n      add\n        /* \"#utility.yul\":10366:10392   */\n      swap1\n      pop\n        /* \"#utility.yul\":10438:10447   */\n      dup2\n        /* \"#utility.yul\":10432:10436   */\n      dup2\n        /* \"#utility.yul\":10428:10448   */\n      sub\n        /* \"#utility.yul\":10424:10425   */\n      0x00\n        /* \"#utility.yul\":10413:10422   */\n      dup4\n        /* \"#utility.yul\":10409:10426   */\n      add\n        /* \"#utility.yul\":10402:10449   */\n      mstore\n        /* \"#utility.yul\":10466:10597   */\n      tag_381\n        /* \"#utility.yul\":10592:10596   */\n      dup2\n        /* \"#utility.yul\":10466:10597   */\n      tag_271\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":10458:10597   */\n      swap1\n      pop\n        /* \"#utility.yul\":10185:10604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10610:10942   */\n    tag_175:\n        /* \"#utility.yul\":10731:10735   */\n      0x00\n        /* \"#utility.yul\":10769:10771   */\n      0x40\n        /* \"#utility.yul\":10758:10767   */\n      dup3\n        /* \"#utility.yul\":10754:10772   */\n      add\n        /* \"#utility.yul\":10746:10772   */\n      swap1\n      pop\n        /* \"#utility.yul\":10782:10853   */\n      tag_383\n        /* \"#utility.yul\":10850:10851   */\n      0x00\n        /* \"#utility.yul\":10839:10848   */\n      dup4\n        /* \"#utility.yul\":10835:10852   */\n      add\n        /* \"#utility.yul\":10826:10832   */\n      dup6\n        /* \"#utility.yul\":10782:10853   */\n      tag_260\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":10863:10935   */\n      tag_384\n        /* \"#utility.yul\":10931:10933   */\n      0x20\n        /* \"#utility.yul\":10920:10929   */\n      dup4\n        /* \"#utility.yul\":10916:10934   */\n      add\n        /* \"#utility.yul\":10907:10913   */\n      dup5\n        /* \"#utility.yul\":10863:10935   */\n      tag_260\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":10610:10942   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10948:11142   */\n    tag_178:\n        /* \"#utility.yul\":10988:10992   */\n      0x00\n        /* \"#utility.yul\":11008:11028   */\n      tag_386\n        /* \"#utility.yul\":11026:11027   */\n      dup3\n        /* \"#utility.yul\":11008:11028   */\n      tag_255\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":11003:11028   */\n      swap2\n      pop\n        /* \"#utility.yul\":11042:11062   */\n      tag_387\n        /* \"#utility.yul\":11060:11061   */\n      dup4\n        /* \"#utility.yul\":11042:11062   */\n      tag_255\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":11037:11062   */\n      swap3\n      pop\n        /* \"#utility.yul\":11086:11087   */\n      dup3\n        /* \"#utility.yul\":11083:11084   */\n      dup3\n        /* \"#utility.yul\":11079:11088   */\n      sub\n        /* \"#utility.yul\":11071:11088   */\n      swap1\n      pop\n        /* \"#utility.yul\":11110:11111   */\n      dup2\n        /* \"#utility.yul\":11104:11108   */\n      dup2\n        /* \"#utility.yul\":11101:11112   */\n      gt\n        /* \"#utility.yul\":11098:11135   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":11115:11133   */\n      tag_389\n      tag_267\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":11098:11135   */\n    tag_388:\n        /* \"#utility.yul\":10948:11142   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11148:11320   */\n    tag_272:\n        /* \"#utility.yul\":11288:11312   */\n      0x4e657373756e20746f6b656e20706f7373656475746f00000000000000000000\n        /* \"#utility.yul\":11284:11285   */\n      0x00\n        /* \"#utility.yul\":11276:11282   */\n      dup3\n        /* \"#utility.yul\":11272:11286   */\n      add\n        /* \"#utility.yul\":11265:11313   */\n      mstore\n        /* \"#utility.yul\":11148:11320   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11326:11692   */\n    tag_273:\n        /* \"#utility.yul\":11468:11471   */\n      0x00\n        /* \"#utility.yul\":11489:11556   */\n      tag_392\n        /* \"#utility.yul\":11553:11555   */\n      0x16\n        /* \"#utility.yul\":11548:11551   */\n      dup4\n        /* \"#utility.yul\":11489:11556   */\n      tag_244\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":11482:11556   */\n      swap2\n      pop\n        /* \"#utility.yul\":11565:11658   */\n      tag_393\n        /* \"#utility.yul\":11654:11657   */\n      dup3\n        /* \"#utility.yul\":11565:11658   */\n      tag_272\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":11683:11685   */\n      0x20\n        /* \"#utility.yul\":11678:11681   */\n      dup3\n        /* \"#utility.yul\":11674:11686   */\n      add\n        /* \"#utility.yul\":11667:11686   */\n      swap1\n      pop\n        /* \"#utility.yul\":11326:11692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11698:12117   */\n    tag_189:\n        /* \"#utility.yul\":11864:11868   */\n      0x00\n        /* \"#utility.yul\":11902:11904   */\n      0x20\n        /* \"#utility.yul\":11891:11900   */\n      dup3\n        /* \"#utility.yul\":11887:11905   */\n      add\n        /* \"#utility.yul\":11879:11905   */\n      swap1\n      pop\n        /* \"#utility.yul\":11951:11960   */\n      dup2\n        /* \"#utility.yul\":11945:11949   */\n      dup2\n        /* \"#utility.yul\":11941:11961   */\n      sub\n        /* \"#utility.yul\":11937:11938   */\n      0x00\n        /* \"#utility.yul\":11926:11935   */\n      dup4\n        /* \"#utility.yul\":11922:11939   */\n      add\n        /* \"#utility.yul\":11915:11962   */\n      mstore\n        /* \"#utility.yul\":11979:12110   */\n      tag_395\n        /* \"#utility.yul\":12105:12109   */\n      dup2\n        /* \"#utility.yul\":11979:12110   */\n      tag_273\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":11971:12110   */\n      swap1\n      pop\n        /* \"#utility.yul\":11698:12117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12123:12289   */\n    tag_274:\n        /* \"#utility.yul\":12263:12281   */\n      0x546f6b656e207574696c697a7a61746f00000000000000000000000000000000\n        /* \"#utility.yul\":12259:12260   */\n      0x00\n        /* \"#utility.yul\":12251:12257   */\n      dup3\n        /* \"#utility.yul\":12247:12261   */\n      add\n        /* \"#utility.yul\":12240:12282   */\n      mstore\n        /* \"#utility.yul\":12123:12289   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12295:12661   */\n    tag_275:\n        /* \"#utility.yul\":12437:12440   */\n      0x00\n        /* \"#utility.yul\":12458:12525   */\n      tag_398\n        /* \"#utility.yul\":12522:12524   */\n      0x10\n        /* \"#utility.yul\":12517:12520   */\n      dup4\n        /* \"#utility.yul\":12458:12525   */\n      tag_244\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":12451:12525   */\n      swap2\n      pop\n        /* \"#utility.yul\":12534:12627   */\n      tag_399\n        /* \"#utility.yul\":12623:12626   */\n      dup3\n        /* \"#utility.yul\":12534:12627   */\n      tag_274\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":12652:12654   */\n      0x20\n        /* \"#utility.yul\":12647:12650   */\n      dup3\n        /* \"#utility.yul\":12643:12655   */\n      add\n        /* \"#utility.yul\":12636:12655   */\n      swap1\n      pop\n        /* \"#utility.yul\":12295:12661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12667:13086   */\n    tag_192:\n        /* \"#utility.yul\":12833:12837   */\n      0x00\n        /* \"#utility.yul\":12871:12873   */\n      0x20\n        /* \"#utility.yul\":12860:12869   */\n      dup3\n        /* \"#utility.yul\":12856:12874   */\n      add\n        /* \"#utility.yul\":12848:12874   */\n      swap1\n      pop\n        /* \"#utility.yul\":12920:12929   */\n      dup2\n        /* \"#utility.yul\":12914:12918   */\n      dup2\n        /* \"#utility.yul\":12910:12930   */\n      sub\n        /* \"#utility.yul\":12906:12907   */\n      0x00\n        /* \"#utility.yul\":12895:12904   */\n      dup4\n        /* \"#utility.yul\":12891:12908   */\n      add\n        /* \"#utility.yul\":12884:12931   */\n      mstore\n        /* \"#utility.yul\":12948:13079   */\n      tag_401\n        /* \"#utility.yul\":13074:13078   */\n      dup2\n        /* \"#utility.yul\":12948:13079   */\n      tag_275\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":12940:13079   */\n      swap1\n      pop\n        /* \"#utility.yul\":12667:13086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13092:13263   */\n    tag_194:\n        /* \"#utility.yul\":13131:13134   */\n      0x00\n        /* \"#utility.yul\":13154:13178   */\n      tag_403\n        /* \"#utility.yul\":13172:13177   */\n      dup3\n        /* \"#utility.yul\":13154:13178   */\n      tag_255\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":13145:13178   */\n      swap2\n      pop\n        /* \"#utility.yul\":13200:13204   */\n      0x00\n        /* \"#utility.yul\":13193:13198   */\n      dup3\n        /* \"#utility.yul\":13190:13205   */\n      sub\n        /* \"#utility.yul\":13187:13228   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":13208:13226   */\n      tag_405\n      tag_267\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":13187:13228   */\n    tag_404:\n        /* \"#utility.yul\":13255:13256   */\n      0x01\n        /* \"#utility.yul\":13248:13253   */\n      dup3\n        /* \"#utility.yul\":13244:13257   */\n      sub\n        /* \"#utility.yul\":13237:13257   */\n      swap1\n      pop\n        /* \"#utility.yul\":13092:13263   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13269:13711   */\n    tag_210:\n        /* \"#utility.yul\":13418:13422   */\n      0x00\n        /* \"#utility.yul\":13456:13458   */\n      0x60\n        /* \"#utility.yul\":13445:13454   */\n      dup3\n        /* \"#utility.yul\":13441:13459   */\n      add\n        /* \"#utility.yul\":13433:13459   */\n      swap1\n      pop\n        /* \"#utility.yul\":13469:13540   */\n      tag_407\n        /* \"#utility.yul\":13537:13538   */\n      0x00\n        /* \"#utility.yul\":13526:13535   */\n      dup4\n        /* \"#utility.yul\":13522:13539   */\n      add\n        /* \"#utility.yul\":13513:13519   */\n      dup7\n        /* \"#utility.yul\":13469:13540   */\n      tag_263\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":13550:13622   */\n      tag_408\n        /* \"#utility.yul\":13618:13620   */\n      0x20\n        /* \"#utility.yul\":13607:13616   */\n      dup4\n        /* \"#utility.yul\":13603:13621   */\n      add\n        /* \"#utility.yul\":13594:13600   */\n      dup6\n        /* \"#utility.yul\":13550:13622   */\n      tag_260\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":13632:13704   */\n      tag_409\n        /* \"#utility.yul\":13700:13702   */\n      0x40\n        /* \"#utility.yul\":13689:13698   */\n      dup4\n        /* \"#utility.yul\":13685:13703   */\n      add\n        /* \"#utility.yul\":13676:13682   */\n      dup5\n        /* \"#utility.yul\":13632:13704   */\n      tag_260\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":13269:13711   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220319846fec81953f6d5ce34fb8ca053ec26af410a7c4a377b4506fd80a7d8a64164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_847": {
									"entryPoint": null,
									"id": 847,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 395,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_memory": {
									"entryPoint": 307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 172,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 213,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 189,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 185,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 181,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 860,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9057:6",
										"nodeType": "YulBlock",
										"src": "0:9057:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "423:28:6",
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:6",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:12:6",
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nativeSrc": "433:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nativeSrc": "546:28:6",
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:6",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:6",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nativeSrc": "556:12:6",
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nativeSrc": "556:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nativeSrc": "628:54:6",
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nativeSrc": "638:38:6",
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:6",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nativeSrc": "652:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:6",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nativeSrc": "668:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nativeSrc": "648:28:6",
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:6",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:6",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nativeSrc": "716:152:6",
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:6",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:6",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nativeSrc": "726:88:6",
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nativeSrc": "726:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:6",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:6",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nativeSrc": "823:15:6",
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nativeSrc": "823:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:6",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:6",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nativeSrc": "847:15:6",
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nativeSrc": "847:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nativeSrc": "917:238:6",
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nativeSrc": "927:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nativeSrc": "957:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nativeSrc": "945:40:6",
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:6",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:6",
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nativeSrc": "1098:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nativeSrc": "1098:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:6",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nativeSrc": "1036:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nativeSrc": "1072:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nativeSrc": "1033:62:6",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nativeSrc": "1030:88:6",
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nativeSrc": "1127:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nativeSrc": "1127:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:6",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:6",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nativeSrc": "1202:88:6",
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nativeSrc": "1212:30:6",
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nativeSrc": "1222:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nativeSrc": "1251:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nativeSrc": "1251:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:6",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:6",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nativeSrc": "1363:241:6",
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:6",
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nativeSrc": "1470:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nativeSrc": "1470:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nativeSrc": "1437:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nativeSrc": "1434:56:6",
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nativeSrc": "1500:37:6",
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nativeSrc": "1508:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nativeSrc": "1574:23:6",
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nativeSrc": "1582:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:6",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:6",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nativeSrc": "1672:77:6",
													"nodeType": "YulBlock",
													"src": "1672:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:6"
																},
																"nativeSrc": "1683:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:6"
															},
															"nativeSrc": "1683:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:6"
																		},
																		"nativeSrc": "1722:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:6"
																},
																"nativeSrc": "1715:27:6",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:6"
															},
															"nativeSrc": "1715:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:6",
														"nodeType": "YulTypedName",
														"src": "1654:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:6",
														"nodeType": "YulTypedName",
														"src": "1659:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:6",
														"nodeType": "YulTypedName",
														"src": "1664:6:6",
														"type": ""
													}
												],
												"src": "1610:139:6"
											},
											{
												"body": {
													"nativeSrc": "1850:339:6",
													"nodeType": "YulBlock",
													"src": "1850:339:6",
													"statements": [
														{
															"nativeSrc": "1860:75:6",
															"nodeType": "YulAssignment",
															"src": "1860:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:6"
																		},
																		"nativeSrc": "1885:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:6"
																},
																"nativeSrc": "1869:66:6",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:6"
																},
																"nativeSrc": "1944:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:6"
															},
															"nativeSrc": "1944:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:6"
														},
														{
															"nativeSrc": "1974:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:6"
																},
																"nativeSrc": "1985:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:6",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:6",
																"nodeType": "YulBlock",
																"src": "2039:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:6"
																			},
																			"nativeSrc": "2041:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:6"
																		},
																		"nativeSrc": "2041:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:6"
																		},
																		"nativeSrc": "2016:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:6"
																},
																"nativeSrc": "2013:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:6"
															},
															"nativeSrc": "2010:112:6",
															"nodeType": "YulIf",
															"src": "2010:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:6"
																},
																"nativeSrc": "2131:52:6",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:6"
															},
															"nativeSrc": "2131:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:6",
														"nodeType": "YulTypedName",
														"src": "1823:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:6",
														"nodeType": "YulTypedName",
														"src": "1828:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:6",
														"nodeType": "YulTypedName",
														"src": "1836:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:6",
														"nodeType": "YulTypedName",
														"src": "1844:5:6",
														"type": ""
													}
												],
												"src": "1755:434:6"
											},
											{
												"body": {
													"nativeSrc": "2282:282:6",
													"nodeType": "YulBlock",
													"src": "2282:282:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:6",
																"nodeType": "YulBlock",
																"src": "2331:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:6"
																			},
																			"nativeSrc": "2333:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:6"
																		},
																		"nativeSrc": "2333:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:6"
																				},
																				"nativeSrc": "2306:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:6"
																		},
																		"nativeSrc": "2302:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:6"
																},
																"nativeSrc": "2295:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:6"
															},
															"nativeSrc": "2292:122:6",
															"nodeType": "YulIf",
															"src": "2292:122:6"
														},
														{
															"nativeSrc": "2423:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:6"
																},
																"nativeSrc": "2437:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:6",
															"nodeType": "YulAssignment",
															"src": "2459:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:6"
																		},
																		"nativeSrc": "2527:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:6"
																},
																"nativeSrc": "2468:90:6",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:6",
														"nodeType": "YulTypedName",
														"src": "2260:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:6",
														"nodeType": "YulTypedName",
														"src": "2268:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:6",
														"nodeType": "YulTypedName",
														"src": "2276:5:6",
														"type": ""
													}
												],
												"src": "2209:355:6"
											},
											{
												"body": {
													"nativeSrc": "2615:32:6",
													"nodeType": "YulBlock",
													"src": "2615:32:6",
													"statements": [
														{
															"nativeSrc": "2625:16:6",
															"nodeType": "YulAssignment",
															"src": "2625:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2636:5:6",
																"nodeType": "YulIdentifier",
																"src": "2636:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2570:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:6",
														"nodeType": "YulTypedName",
														"src": "2597:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:6",
														"nodeType": "YulTypedName",
														"src": "2607:7:6",
														"type": ""
													}
												],
												"src": "2570:77:6"
											},
											{
												"body": {
													"nativeSrc": "2696:79:6",
													"nodeType": "YulBlock",
													"src": "2696:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2753:16:6",
																"nodeType": "YulBlock",
																"src": "2753:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2755:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:6"
																			},
																			"nativeSrc": "2755:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:6"
																		},
																		"nativeSrc": "2755:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2719:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2719:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2744:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2726:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2726:17:6"
																				},
																				"nativeSrc": "2726:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2716:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2716:2:6"
																		},
																		"nativeSrc": "2716:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2716:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2709:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:6"
																},
																"nativeSrc": "2709:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2709:43:6"
															},
															"nativeSrc": "2706:63:6",
															"nodeType": "YulIf",
															"src": "2706:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2653:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2689:5:6",
														"nodeType": "YulTypedName",
														"src": "2689:5:6",
														"type": ""
													}
												],
												"src": "2653:122:6"
											},
											{
												"body": {
													"nativeSrc": "2844:80:6",
													"nodeType": "YulBlock",
													"src": "2844:80:6",
													"statements": [
														{
															"nativeSrc": "2854:22:6",
															"nodeType": "YulAssignment",
															"src": "2854:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2869:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2869:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2863:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:6"
																},
																"nativeSrc": "2863:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2863:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2854:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2854:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2912:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2912:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2885:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2885:26:6"
																},
																"nativeSrc": "2885:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2885:33:6"
															},
															"nativeSrc": "2885:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2885:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2781:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2822:6:6",
														"nodeType": "YulTypedName",
														"src": "2822:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2830:3:6",
														"nodeType": "YulTypedName",
														"src": "2830:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2838:5:6",
														"nodeType": "YulTypedName",
														"src": "2838:5:6",
														"type": ""
													}
												],
												"src": "2781:143:6"
											},
											{
												"body": {
													"nativeSrc": "3078:1018:6",
													"nodeType": "YulBlock",
													"src": "3078:1018:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3125:83:6",
																"nodeType": "YulBlock",
																"src": "3125:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3127:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3127:77:6"
																			},
																			"nativeSrc": "3127:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3127:79:6"
																		},
																		"nativeSrc": "3127:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3127:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3099:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3099:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3108:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3108:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3095:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3095:3:6"
																		},
																		"nativeSrc": "3095:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3095:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3120:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3120:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3091:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3091:3:6"
																},
																"nativeSrc": "3091:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3091:33:6"
															},
															"nativeSrc": "3088:120:6",
															"nodeType": "YulIf",
															"src": "3088:120:6"
														},
														{
															"nativeSrc": "3218:291:6",
															"nodeType": "YulBlock",
															"src": "3218:291:6",
															"statements": [
																{
																	"nativeSrc": "3233:38:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3233:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3257:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3257:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3268:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3268:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3253:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3253:3:6"
																				},
																				"nativeSrc": "3253:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3253:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3247:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3247:5:6"
																		},
																		"nativeSrc": "3247:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3247:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3237:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3237:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3318:83:6",
																		"nodeType": "YulBlock",
																		"src": "3318:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3320:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3320:77:6"
																					},
																					"nativeSrc": "3320:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3320:79:6"
																				},
																				"nativeSrc": "3320:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3320:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3290:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3290:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3298:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3298:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3287:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3287:2:6"
																		},
																		"nativeSrc": "3287:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3287:30:6"
																	},
																	"nativeSrc": "3284:117:6",
																	"nodeType": "YulIf",
																	"src": "3284:117:6"
																},
																{
																	"nativeSrc": "3415:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3415:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3471:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3471:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3482:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3482:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3467:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3467:3:6"
																				},
																				"nativeSrc": "3467:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3467:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3491:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3491:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3425:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3425:41:6"
																		},
																		"nativeSrc": "3425:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3425:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3415:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3415:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3519:292:6",
															"nodeType": "YulBlock",
															"src": "3519:292:6",
															"statements": [
																{
																	"nativeSrc": "3534:39:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3534:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3558:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3558:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3569:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3569:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3554:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3554:3:6"
																				},
																				"nativeSrc": "3554:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3554:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3548:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:6"
																		},
																		"nativeSrc": "3548:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3548:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3538:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3538:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3620:83:6",
																		"nodeType": "YulBlock",
																		"src": "3620:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3622:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3622:77:6"
																					},
																					"nativeSrc": "3622:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3622:79:6"
																				},
																				"nativeSrc": "3622:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3622:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3592:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3592:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3600:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3600:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3589:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3589:2:6"
																		},
																		"nativeSrc": "3589:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3589:30:6"
																	},
																	"nativeSrc": "3586:117:6",
																	"nodeType": "YulIf",
																	"src": "3586:117:6"
																},
																{
																	"nativeSrc": "3717:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3717:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3773:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3773:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3784:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3784:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3769:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3769:3:6"
																				},
																				"nativeSrc": "3769:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3769:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3793:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3793:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3727:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3727:41:6"
																		},
																		"nativeSrc": "3727:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3727:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3717:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3717:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3821:129:6",
															"nodeType": "YulBlock",
															"src": "3821:129:6",
															"statements": [
																{
																	"nativeSrc": "3836:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3836:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3850:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3850:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3840:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3840:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3866:74:6",
																	"nodeType": "YulAssignment",
																	"src": "3866:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3912:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3912:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3923:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3923:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3908:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3908:3:6"
																				},
																				"nativeSrc": "3908:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3908:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3932:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3932:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3876:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "3876:31:6"
																		},
																		"nativeSrc": "3876:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3876:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3866:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3866:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3960:129:6",
															"nodeType": "YulBlock",
															"src": "3960:129:6",
															"statements": [
																{
																	"nativeSrc": "3975:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3975:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3989:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3989:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3979:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3979:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4005:74:6",
																	"nodeType": "YulAssignment",
																	"src": "4005:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4051:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4051:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4062:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4062:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4047:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4047:3:6"
																				},
																				"nativeSrc": "4047:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4047:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4071:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4071:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4015:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "4015:31:6"
																		},
																		"nativeSrc": "4015:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4015:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4005:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4005:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory",
												"nativeSrc": "2930:1166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3024:9:6",
														"nodeType": "YulTypedName",
														"src": "3024:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3035:7:6",
														"nodeType": "YulTypedName",
														"src": "3035:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3047:6:6",
														"nodeType": "YulTypedName",
														"src": "3047:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3055:6:6",
														"nodeType": "YulTypedName",
														"src": "3055:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3063:6:6",
														"nodeType": "YulTypedName",
														"src": "3063:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3071:6:6",
														"nodeType": "YulTypedName",
														"src": "3071:6:6",
														"type": ""
													}
												],
												"src": "2930:1166:6"
											},
											{
												"body": {
													"nativeSrc": "4161:40:6",
													"nodeType": "YulBlock",
													"src": "4161:40:6",
													"statements": [
														{
															"nativeSrc": "4172:22:6",
															"nodeType": "YulAssignment",
															"src": "4172:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4188:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4188:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4182:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4182:5:6"
																},
																"nativeSrc": "4182:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4182:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4172:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4172:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4102:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4144:5:6",
														"nodeType": "YulTypedName",
														"src": "4144:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4154:6:6",
														"nodeType": "YulTypedName",
														"src": "4154:6:6",
														"type": ""
													}
												],
												"src": "4102:99:6"
											},
											{
												"body": {
													"nativeSrc": "4235:152:6",
													"nodeType": "YulBlock",
													"src": "4235:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4252:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4252:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4255:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4255:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4245:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4245:6:6"
																},
																"nativeSrc": "4245:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4245:88:6"
															},
															"nativeSrc": "4245:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4245:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4349:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4349:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4352:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4352:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4342:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4342:6:6"
																},
																"nativeSrc": "4342:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4342:15:6"
															},
															"nativeSrc": "4342:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4342:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4373:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4373:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4376:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4376:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4366:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:6"
																},
																"nativeSrc": "4366:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4366:15:6"
															},
															"nativeSrc": "4366:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4366:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4207:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4207:180:6"
											},
											{
												"body": {
													"nativeSrc": "4444:269:6",
													"nodeType": "YulBlock",
													"src": "4444:269:6",
													"statements": [
														{
															"nativeSrc": "4454:22:6",
															"nodeType": "YulAssignment",
															"src": "4454:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4468:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4468:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4474:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4474:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4464:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4464:3:6"
																},
																"nativeSrc": "4464:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4464:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4454:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4454:6:6"
																}
															]
														},
														{
															"nativeSrc": "4485:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4485:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4515:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4515:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4521:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4521:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4511:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:6"
																},
																"nativeSrc": "4511:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4511:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4489:18:6",
																	"nodeType": "YulTypedName",
																	"src": "4489:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4562:51:6",
																"nodeType": "YulBlock",
																"src": "4562:51:6",
																"statements": [
																	{
																		"nativeSrc": "4576:27:6",
																		"nodeType": "YulAssignment",
																		"src": "4576:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4590:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4590:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4598:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4598:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4586:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4586:3:6"
																			},
																			"nativeSrc": "4586:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4586:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4576:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4576:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4542:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4542:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4535:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4535:6:6"
																},
																"nativeSrc": "4535:26:6",
																"nodeType": "YulFunctionCall",
																"src": "4535:26:6"
															},
															"nativeSrc": "4532:81:6",
															"nodeType": "YulIf",
															"src": "4532:81:6"
														},
														{
															"body": {
																"nativeSrc": "4665:42:6",
																"nodeType": "YulBlock",
																"src": "4665:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4679:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4679:16:6"
																			},
																			"nativeSrc": "4679:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4679:18:6"
																		},
																		"nativeSrc": "4679:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4679:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4629:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4629:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4652:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4652:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4660:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4660:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4649:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4649:2:6"
																		},
																		"nativeSrc": "4649:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4649:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4626:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4626:2:6"
																},
																"nativeSrc": "4626:38:6",
																"nodeType": "YulFunctionCall",
																"src": "4626:38:6"
															},
															"nativeSrc": "4623:84:6",
															"nodeType": "YulIf",
															"src": "4623:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4393:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4428:4:6",
														"nodeType": "YulTypedName",
														"src": "4428:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4437:6:6",
														"nodeType": "YulTypedName",
														"src": "4437:6:6",
														"type": ""
													}
												],
												"src": "4393:320:6"
											},
											{
												"body": {
													"nativeSrc": "4773:87:6",
													"nodeType": "YulBlock",
													"src": "4773:87:6",
													"statements": [
														{
															"nativeSrc": "4783:11:6",
															"nodeType": "YulAssignment",
															"src": "4783:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "4791:3:6",
																"nodeType": "YulIdentifier",
																"src": "4791:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4783:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4783:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4811:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4811:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4814:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4814:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4804:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4804:6:6"
																},
																"nativeSrc": "4804:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4804:14:6"
															},
															"nativeSrc": "4804:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "4804:14:6"
														},
														{
															"nativeSrc": "4827:26:6",
															"nodeType": "YulAssignment",
															"src": "4827:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4845:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4845:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4848:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4848:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4835:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4835:9:6"
																},
																"nativeSrc": "4835:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4835:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4827:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4827:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4719:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4760:3:6",
														"nodeType": "YulTypedName",
														"src": "4760:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4768:4:6",
														"nodeType": "YulTypedName",
														"src": "4768:4:6",
														"type": ""
													}
												],
												"src": "4719:141:6"
											},
											{
												"body": {
													"nativeSrc": "4910:49:6",
													"nodeType": "YulBlock",
													"src": "4910:49:6",
													"statements": [
														{
															"nativeSrc": "4920:33:6",
															"nodeType": "YulAssignment",
															"src": "4920:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4938:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4938:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4945:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4945:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4934:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4934:3:6"
																		},
																		"nativeSrc": "4934:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4934:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4950:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4950:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4930:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4930:3:6"
																},
																"nativeSrc": "4930:23:6",
																"nodeType": "YulFunctionCall",
																"src": "4930:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4920:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4920:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4866:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4893:5:6",
														"nodeType": "YulTypedName",
														"src": "4893:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4903:6:6",
														"nodeType": "YulTypedName",
														"src": "4903:6:6",
														"type": ""
													}
												],
												"src": "4866:93:6"
											},
											{
												"body": {
													"nativeSrc": "5018:54:6",
													"nodeType": "YulBlock",
													"src": "5018:54:6",
													"statements": [
														{
															"nativeSrc": "5028:37:6",
															"nodeType": "YulAssignment",
															"src": "5028:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5053:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5053:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5059:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5059:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5049:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5049:3:6"
																},
																"nativeSrc": "5049:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5049:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5028:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5028:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4965:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4993:4:6",
														"nodeType": "YulTypedName",
														"src": "4993:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4999:5:6",
														"nodeType": "YulTypedName",
														"src": "4999:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5009:8:6",
														"nodeType": "YulTypedName",
														"src": "5009:8:6",
														"type": ""
													}
												],
												"src": "4965:107:6"
											},
											{
												"body": {
													"nativeSrc": "5154:317:6",
													"nodeType": "YulBlock",
													"src": "5154:317:6",
													"statements": [
														{
															"nativeSrc": "5164:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5164:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5185:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "5185:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5197:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5181:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5181:3:6"
																},
																"nativeSrc": "5181:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5181:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5168:9:6",
																	"nodeType": "YulTypedName",
																	"src": "5168:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5208:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5208:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5239:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5239:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5250:66:6",
																		"nodeType": "YulLiteral",
																		"src": "5250:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5220:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5220:18:6"
																},
																"nativeSrc": "5220:97:6",
																"nodeType": "YulFunctionCall",
																"src": "5220:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5212:4:6",
																	"nodeType": "YulTypedName",
																	"src": "5212:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5326:51:6",
															"nodeType": "YulAssignment",
															"src": "5326:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5357:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5357:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5368:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "5368:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5338:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5338:18:6"
																},
																"nativeSrc": "5338:39:6",
																"nodeType": "YulFunctionCall",
																"src": "5338:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5326:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5326:8:6"
																}
															]
														},
														{
															"nativeSrc": "5386:30:6",
															"nodeType": "YulAssignment",
															"src": "5386:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5399:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5399:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5410:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5410:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5406:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5406:3:6"
																		},
																		"nativeSrc": "5406:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5406:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5395:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5395:3:6"
																},
																"nativeSrc": "5395:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5395:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5386:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5386:5:6"
																}
															]
														},
														{
															"nativeSrc": "5425:40:6",
															"nodeType": "YulAssignment",
															"src": "5425:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5438:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5438:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5449:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "5449:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5459:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5459:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5445:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5445:3:6"
																		},
																		"nativeSrc": "5445:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5445:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5435:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5435:2:6"
																},
																"nativeSrc": "5435:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5435:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5425:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5425:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5078:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5115:5:6",
														"nodeType": "YulTypedName",
														"src": "5115:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5122:10:6",
														"nodeType": "YulTypedName",
														"src": "5122:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5134:8:6",
														"nodeType": "YulTypedName",
														"src": "5134:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5147:6:6",
														"nodeType": "YulTypedName",
														"src": "5147:6:6",
														"type": ""
													}
												],
												"src": "5078:393:6"
											},
											{
												"body": {
													"nativeSrc": "5509:28:6",
													"nodeType": "YulBlock",
													"src": "5509:28:6",
													"statements": [
														{
															"nativeSrc": "5519:12:6",
															"nodeType": "YulAssignment",
															"src": "5519:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "5526:5:6",
																"nodeType": "YulIdentifier",
																"src": "5526:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5519:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5519:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5477:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5495:5:6",
														"nodeType": "YulTypedName",
														"src": "5495:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5505:3:6",
														"nodeType": "YulTypedName",
														"src": "5505:3:6",
														"type": ""
													}
												],
												"src": "5477:60:6"
											},
											{
												"body": {
													"nativeSrc": "5603:82:6",
													"nodeType": "YulBlock",
													"src": "5603:82:6",
													"statements": [
														{
															"nativeSrc": "5613:66:6",
															"nodeType": "YulAssignment",
															"src": "5613:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5671:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5671:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5653:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "5653:17:6"
																				},
																				"nativeSrc": "5653:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5644:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "5644:8:6"
																		},
																		"nativeSrc": "5644:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5644:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5626:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5626:17:6"
																},
																"nativeSrc": "5626:53:6",
																"nodeType": "YulFunctionCall",
																"src": "5626:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5613:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5613:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5543:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5583:5:6",
														"nodeType": "YulTypedName",
														"src": "5583:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5593:9:6",
														"nodeType": "YulTypedName",
														"src": "5593:9:6",
														"type": ""
													}
												],
												"src": "5543:142:6"
											},
											{
												"body": {
													"nativeSrc": "5738:28:6",
													"nodeType": "YulBlock",
													"src": "5738:28:6",
													"statements": [
														{
															"nativeSrc": "5748:12:6",
															"nodeType": "YulAssignment",
															"src": "5748:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "5755:5:6",
																"nodeType": "YulIdentifier",
																"src": "5755:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5748:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5748:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5691:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5724:5:6",
														"nodeType": "YulTypedName",
														"src": "5724:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5734:3:6",
														"nodeType": "YulTypedName",
														"src": "5734:3:6",
														"type": ""
													}
												],
												"src": "5691:75:6"
											},
											{
												"body": {
													"nativeSrc": "5848:193:6",
													"nodeType": "YulBlock",
													"src": "5848:193:6",
													"statements": [
														{
															"nativeSrc": "5858:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5858:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5913:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "5913:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5882:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "5882:30:6"
																},
																"nativeSrc": "5882:39:6",
																"nodeType": "YulFunctionCall",
																"src": "5882:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5862:16:6",
																	"nodeType": "YulTypedName",
																	"src": "5862:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5937:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5937:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5977:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "5977:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5971:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "5971:5:6"
																				},
																				"nativeSrc": "5971:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5971:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5984:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5984:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6016:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "6016:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5992:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "5992:23:6"
																				},
																				"nativeSrc": "5992:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5992:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5943:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "5943:27:6"
																		},
																		"nativeSrc": "5943:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5943:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5930:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5930:6:6"
																},
																"nativeSrc": "5930:105:6",
																"nodeType": "YulFunctionCall",
																"src": "5930:105:6"
															},
															"nativeSrc": "5930:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "5930:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5772:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5825:4:6",
														"nodeType": "YulTypedName",
														"src": "5825:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5831:6:6",
														"nodeType": "YulTypedName",
														"src": "5831:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5839:7:6",
														"nodeType": "YulTypedName",
														"src": "5839:7:6",
														"type": ""
													}
												],
												"src": "5772:269:6"
											},
											{
												"body": {
													"nativeSrc": "6096:24:6",
													"nodeType": "YulBlock",
													"src": "6096:24:6",
													"statements": [
														{
															"nativeSrc": "6106:8:6",
															"nodeType": "YulAssignment",
															"src": "6106:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "6113:1:6",
																"nodeType": "YulLiteral",
																"src": "6113:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6106:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6106:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6047:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6092:3:6",
														"nodeType": "YulTypedName",
														"src": "6092:3:6",
														"type": ""
													}
												],
												"src": "6047:73:6"
											},
											{
												"body": {
													"nativeSrc": "6179:136:6",
													"nodeType": "YulBlock",
													"src": "6179:136:6",
													"statements": [
														{
															"nativeSrc": "6189:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6189:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6203:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6203:30:6"
																},
																"nativeSrc": "6203:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6203:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6193:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6193:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6288:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6288:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6294:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6294:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6302:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6302:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6244:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6244:43:6"
																},
																"nativeSrc": "6244:65:6",
																"nodeType": "YulFunctionCall",
																"src": "6244:65:6"
															},
															"nativeSrc": "6244:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "6244:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6126:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6165:4:6",
														"nodeType": "YulTypedName",
														"src": "6165:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6171:6:6",
														"nodeType": "YulTypedName",
														"src": "6171:6:6",
														"type": ""
													}
												],
												"src": "6126:189:6"
											},
											{
												"body": {
													"nativeSrc": "6371:136:6",
													"nodeType": "YulBlock",
													"src": "6371:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6438:63:6",
																"nodeType": "YulBlock",
																"src": "6438:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6482:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6482:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6489:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6489:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6452:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "6452:29:6"
																			},
																			"nativeSrc": "6452:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6452:39:6"
																		},
																		"nativeSrc": "6452:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6452:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6391:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6391:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6398:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6398:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6388:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6388:2:6"
																},
																"nativeSrc": "6388:14:6",
																"nodeType": "YulFunctionCall",
																"src": "6388:14:6"
															},
															"nativeSrc": "6381:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6403:26:6",
																"nodeType": "YulBlock",
																"src": "6403:26:6",
																"statements": [
																	{
																		"nativeSrc": "6405:22:6",
																		"nodeType": "YulAssignment",
																		"src": "6405:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6418:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6418:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6425:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6425:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6414:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6414:3:6"
																			},
																			"nativeSrc": "6414:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6414:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6405:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6405:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6385:2:6",
																"nodeType": "YulBlock",
																"src": "6385:2:6",
																"statements": []
															},
															"src": "6381:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6321:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6359:5:6",
														"nodeType": "YulTypedName",
														"src": "6359:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6366:3:6",
														"nodeType": "YulTypedName",
														"src": "6366:3:6",
														"type": ""
													}
												],
												"src": "6321:186:6"
											},
											{
												"body": {
													"nativeSrc": "6592:464:6",
													"nodeType": "YulBlock",
													"src": "6592:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6618:431:6",
																"nodeType": "YulBlock",
																"src": "6618:431:6",
																"statements": [
																	{
																		"nativeSrc": "6632:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6632:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6680:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6680:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6648:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "6648:31:6"
																			},
																			"nativeSrc": "6648:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6648:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6636:8:6",
																				"nodeType": "YulTypedName",
																				"src": "6636:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6699:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6699:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6722:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "6722:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6750:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "6750:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6732:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "6732:17:6"
																					},
																					"nativeSrc": "6732:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6732:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6718:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6718:3:6"
																			},
																			"nativeSrc": "6718:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6718:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6703:11:6",
																				"nodeType": "YulTypedName",
																				"src": "6703:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6919:27:6",
																			"nodeType": "YulBlock",
																			"src": "6919:27:6",
																			"statements": [
																				{
																					"nativeSrc": "6921:23:6",
																					"nodeType": "YulAssignment",
																					"src": "6921:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6936:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "6936:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6921:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "6921:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6903:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "6903:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6915:2:6",
																					"nodeType": "YulLiteral",
																					"src": "6915:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6900:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "6900:2:6"
																			},
																			"nativeSrc": "6900:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6900:18:6"
																		},
																		"nativeSrc": "6897:49:6",
																		"nodeType": "YulIf",
																		"src": "6897:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6988:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "6988:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7005:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "7005:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7033:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7033:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7015:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "7015:17:6"
																							},
																							"nativeSrc": "7015:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7015:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7001:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "7001:3:6"
																					},
																					"nativeSrc": "7001:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7001:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6959:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "6959:28:6"
																			},
																			"nativeSrc": "6959:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6959:80:6"
																		},
																		"nativeSrc": "6959:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6959:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6609:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6609:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6614:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6614:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6606:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6606:2:6"
																},
																"nativeSrc": "6606:11:6",
																"nodeType": "YulFunctionCall",
																"src": "6606:11:6"
															},
															"nativeSrc": "6603:446:6",
															"nodeType": "YulIf",
															"src": "6603:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6513:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6568:5:6",
														"nodeType": "YulTypedName",
														"src": "6568:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6575:3:6",
														"nodeType": "YulTypedName",
														"src": "6575:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6580:10:6",
														"nodeType": "YulTypedName",
														"src": "6580:10:6",
														"type": ""
													}
												],
												"src": "6513:543:6"
											},
											{
												"body": {
													"nativeSrc": "7125:54:6",
													"nodeType": "YulBlock",
													"src": "7125:54:6",
													"statements": [
														{
															"nativeSrc": "7135:37:6",
															"nodeType": "YulAssignment",
															"src": "7135:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7160:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7160:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7166:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7166:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7156:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7156:3:6"
																},
																"nativeSrc": "7156:16:6",
																"nodeType": "YulFunctionCall",
																"src": "7156:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7135:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "7135:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7062:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7100:4:6",
														"nodeType": "YulTypedName",
														"src": "7100:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7106:5:6",
														"nodeType": "YulTypedName",
														"src": "7106:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7116:8:6",
														"nodeType": "YulTypedName",
														"src": "7116:8:6",
														"type": ""
													}
												],
												"src": "7062:117:6"
											},
											{
												"body": {
													"nativeSrc": "7236:118:6",
													"nodeType": "YulBlock",
													"src": "7236:118:6",
													"statements": [
														{
															"nativeSrc": "7246:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7246:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7295:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7295:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7298:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7298:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7291:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7291:3:6"
																				},
																				"nativeSrc": "7291:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7291:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7310:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7310:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7306:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7306:3:6"
																				},
																				"nativeSrc": "7306:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7306:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7262:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "7262:28:6"
																		},
																		"nativeSrc": "7262:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7262:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7258:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7258:3:6"
																},
																"nativeSrc": "7258:56:6",
																"nodeType": "YulFunctionCall",
																"src": "7258:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7250:4:6",
																	"nodeType": "YulTypedName",
																	"src": "7250:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7323:25:6",
															"nodeType": "YulAssignment",
															"src": "7323:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7337:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7337:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7343:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7343:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7333:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7333:3:6"
																},
																"nativeSrc": "7333:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7333:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7323:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7323:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7185:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7213:4:6",
														"nodeType": "YulTypedName",
														"src": "7213:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7219:5:6",
														"nodeType": "YulTypedName",
														"src": "7219:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7229:6:6",
														"nodeType": "YulTypedName",
														"src": "7229:6:6",
														"type": ""
													}
												],
												"src": "7185:169:6"
											},
											{
												"body": {
													"nativeSrc": "7440:214:6",
													"nodeType": "YulBlock",
													"src": "7440:214:6",
													"statements": [
														{
															"nativeSrc": "7573:37:6",
															"nodeType": "YulAssignment",
															"src": "7573:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7600:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7600:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7606:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7606:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7581:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "7581:18:6"
																},
																"nativeSrc": "7581:29:6",
																"nodeType": "YulFunctionCall",
																"src": "7581:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7573:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7573:4:6"
																}
															]
														},
														{
															"nativeSrc": "7619:29:6",
															"nodeType": "YulAssignment",
															"src": "7619:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7630:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7630:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7640:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7640:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7643:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7643:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7636:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7636:3:6"
																		},
																		"nativeSrc": "7636:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7636:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7627:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7627:2:6"
																},
																"nativeSrc": "7627:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7627:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7619:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7619:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7359:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7421:4:6",
														"nodeType": "YulTypedName",
														"src": "7421:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7427:3:6",
														"nodeType": "YulTypedName",
														"src": "7427:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7435:4:6",
														"nodeType": "YulTypedName",
														"src": "7435:4:6",
														"type": ""
													}
												],
												"src": "7359:295:6"
											},
											{
												"body": {
													"nativeSrc": "7751:1303:6",
													"nodeType": "YulBlock",
													"src": "7751:1303:6",
													"statements": [
														{
															"nativeSrc": "7762:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7762:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7809:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7809:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7776:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "7776:32:6"
																},
																"nativeSrc": "7776:37:6",
																"nodeType": "YulFunctionCall",
																"src": "7776:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7766:6:6",
																	"nodeType": "YulTypedName",
																	"src": "7766:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7898:22:6",
																"nodeType": "YulBlock",
																"src": "7898:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7900:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7900:16:6"
																			},
																			"nativeSrc": "7900:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7900:18:6"
																		},
																		"nativeSrc": "7900:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7900:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7870:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7870:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7878:18:6",
																		"nodeType": "YulLiteral",
																		"src": "7878:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7867:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7867:2:6"
																},
																"nativeSrc": "7867:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7867:30:6"
															},
															"nativeSrc": "7864:56:6",
															"nodeType": "YulIf",
															"src": "7864:56:6"
														},
														{
															"nativeSrc": "7930:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7930:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7976:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7976:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7970:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7970:5:6"
																		},
																		"nativeSrc": "7970:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7970:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7944:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "7944:25:6"
																},
																"nativeSrc": "7944:38:6",
																"nodeType": "YulFunctionCall",
																"src": "7944:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7934:6:6",
																	"nodeType": "YulTypedName",
																	"src": "7934:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8075:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8075:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8081:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8081:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8089:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8089:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8029:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "8029:45:6"
																},
																"nativeSrc": "8029:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8029:67:6"
															},
															"nativeSrc": "8029:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "8029:67:6"
														},
														{
															"nativeSrc": "8106:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8106:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "8123:1:6",
																"nodeType": "YulLiteral",
																"src": "8123:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8110:9:6",
																	"nodeType": "YulTypedName",
																	"src": "8110:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8134:17:6",
															"nodeType": "YulAssignment",
															"src": "8134:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "8147:4:6",
																"nodeType": "YulLiteral",
																"src": "8147:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8134:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "8134:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8198:611:6",
																		"nodeType": "YulBlock",
																		"src": "8198:611:6",
																		"statements": [
																			{
																				"nativeSrc": "8212:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8212:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8231:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "8231:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8243:4:6",
																									"nodeType": "YulLiteral",
																									"src": "8243:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8239:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "8239:3:6"
																							},
																							"nativeSrc": "8239:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8239:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8227:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "8227:3:6"
																					},
																					"nativeSrc": "8227:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8227:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8216:7:6",
																						"nodeType": "YulTypedName",
																						"src": "8216:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8263:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8263:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8309:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8309:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8277:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "8277:31:6"
																					},
																					"nativeSrc": "8277:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8277:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8267:6:6",
																						"nodeType": "YulTypedName",
																						"src": "8267:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8327:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8327:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8336:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8336:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8331:1:6",
																						"nodeType": "YulTypedName",
																						"src": "8331:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8395:163:6",
																					"nodeType": "YulBlock",
																					"src": "8395:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8420:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8420:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8438:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "8438:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8443:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "8443:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8434:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "8434:3:6"
																												},
																												"nativeSrc": "8434:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "8434:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8428:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "8428:5:6"
																										},
																										"nativeSrc": "8428:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8428:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8413:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8413:6:6"
																								},
																								"nativeSrc": "8413:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8413:42:6"
																							},
																							"nativeSrc": "8413:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "8413:42:6"
																						},
																						{
																							"nativeSrc": "8472:24:6",
																							"nodeType": "YulAssignment",
																							"src": "8472:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8486:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8486:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8494:1:6",
																										"nodeType": "YulLiteral",
																										"src": "8494:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8482:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8482:3:6"
																								},
																								"nativeSrc": "8482:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8482:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8472:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8472:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8513:31:6",
																							"nodeType": "YulAssignment",
																							"src": "8513:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8530:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "8530:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8541:2:6",
																										"nodeType": "YulLiteral",
																										"src": "8541:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8526:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8526:3:6"
																								},
																								"nativeSrc": "8526:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8526:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8513:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "8513:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8361:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "8361:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8364:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "8364:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8358:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "8358:2:6"
																					},
																					"nativeSrc": "8358:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8358:14:6"
																				},
																				"nativeSrc": "8350:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8373:21:6",
																					"nodeType": "YulBlock",
																					"src": "8373:21:6",
																					"statements": [
																						{
																							"nativeSrc": "8375:17:6",
																							"nodeType": "YulAssignment",
																							"src": "8375:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8384:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "8384:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8387:4:6",
																										"nodeType": "YulLiteral",
																										"src": "8387:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8380:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8380:3:6"
																								},
																								"nativeSrc": "8380:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8380:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8375:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "8375:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8354:3:6",
																					"nodeType": "YulBlock",
																					"src": "8354:3:6",
																					"statements": []
																				},
																				"src": "8350:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "8594:156:6",
																					"nodeType": "YulBlock",
																					"src": "8594:156:6",
																					"statements": [
																						{
																							"nativeSrc": "8612:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8612:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8639:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "8639:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8644:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8644:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8635:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "8635:3:6"
																										},
																										"nativeSrc": "8635:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8635:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8629:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8629:5:6"
																								},
																								"nativeSrc": "8629:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8629:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8616:9:6",
																									"nodeType": "YulTypedName",
																									"src": "8616:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8679:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8679:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8706:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8706:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8721:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "8721:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8729:4:6",
																														"nodeType": "YulLiteral",
																														"src": "8729:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8717:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "8717:3:6"
																												},
																												"nativeSrc": "8717:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "8717:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8687:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "8687:18:6"
																										},
																										"nativeSrc": "8687:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8687:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8672:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8672:6:6"
																								},
																								"nativeSrc": "8672:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8672:64:6"
																							},
																							"nativeSrc": "8672:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "8672:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8577:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "8577:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8586:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "8586:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8574:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "8574:2:6"
																					},
																					"nativeSrc": "8574:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8574:19:6"
																				},
																				"nativeSrc": "8571:179:6",
																				"nodeType": "YulIf",
																				"src": "8571:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8770:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8770:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8784:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "8784:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8792:1:6",
																											"nodeType": "YulLiteral",
																											"src": "8792:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8780:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "8780:3:6"
																									},
																									"nativeSrc": "8780:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "8780:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8796:1:6",
																									"nodeType": "YulLiteral",
																									"src": "8796:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8776:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "8776:3:6"
																							},
																							"nativeSrc": "8776:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8776:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8763:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8763:6:6"
																					},
																					"nativeSrc": "8763:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8763:36:6"
																				},
																				"nativeSrc": "8763:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "8763:36:6"
																			}
																		]
																	},
																	"nativeSrc": "8191:618:6",
																	"nodeType": "YulCase",
																	"src": "8191:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8196:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8196:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8826:222:6",
																		"nodeType": "YulBlock",
																		"src": "8826:222:6",
																		"statements": [
																			{
																				"nativeSrc": "8840:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8840:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8853:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8853:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8844:5:6",
																						"nodeType": "YulTypedName",
																						"src": "8844:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8877:67:6",
																					"nodeType": "YulBlock",
																					"src": "8877:67:6",
																					"statements": [
																						{
																							"nativeSrc": "8895:35:6",
																							"nodeType": "YulAssignment",
																							"src": "8895:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8914:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "8914:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8919:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8919:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8910:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "8910:3:6"
																										},
																										"nativeSrc": "8910:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8910:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8904:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8904:5:6"
																								},
																								"nativeSrc": "8904:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8904:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8895:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8895:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8870:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "8870:6:6"
																				},
																				"nativeSrc": "8867:77:6",
																				"nodeType": "YulIf",
																				"src": "8867:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8964:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8964:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9023:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9023:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9030:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "9030:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8970:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "8970:52:6"
																							},
																							"nativeSrc": "8970:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8970:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8957:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8957:6:6"
																					},
																					"nativeSrc": "8957:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8957:81:6"
																				},
																				"nativeSrc": "8957:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "8957:81:6"
																			}
																		]
																	},
																	"nativeSrc": "8818:230:6",
																	"nodeType": "YulCase",
																	"src": "8818:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8171:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8171:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8179:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8179:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8168:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8168:2:6"
																},
																"nativeSrc": "8168:14:6",
																"nodeType": "YulFunctionCall",
																"src": "8168:14:6"
															},
															"nativeSrc": "8161:887:6",
															"nodeType": "YulSwitch",
															"src": "8161:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7659:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7740:4:6",
														"nodeType": "YulTypedName",
														"src": "7740:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7746:3:6",
														"nodeType": "YulTypedName",
														"src": "7746:3:6",
														"type": ""
													}
												],
												"src": "7659:1395:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051611f9d380380611f9d8339818101604052810190610031919061022c565b8383816003908161004291906104cc565b50806004908161005291906104cc565b5050503360055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600681905550806008819055505050505061059b565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61010b826100c5565b810181811067ffffffffffffffff8211171561012a576101296100d5565b5b80604052505050565b5f61013c6100ac565b90506101488282610102565b919050565b5f67ffffffffffffffff821115610167576101666100d5565b5b610170826100c5565b9050602081019050919050565b8281835e5f83830152505050565b5f61019d6101988461014d565b610133565b9050828152602081018484840111156101b9576101b86100c1565b5b6101c484828561017d565b509392505050565b5f82601f8301126101e0576101df6100bd565b5b81516101f084826020860161018b565b91505092915050565b5f819050919050565b61020b816101f9565b8114610215575f80fd5b50565b5f8151905061022681610202565b92915050565b5f805f8060808587031215610244576102436100b5565b5b5f85015167ffffffffffffffff811115610261576102606100b9565b5b61026d878288016101cc565b945050602085015167ffffffffffffffff81111561028e5761028d6100b9565b5b61029a878288016101cc565b93505060406102ab87828801610218565b92505060606102bc87828801610218565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061031657607f821691505b602082108103610329576103286102d2565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261038b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610350565b6103958683610350565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6103d06103cb6103c6846101f9565b6103ad565b6101f9565b9050919050565b5f819050919050565b6103e9836103b6565b6103fd6103f5826103d7565b84845461035c565b825550505050565b5f90565b610411610405565b61041c8184846103e0565b505050565b5b8181101561043f576104345f82610409565b600181019050610422565b5050565b601f821115610484576104558161032f565b61045e84610341565b8101602085101561046d578190505b61048161047985610341565b830182610421565b50505b505050565b5f82821c905092915050565b5f6104a45f1984600802610489565b1980831691505092915050565b5f6104bc8383610495565b9150826002028217905092915050565b6104d5826102c8565b67ffffffffffffffff8111156104ee576104ed6100d5565b5b6104f882546102ff565b610503828285610443565b5f60209050601f831160018114610534575f8415610522578287015190505b61052c85826104b1565b865550610593565b601f1984166105428661032f565b5f5b8281101561056957848901518255600182019150602085019450602081019050610544565b868310156105865784890151610582601f891682610495565b8355505b6001600288020188555050505b505050505050565b6119f5806105a85f395ff3fe608060405260043610610129575f3560e01c806361203265116100aa578063906d895d1161006e578063906d895d146103b557806395d89b41146103df5780639b13b20e14610409578063a9059cbb1461041f578063d866b0b61461045b578063dd62ed3e1461049757610129565b806361203265146102e1578063676c0d771461030b57806370a08231146103335780637b97008d1461036f5780637ff9b5961461038b57610129565b806324600fc3116100f157806324600fc314610223578063313ce56714610239578063520198a8146102635780635a4dc09f1461028d5780635f3d7fa1146102b757610129565b806306fdde031461012d578063095ea7b3146101575780630a5d288c1461019357806318160ddd146101bd57806323b872dd146101e7575b5f80fd5b348015610138575f80fd5b506101416104d3565b60405161014e919061132d565b60405180910390f35b348015610162575f80fd5b5061017d600480360381019061017891906113de565b610563565b60405161018a9190611436565b60405180910390f35b34801561019e575f80fd5b506101a7610585565b6040516101b4919061145e565b60405180910390f35b3480156101c8575f80fd5b506101d161058b565b6040516101de919061145e565b60405180910390f35b3480156101f2575f80fd5b5061020d60048036038101906102089190611477565b610594565b60405161021a9190611436565b60405180910390f35b34801561022e575f80fd5b506102376105c2565b005b348015610244575f80fd5b5061024d6106b8565b60405161025a91906114e2565b60405180910390f35b34801561026e575f80fd5b506102776106c0565b604051610284919061145e565b60405180910390f35b348015610298575f80fd5b506102a16106c9565b6040516102ae919061145e565b60405180910390f35b3480156102c2575f80fd5b506102cb6106df565b6040516102d8919061145e565b60405180910390f35b3480156102ec575f80fd5b506102f56106e5565b604051610302919061150a565b60405180910390f35b348015610316575f80fd5b50610331600480360381019061032c9190611523565b61070a565b005b34801561033e575f80fd5b506103596004803603810190610354919061154e565b6107da565b604051610366919061145e565b60405180910390f35b61038960048036038101906103849190611523565b61081f565b005b348015610396575f80fd5b5061039f61093f565b6040516103ac919061145e565b60405180910390f35b3480156103c0575f80fd5b506103c9610945565b6040516103d6919061145e565b60405180910390f35b3480156103ea575f80fd5b506103f361095b565b604051610400919061132d565b60405180910390f35b348015610414575f80fd5b5061041d6109eb565b005b34801561042a575f80fd5b50610445600480360381019061044091906113de565b610b7b565b6040516104529190611436565b60405180910390f35b348015610466575f80fd5b50610481600480360381019061047c919061154e565b610b9d565b60405161048e9190611436565b60405180910390f35b3480156104a2575f80fd5b506104bd60048036038101906104b89190611579565b610bba565b6040516104ca919061145e565b60405180910390f35b6060600380546104e2906115e4565b80601f016020809104026020016040519081016040528092919081815260200182805461050e906115e4565b80156105595780601f1061053057610100808354040283529160200191610559565b820191905f5260205f20905b81548152906001019060200180831161053c57829003601f168201915b5050505050905090565b5f8061056d610c3c565b905061057a818585610c43565b600191505092915050565b60075481565b5f600254905090565b5f8061059e610c3c565b90506105ab858285610c55565b6105b6858585610ce7565b60019150509392505050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610651576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064890611684565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f193505050501580156106b5573d5f803e3d5ffd5b50565b5f6012905090565b5f600754905090565b5f6008546007546106da91906116cf565b905090565b60065481565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079090611684565b60405180910390fd5b806008819055507f66cbca4f3c64fecf1dcb9ce094abcf7f68c3450a1d4e3a8e917dd621edb4ebe0816040516107cf919061145e565b60405180910390a150565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f6008548261082e91906116cf565b90506006548261083c61058b565b6108469190611710565b1115610887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087e906117b3565b60405180910390fd5b8034146108c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c09061181b565b60405180910390fd5b6108d33383610dd7565b8160075f8282546108e49190611710565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f3ceffd410054fdaed44f598ff5c1fb450658778e2241892da4aa646979dee6178383604051610933929190611839565b60405180910390a25050565b60085481565b5f6007546006546109569190611860565b905090565b60606004805461096a906115e4565b80601f0160208091040260200160405190810160405280929190818152602001828054610996906115e4565b80156109e15780601f106109b8576101008083540402835291602001916109e1565b820191905f5260205f20905b8154815290600101906020018083116109c457829003601f168201915b5050505050905090565b5f6109f5336107da565b11610a35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2c906118dd565b60405180910390fd5b60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610abf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab690611945565b60405180910390fd5b600160095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555060075f815480929190610b2690611963565b9190505550610b36336001610e56565b3373ffffffffffffffffffffffffffffffffffffffff167f316d1ea3d1525e2bff370eb30cae16e7a334c48bb414303791bc219776e2cc2660405160405180910390a2565b5f80610b85610c3c565b9050610b92818585610ce7565b600191505092915050565b6009602052805f5260405f205f915054906101000a900460ff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b610c508383836001610ed5565b505050565b5f610c608484610bba565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610ce15781811015610cd2578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610cc99392919061198a565b60405180910390fd5b610ce084848484035f610ed5565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d57575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d4e919061150a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dc7575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610dbe919061150a565b60405180910390fd5b610dd28383836110a4565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e47575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e3e919061150a565b60405180910390fd5b610e525f83836110a4565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ec6575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ebd919061150a565b60405180910390fd5b610ed1825f836110a4565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f45575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610f3c919061150a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fb5575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610fac919061150a565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561109e578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611095919061145e565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110f4578060025f8282546110e89190611710565b925050819055506111c2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561117d578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016111749392919061198a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611209578060025f8282540392505081905550611253565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112b0919061145e565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6112ff826112bd565b61130981856112c7565b93506113198185602086016112d7565b611322816112e5565b840191505092915050565b5f6020820190508181035f83015261134581846112f5565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61137a82611351565b9050919050565b61138a81611370565b8114611394575f80fd5b50565b5f813590506113a581611381565b92915050565b5f819050919050565b6113bd816113ab565b81146113c7575f80fd5b50565b5f813590506113d8816113b4565b92915050565b5f80604083850312156113f4576113f361134d565b5b5f61140185828601611397565b9250506020611412858286016113ca565b9150509250929050565b5f8115159050919050565b6114308161141c565b82525050565b5f6020820190506114495f830184611427565b92915050565b611458816113ab565b82525050565b5f6020820190506114715f83018461144f565b92915050565b5f805f6060848603121561148e5761148d61134d565b5b5f61149b86828701611397565b93505060206114ac86828701611397565b92505060406114bd868287016113ca565b9150509250925092565b5f60ff82169050919050565b6114dc816114c7565b82525050565b5f6020820190506114f55f8301846114d3565b92915050565b61150481611370565b82525050565b5f60208201905061151d5f8301846114fb565b92915050565b5f602082840312156115385761153761134d565b5b5f611545848285016113ca565b91505092915050565b5f602082840312156115635761156261134d565b5b5f61157084828501611397565b91505092915050565b5f806040838503121561158f5761158e61134d565b5b5f61159c85828601611397565b92505060206115ad85828601611397565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806115fb57607f821691505b60208210810361160e5761160d6115b7565b5b50919050565b7f536f6c6f20756e206f7267616e697a7a61746f72652070756f206573656775695f8201527f72652071756573746120617a696f6e6500000000000000000000000000000000602082015250565b5f61166e6030836112c7565b915061167982611614565b604082019050919050565b5f6020820190508181035f83015261169b81611662565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6116d9826113ab565b91506116e4836113ab565b92508282026116f2816113ab565b91508282048414831517611709576117086116a2565b5b5092915050565b5f61171a826113ab565b9150611725836113ab565b925082820190508082111561173d5761173c6116a2565b5b92915050565b7f537570657261746f20696c206e756d65726f206d617373696d6f2064692070615f8201527f727465636970616e746900000000000000000000000000000000000000000000602082015250565b5f61179d602a836112c7565b91506117a882611743565b604082019050919050565b5f6020820190508181035f8301526117ca81611791565b9050919050565b7f496d706f72746f20696e766961746f206e6f6e20636f72726574746f000000005f82015250565b5f611805601c836112c7565b9150611810826117d1565b602082019050919050565b5f6020820190508181035f830152611832816117f9565b9050919050565b5f60408201905061184c5f83018561144f565b611859602083018461144f565b9392505050565b5f61186a826113ab565b9150611875836113ab565b925082820390508181111561188d5761188c6116a2565b5b92915050565b7f4e657373756e20746f6b656e20706f7373656475746f000000000000000000005f82015250565b5f6118c76016836112c7565b91506118d282611893565b602082019050919050565b5f6020820190508181035f8301526118f4816118bb565b9050919050565b7f546f6b656e207574696c697a7a61746f000000000000000000000000000000005f82015250565b5f61192f6010836112c7565b915061193a826118fb565b602082019050919050565b5f6020820190508181035f83015261195c81611923565b9050919050565b5f61196d826113ab565b91505f820361197f5761197e6116a2565b5b600182039050919050565b5f60608201905061199d5f8301866114fb565b6119aa602083018561144f565b6119b7604083018461144f565b94935050505056fea2646970667358221220319846fec81953f6d5ce34fb8ca053ec26af410a7c4a377b4506fd80a7d8a64164736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1F9D CODESIZE SUB DUP1 PUSH2 0x1F9D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x22C JUMP JUMPDEST DUP4 DUP4 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x4CC JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x52 SWAP2 SWAP1 PUSH2 0x4CC JUMP JUMPDEST POP POP POP CALLER PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH2 0x59B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x10B DUP3 PUSH2 0xC5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x12A JUMPI PUSH2 0x129 PUSH2 0xD5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13C PUSH2 0xAC JUMP JUMPDEST SWAP1 POP PUSH2 0x148 DUP3 DUP3 PUSH2 0x102 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x167 JUMPI PUSH2 0x166 PUSH2 0xD5 JUMP JUMPDEST JUMPDEST PUSH2 0x170 DUP3 PUSH2 0xC5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19D PUSH2 0x198 DUP5 PUSH2 0x14D JUMP JUMPDEST PUSH2 0x133 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B9 JUMPI PUSH2 0x1B8 PUSH2 0xC1 JUMP JUMPDEST JUMPDEST PUSH2 0x1C4 DUP5 DUP3 DUP6 PUSH2 0x17D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E0 JUMPI PUSH2 0x1DF PUSH2 0xBD JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1F0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20B DUP2 PUSH2 0x1F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x215 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x226 DUP2 PUSH2 0x202 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x244 JUMPI PUSH2 0x243 PUSH2 0xB5 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x261 JUMPI PUSH2 0x260 PUSH2 0xB9 JUMP JUMPDEST JUMPDEST PUSH2 0x26D DUP8 DUP3 DUP9 ADD PUSH2 0x1CC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28E JUMPI PUSH2 0x28D PUSH2 0xB9 JUMP JUMPDEST JUMPDEST PUSH2 0x29A DUP8 DUP3 DUP9 ADD PUSH2 0x1CC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AB DUP8 DUP3 DUP9 ADD PUSH2 0x218 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2BC DUP8 DUP3 DUP9 ADD PUSH2 0x218 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x316 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x329 JUMPI PUSH2 0x328 PUSH2 0x2D2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x38B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x350 JUMP JUMPDEST PUSH2 0x395 DUP7 DUP4 PUSH2 0x350 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3D0 PUSH2 0x3CB PUSH2 0x3C6 DUP5 PUSH2 0x1F9 JUMP JUMPDEST PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x1F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E9 DUP4 PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x3F5 DUP3 PUSH2 0x3D7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x35C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x411 PUSH2 0x405 JUMP JUMPDEST PUSH2 0x41C DUP2 DUP5 DUP5 PUSH2 0x3E0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x43F JUMPI PUSH2 0x434 PUSH0 DUP3 PUSH2 0x409 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x422 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x484 JUMPI PUSH2 0x455 DUP2 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x45E DUP5 PUSH2 0x341 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x46D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x481 PUSH2 0x479 DUP6 PUSH2 0x341 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x421 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A4 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x489 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4BC DUP4 DUP4 PUSH2 0x495 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4D5 DUP3 PUSH2 0x2C8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4EE JUMPI PUSH2 0x4ED PUSH2 0xD5 JUMP JUMPDEST JUMPDEST PUSH2 0x4F8 DUP3 SLOAD PUSH2 0x2FF JUMP JUMPDEST PUSH2 0x503 DUP3 DUP3 DUP6 PUSH2 0x443 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x534 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x522 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x52C DUP6 DUP3 PUSH2 0x4B1 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x593 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x542 DUP7 PUSH2 0x32F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x569 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x544 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x586 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x582 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x495 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x19F5 DUP1 PUSH2 0x5A8 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x129 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61203265 GT PUSH2 0xAA JUMPI DUP1 PUSH4 0x906D895D GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x906D895D EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x9B13B20E EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xD866B0B6 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x497 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x61203265 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x676C0D77 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x7B97008D EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x7FF9B596 EQ PUSH2 0x38B JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x24600FC3 GT PUSH2 0xF1 JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x520198A8 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x5A4DC09F EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x5F3D7FA1 EQ PUSH2 0x2B7 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA5D288C EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x237 PUSH2 0x5C2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x277 PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1523 JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x154E JUMP JUMPDEST PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x1523 JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0x93F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C9 PUSH2 0x945 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F3 PUSH2 0x95B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x414 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x41D PUSH2 0x9EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x445 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x481 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x154E JUMP JUMPDEST PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48E SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4E2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x50E SWAP1 PUSH2 0x15E4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x559 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x530 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x559 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x53C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x56D PUSH2 0xC3C JUMP JUMPDEST SWAP1 POP PUSH2 0x57A DUP2 DUP6 DUP6 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x59E PUSH2 0xC3C JUMP JUMPDEST SWAP1 POP PUSH2 0x5AB DUP6 DUP3 DUP6 PUSH2 0xC55 JUMP JUMPDEST PUSH2 0x5B6 DUP6 DUP6 DUP6 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x651 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x648 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6B5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0x16CF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x799 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x790 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0x66CBCA4F3C64FECF1DCB9CE094ABCF7F68C3450A1D4E3A8E917DD621EDB4EBE0 DUP2 PUSH1 0x40 MLOAD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x82E SWAP2 SWAP1 PUSH2 0x16CF JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD DUP3 PUSH2 0x83C PUSH2 0x58B JUMP JUMPDEST PUSH2 0x846 SWAP2 SWAP1 PUSH2 0x1710 JUMP JUMPDEST GT ISZERO PUSH2 0x887 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87E SWAP1 PUSH2 0x17B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLVALUE EQ PUSH2 0x8C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C0 SWAP1 PUSH2 0x181B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8D3 CALLER DUP4 PUSH2 0xDD7 JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0x1710 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3CEFFD410054FDAED44F598FF5C1FB450658778E2241892DA4AA646979DEE617 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x933 SWAP3 SWAP2 SWAP1 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x956 SWAP2 SWAP1 PUSH2 0x1860 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x96A SWAP1 PUSH2 0x15E4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x996 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x9F5 CALLER PUSH2 0x7DA JUMP JUMPDEST GT PUSH2 0xA35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2C SWAP1 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xABF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB6 SWAP1 PUSH2 0x1945 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB26 SWAP1 PUSH2 0x1963 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xB36 CALLER PUSH1 0x1 PUSH2 0xE56 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x316D1EA3D1525E2BFF370EB30CAE16E7A334C48BB414303791BC219776E2CC26 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB85 PUSH2 0xC3C JUMP JUMPDEST SWAP1 POP PUSH2 0xB92 DUP2 DUP6 DUP6 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC50 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xED5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC60 DUP5 DUP5 PUSH2 0xBBA JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xCE1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCD2 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x198A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xED5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD57 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4E SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBE SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDD2 DUP4 DUP4 DUP4 PUSH2 0x10A4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE47 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3E SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE52 PUSH0 DUP4 DUP4 PUSH2 0x10A4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBD SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xED1 DUP3 PUSH0 DUP4 PUSH2 0x10A4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF45 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3C SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFB5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAC SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x109E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1095 SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10E8 SWAP2 SWAP1 PUSH2 0x1710 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11C2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x117D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1174 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x198A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1209 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1253 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x12B0 SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12FF DUP3 PUSH2 0x12BD JUMP JUMPDEST PUSH2 0x1309 DUP2 DUP6 PUSH2 0x12C7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1319 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0x1322 DUP2 PUSH2 0x12E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1345 DUP2 DUP5 PUSH2 0x12F5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x137A DUP3 PUSH2 0x1351 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x138A DUP2 PUSH2 0x1370 JUMP JUMPDEST DUP2 EQ PUSH2 0x1394 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13A5 DUP2 PUSH2 0x1381 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BD DUP2 PUSH2 0x13AB JUMP JUMPDEST DUP2 EQ PUSH2 0x13C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13D8 DUP2 PUSH2 0x13B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F4 JUMPI PUSH2 0x13F3 PUSH2 0x134D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1401 DUP6 DUP3 DUP7 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1412 DUP6 DUP3 DUP7 ADD PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1430 DUP2 PUSH2 0x141C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1449 PUSH0 DUP4 ADD DUP5 PUSH2 0x1427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1458 DUP2 PUSH2 0x13AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1471 PUSH0 DUP4 ADD DUP5 PUSH2 0x144F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x148E JUMPI PUSH2 0x148D PUSH2 0x134D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x149B DUP7 DUP3 DUP8 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14AC DUP7 DUP3 DUP8 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x14BD DUP7 DUP3 DUP8 ADD PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14DC DUP2 PUSH2 0x14C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14F5 PUSH0 DUP4 ADD DUP5 PUSH2 0x14D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1504 DUP2 PUSH2 0x1370 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x151D PUSH0 DUP4 ADD DUP5 PUSH2 0x14FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1538 JUMPI PUSH2 0x1537 PUSH2 0x134D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1545 DUP5 DUP3 DUP6 ADD PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1563 JUMPI PUSH2 0x1562 PUSH2 0x134D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1570 DUP5 DUP3 DUP6 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x158F JUMPI PUSH2 0x158E PUSH2 0x134D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x159C DUP6 DUP3 DUP7 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15AD DUP6 DUP3 DUP7 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x15FB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x160E JUMPI PUSH2 0x160D PUSH2 0x15B7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536F6C6F20756E206F7267616E697A7A61746F72652070756F20657365677569 PUSH0 DUP3 ADD MSTORE PUSH32 0x72652071756573746120617A696F6E6500000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x166E PUSH1 0x30 DUP4 PUSH2 0x12C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1679 DUP3 PUSH2 0x1614 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x169B DUP2 PUSH2 0x1662 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16D9 DUP3 PUSH2 0x13AB JUMP JUMPDEST SWAP2 POP PUSH2 0x16E4 DUP4 PUSH2 0x13AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x16F2 DUP2 PUSH2 0x13AB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1709 JUMPI PUSH2 0x1708 PUSH2 0x16A2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x171A DUP3 PUSH2 0x13AB JUMP JUMPDEST SWAP2 POP PUSH2 0x1725 DUP4 PUSH2 0x13AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x173D JUMPI PUSH2 0x173C PUSH2 0x16A2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x537570657261746F20696C206E756D65726F206D617373696D6F206469207061 PUSH0 DUP3 ADD MSTORE PUSH32 0x727465636970616E746900000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x179D PUSH1 0x2A DUP4 PUSH2 0x12C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x17A8 DUP3 PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17CA DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496D706F72746F20696E766961746F206E6F6E20636F72726574746F00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1805 PUSH1 0x1C DUP4 PUSH2 0x12C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1810 DUP3 PUSH2 0x17D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1832 DUP2 PUSH2 0x17F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x184C PUSH0 DUP4 ADD DUP6 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x1859 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x144F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x186A DUP3 PUSH2 0x13AB JUMP JUMPDEST SWAP2 POP PUSH2 0x1875 DUP4 PUSH2 0x13AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x188D JUMPI PUSH2 0x188C PUSH2 0x16A2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E657373756E20746F6B656E20706F7373656475746F00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18C7 PUSH1 0x16 DUP4 PUSH2 0x12C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x18D2 DUP3 PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18F4 DUP2 PUSH2 0x18BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E207574696C697A7A61746F00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x192F PUSH1 0x10 DUP4 PUSH2 0x12C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x193A DUP3 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x195C DUP2 PUSH2 0x1923 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x196D DUP3 PUSH2 0x13AB JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x197F JUMPI PUSH2 0x197E PUSH2 0x16A2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x199D PUSH0 DUP4 ADD DUP7 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x19AA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x19B7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x144F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SWAP9 CHAINID INVALID 0xC8 NOT MSTORE8 0xF6 0xD5 0xCE CALLVALUE 0xFB DUP13 LOG0 MSTORE8 0xEC 0x26 0xAF COINBASE EXP PUSH29 0x4A377B4506FD80A7D8A64164736F6C6343000819003300000000000000 ",
							"sourceMap": "126:2807:5:-:0;;;641:280;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;790:5;797:7;1970:5:1;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;829:10:5::1;817:9;;:22;;;;;;;;;;;;;;;;;;865:13;850:12;:28;;;;902:11;889:10;:24;;;;641:280:::0;;;;126:2807;;7:75:6;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:77::-;2607:7;2636:5;2625:16;;2570:77;;;:::o;2653:122::-;2726:24;2744:5;2726:24;:::i;:::-;2719:5;2716:35;2706:63;;2765:1;2762;2755:12;2706:63;2653:122;:::o;2781:143::-;2838:5;2869:6;2863:13;2854:22;;2885:33;2912:5;2885:33;:::i;:::-;2781:143;;;;:::o;2930:1166::-;3047:6;3055;3063;3071;3120:3;3108:9;3099:7;3095:23;3091:33;3088:120;;;3127:79;;:::i;:::-;3088:120;3268:1;3257:9;3253:17;3247:24;3298:18;3290:6;3287:30;3284:117;;;3320:79;;:::i;:::-;3284:117;3425:74;3491:7;3482:6;3471:9;3467:22;3425:74;:::i;:::-;3415:84;;3218:291;3569:2;3558:9;3554:18;3548:25;3600:18;3592:6;3589:30;3586:117;;;3622:79;;:::i;:::-;3586:117;3727:74;3793:7;3784:6;3773:9;3769:22;3727:74;:::i;:::-;3717:84;;3519:292;3850:2;3876:64;3932:7;3923:6;3912:9;3908:22;3876:64;:::i;:::-;3866:74;;3821:129;3989:2;4015:64;4071:7;4062:6;4051:9;4047:22;4015:64;:::i;:::-;4005:74;;3960:129;2930:1166;;;;;;;:::o;4102:99::-;4154:6;4188:5;4182:12;4172:22;;4102:99;;;:::o;4207:180::-;4255:77;4252:1;4245:88;4352:4;4349:1;4342:15;4376:4;4373:1;4366:15;4393:320;4437:6;4474:1;4468:4;4464:12;4454:22;;4521:1;4515:4;4511:12;4542:18;4532:81;;4598:4;4590:6;4586:17;4576:27;;4532:81;4660:2;4652:6;4649:14;4629:18;4626:38;4623:84;;4679:18;;:::i;:::-;4623:84;4444:269;4393:320;;;:::o;4719:141::-;4768:4;4791:3;4783:11;;4814:3;4811:1;4804:14;4848:4;4845:1;4835:18;4827:26;;4719:141;;;:::o;4866:93::-;4903:6;4950:2;4945;4938:5;4934:14;4930:23;4920:33;;4866:93;;;:::o;4965:107::-;5009:8;5059:5;5053:4;5049:16;5028:37;;4965:107;;;;:::o;5078:393::-;5147:6;5197:1;5185:10;5181:18;5220:97;5250:66;5239:9;5220:97;:::i;:::-;5338:39;5368:8;5357:9;5338:39;:::i;:::-;5326:51;;5410:4;5406:9;5399:5;5395:21;5386:30;;5459:4;5449:8;5445:19;5438:5;5435:30;5425:40;;5154:317;;5078:393;;;;;:::o;5477:60::-;5505:3;5526:5;5519:12;;5477:60;;;:::o;5543:142::-;5593:9;5626:53;5644:34;5653:24;5671:5;5653:24;:::i;:::-;5644:34;:::i;:::-;5626:53;:::i;:::-;5613:66;;5543:142;;;:::o;5691:75::-;5734:3;5755:5;5748:12;;5691:75;;;:::o;5772:269::-;5882:39;5913:7;5882:39;:::i;:::-;5943:91;5992:41;6016:16;5992:41;:::i;:::-;5984:6;5977:4;5971:11;5943:91;:::i;:::-;5937:4;5930:105;5848:193;5772:269;;;:::o;6047:73::-;6092:3;6047:73;:::o;6126:189::-;6203:32;;:::i;:::-;6244:65;6302:6;6294;6288:4;6244:65;:::i;:::-;6179:136;6126:189;;:::o;6321:186::-;6381:120;6398:3;6391:5;6388:14;6381:120;;;6452:39;6489:1;6482:5;6452:39;:::i;:::-;6425:1;6418:5;6414:13;6405:22;;6381:120;;;6321:186;;:::o;6513:543::-;6614:2;6609:3;6606:11;6603:446;;;6648:38;6680:5;6648:38;:::i;:::-;6732:29;6750:10;6732:29;:::i;:::-;6722:8;6718:44;6915:2;6903:10;6900:18;6897:49;;;6936:8;6921:23;;6897:49;6959:80;7015:22;7033:3;7015:22;:::i;:::-;7005:8;7001:37;6988:11;6959:80;:::i;:::-;6618:431;;6603:446;6513:543;;;:::o;7062:117::-;7116:8;7166:5;7160:4;7156:16;7135:37;;7062:117;;;;:::o;7185:169::-;7229:6;7262:51;7310:1;7306:6;7298:5;7295:1;7291:13;7262:51;:::i;:::-;7258:56;7343:4;7337;7333:15;7323:25;;7236:118;7185:169;;;;:::o;7359:295::-;7435:4;7581:29;7606:3;7600:4;7581:29;:::i;:::-;7573:37;;7643:3;7640:1;7636:11;7630:4;7627:21;7619:29;;7359:295;;;;:::o;7659:1395::-;7776:37;7809:3;7776:37;:::i;:::-;7878:18;7870:6;7867:30;7864:56;;;7900:18;;:::i;:::-;7864:56;7944:38;7976:4;7970:11;7944:38;:::i;:::-;8029:67;8089:6;8081;8075:4;8029:67;:::i;:::-;8123:1;8147:4;8134:17;;8179:2;8171:6;8168:14;8196:1;8191:618;;;;8853:1;8870:6;8867:77;;;8919:9;8914:3;8910:19;8904:26;8895:35;;8867:77;8970:67;9030:6;9023:5;8970:67;:::i;:::-;8964:4;8957:81;8826:222;8161:887;;8191:618;8243:4;8239:9;8231:6;8227:22;8277:37;8309:4;8277:37;:::i;:::-;8336:1;8350:208;8364:7;8361:1;8358:14;8350:208;;;8443:9;8438:3;8434:19;8428:26;8420:6;8413:42;8494:1;8486:6;8482:14;8472:24;;8541:2;8530:9;8526:18;8513:31;;8387:4;8384:1;8380:12;8375:17;;8350:208;;;8586:6;8577:7;8574:19;8571:179;;;8644:9;8639:3;8635:19;8629:26;8687:48;8729:4;8721:6;8717:17;8706:9;8687:48;:::i;:::-;8679:6;8672:64;8594:156;8571:179;8796:1;8792;8784:6;8780:14;8776:22;8770:4;8763:36;8198:611;;;8161:887;;7751:1303;;;7659:1395;;:::o;126:2807:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 3139,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 3797,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_524": {
									"entryPoint": 3670,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 3543,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 3132,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 3157,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 3303,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 4260,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 3002,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1379,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 2010,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 1720,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAvailableSeats_994": {
									"entryPoint": 2373,
									"id": 994,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTicketsSold_1002": {
									"entryPoint": 1728,
									"id": 1002,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTotalAccumulated_1012": {
									"entryPoint": 1737,
									"id": 1012,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasAttended_802": {
									"entryPoint": 2973,
									"id": 802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxAttendees_794": {
									"entryPoint": 1759,
									"id": 794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_197": {
									"entryPoint": 1235,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@organizer_792": {
									"entryPoint": 1765,
									"id": 792,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@purchaseTokens_922": {
									"entryPoint": 2079,
									"id": 922,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@recordAttendance_966": {
									"entryPoint": 2539,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_206": {
									"entryPoint": 2395,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenPrice_798": {
									"entryPoint": 2367,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalAttendees_796": {
									"entryPoint": 1413,
									"id": 796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_224": {
									"entryPoint": 1419,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1428,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 2939,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateTokenPrice_875": {
									"entryPoint": 1802,
									"id": 875,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawFunds_984": {
									"entryPoint": 1474,
									"id": 984,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_27c49403adc40fe0f856a373524ee3f36e7d19d61bc3f92604bc3fdbbb48c4f5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_50a758898a4b38e6b10f630a2548014d4902e892601e32f381a8c9cbb33c80a5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5999effb3dc573f58face8177a8dfbe7b2b4e361623f526c53749ef21323fef1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_784abb4172389cad1df52f00030b4dad397b2e4d004fc59fa41f872190258fa4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_927e9bae9db212268b760267d73ae19086f86260fc0b99fc43ef3200201f00fd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6538,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_27c49403adc40fe0f856a373524ee3f36e7d19d61bc3f92604bc3fdbbb48c4f5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_50a758898a4b38e6b10f630a2548014d4902e892601e32f381a8c9cbb33c80a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5999effb3dc573f58face8177a8dfbe7b2b4e361623f526c53749ef21323fef1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_784abb4172389cad1df52f00030b4dad397b2e4d004fc59fa41f872190258fa4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_927e9bae9db212268b760267d73ae19086f86260fc0b99fc43ef3200201f00fd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6201,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4823,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 6499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5794,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4941,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_27c49403adc40fe0f856a373524ee3f36e7d19d61bc3f92604bc3fdbbb48c4f5": {
									"entryPoint": 5652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_50a758898a4b38e6b10f630a2548014d4902e892601e32f381a8c9cbb33c80a5": {
									"entryPoint": 6291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5999effb3dc573f58face8177a8dfbe7b2b4e361623f526c53749ef21323fef1": {
									"entryPoint": 6395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_784abb4172389cad1df52f00030b4dad397b2e4d004fc59fa41f872190258fa4": {
									"entryPoint": 6097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_927e9bae9db212268b760267d73ae19086f86260fc0b99fc43ef3200201f00fd": {
									"entryPoint": 5955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13714:6",
										"nodeType": "YulBlock",
										"src": "0:13714:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:77:6",
													"nodeType": "YulBlock",
													"src": "349:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:6"
																},
																"nativeSrc": "360:23:6",
																"nodeType": "YulFunctionCall",
																"src": "360:23:6"
															},
															"nativeSrc": "360:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:6"
																		},
																		"nativeSrc": "399:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:6",
																		"nodeType": "YulLiteral",
																		"src": "417:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:6"
																},
																"nativeSrc": "392:27:6",
																"nodeType": "YulFunctionCall",
																"src": "392:27:6"
															},
															"nativeSrc": "392:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:139:6"
											},
											{
												"body": {
													"nativeSrc": "480:54:6",
													"nodeType": "YulBlock",
													"src": "480:54:6",
													"statements": [
														{
															"nativeSrc": "490:38:6",
															"nodeType": "YulAssignment",
															"src": "490:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:6",
																				"nodeType": "YulLiteral",
																				"src": "515:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:6"
																		},
																		"nativeSrc": "504:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:6",
																				"nodeType": "YulLiteral",
																				"src": "524:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:6"
																		},
																		"nativeSrc": "520:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:6"
																},
																"nativeSrc": "500:28:6",
																"nodeType": "YulFunctionCall",
																"src": "500:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:6",
														"nodeType": "YulTypedName",
														"src": "463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:6",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "432:102:6"
											},
											{
												"body": {
													"nativeSrc": "632:285:6",
													"nodeType": "YulBlock",
													"src": "632:285:6",
													"statements": [
														{
															"nativeSrc": "642:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:6"
																},
																"nativeSrc": "656:39:6",
																"nodeType": "YulFunctionCall",
																"src": "656:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:6",
																	"nodeType": "YulTypedName",
																	"src": "646:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:6",
															"nodeType": "YulAssignment",
															"src": "704:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:6"
																},
																"nativeSrc": "711:71:6",
																"nodeType": "YulFunctionCall",
																"src": "711:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:6",
																				"nodeType": "YulLiteral",
																				"src": "837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:6"
																		},
																		"nativeSrc": "826:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:6"
																},
																"nativeSrc": "791:65:6",
																"nodeType": "YulFunctionCall",
																"src": "791:65:6"
															},
															"nativeSrc": "791:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:6"
														},
														{
															"nativeSrc": "865:46:6",
															"nodeType": "YulAssignment",
															"src": "865:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:6"
																		},
																		"nativeSrc": "881:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:6"
																},
																"nativeSrc": "872:39:6",
																"nodeType": "YulFunctionCall",
																"src": "872:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:6",
														"nodeType": "YulTypedName",
														"src": "613:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:6",
														"nodeType": "YulTypedName",
														"src": "620:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:6",
														"nodeType": "YulTypedName",
														"src": "628:3:6",
														"type": ""
													}
												],
												"src": "540:377:6"
											},
											{
												"body": {
													"nativeSrc": "1041:195:6",
													"nodeType": "YulBlock",
													"src": "1041:195:6",
													"statements": [
														{
															"nativeSrc": "1051:26:6",
															"nodeType": "YulAssignment",
															"src": "1051:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:6"
																},
																"nativeSrc": "1059:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:6"
																		},
																		"nativeSrc": "1094:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:6"
																		},
																		"nativeSrc": "1113:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:6"
																},
																"nativeSrc": "1087:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:6"
															},
															"nativeSrc": "1087:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:6"
														},
														{
															"nativeSrc": "1143:86:6",
															"nodeType": "YulAssignment",
															"src": "1143:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:6"
																},
																"nativeSrc": "1151:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:6",
														"nodeType": "YulTypedName",
														"src": "1013:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:6",
														"nodeType": "YulTypedName",
														"src": "1025:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:6",
														"nodeType": "YulTypedName",
														"src": "1036:4:6",
														"type": ""
													}
												],
												"src": "923:313:6"
											},
											{
												"body": {
													"nativeSrc": "1282:35:6",
													"nodeType": "YulBlock",
													"src": "1282:35:6",
													"statements": [
														{
															"nativeSrc": "1292:19:6",
															"nodeType": "YulAssignment",
															"src": "1292:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:6"
																},
																"nativeSrc": "1302:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:6",
														"nodeType": "YulTypedName",
														"src": "1275:6:6",
														"type": ""
													}
												],
												"src": "1242:75:6"
											},
											{
												"body": {
													"nativeSrc": "1412:28:6",
													"nodeType": "YulBlock",
													"src": "1412:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:6"
																},
																"nativeSrc": "1422:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:6"
															},
															"nativeSrc": "1422:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:6"
											},
											{
												"body": {
													"nativeSrc": "1535:28:6",
													"nodeType": "YulBlock",
													"src": "1535:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:6"
																},
																"nativeSrc": "1545:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:6"
															},
															"nativeSrc": "1545:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:6"
											},
											{
												"body": {
													"nativeSrc": "1614:81:6",
													"nodeType": "YulBlock",
													"src": "1614:81:6",
													"statements": [
														{
															"nativeSrc": "1624:65:6",
															"nodeType": "YulAssignment",
															"src": "1624:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:6"
																},
																"nativeSrc": "1635:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:6",
														"nodeType": "YulTypedName",
														"src": "1596:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:6",
														"nodeType": "YulTypedName",
														"src": "1606:7:6",
														"type": ""
													}
												],
												"src": "1569:126:6"
											},
											{
												"body": {
													"nativeSrc": "1746:51:6",
													"nodeType": "YulBlock",
													"src": "1746:51:6",
													"statements": [
														{
															"nativeSrc": "1756:35:6",
															"nodeType": "YulAssignment",
															"src": "1756:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:6"
																},
																"nativeSrc": "1767:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:6",
														"nodeType": "YulTypedName",
														"src": "1728:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:6",
														"nodeType": "YulTypedName",
														"src": "1738:7:6",
														"type": ""
													}
												],
												"src": "1701:96:6"
											},
											{
												"body": {
													"nativeSrc": "1846:79:6",
													"nodeType": "YulBlock",
													"src": "1846:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:6",
																"nodeType": "YulBlock",
																"src": "1903:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:6"
																			},
																			"nativeSrc": "1905:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:6"
																		},
																		"nativeSrc": "1905:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:6"
																				},
																				"nativeSrc": "1876:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:6"
																		},
																		"nativeSrc": "1866:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:6"
																},
																"nativeSrc": "1859:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:6"
															},
															"nativeSrc": "1856:63:6",
															"nodeType": "YulIf",
															"src": "1856:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:6",
														"nodeType": "YulTypedName",
														"src": "1839:5:6",
														"type": ""
													}
												],
												"src": "1803:122:6"
											},
											{
												"body": {
													"nativeSrc": "1983:87:6",
													"nodeType": "YulBlock",
													"src": "1983:87:6",
													"statements": [
														{
															"nativeSrc": "1993:29:6",
															"nodeType": "YulAssignment",
															"src": "1993:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:6"
																},
																"nativeSrc": "2002:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:6"
																},
																"nativeSrc": "2031:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:6"
															},
															"nativeSrc": "2031:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:6",
														"nodeType": "YulTypedName",
														"src": "1961:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:6",
														"nodeType": "YulTypedName",
														"src": "1969:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:6",
														"nodeType": "YulTypedName",
														"src": "1977:5:6",
														"type": ""
													}
												],
												"src": "1931:139:6"
											},
											{
												"body": {
													"nativeSrc": "2121:32:6",
													"nodeType": "YulBlock",
													"src": "2121:32:6",
													"statements": [
														{
															"nativeSrc": "2131:16:6",
															"nodeType": "YulAssignment",
															"src": "2131:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:6",
																"nodeType": "YulIdentifier",
																"src": "2142:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:6",
														"nodeType": "YulTypedName",
														"src": "2103:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:6",
														"nodeType": "YulTypedName",
														"src": "2113:7:6",
														"type": ""
													}
												],
												"src": "2076:77:6"
											},
											{
												"body": {
													"nativeSrc": "2202:79:6",
													"nodeType": "YulBlock",
													"src": "2202:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:6",
																"nodeType": "YulBlock",
																"src": "2259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:6"
																			},
																			"nativeSrc": "2261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:6"
																		},
																		"nativeSrc": "2261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:6"
																				},
																				"nativeSrc": "2232:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:6"
																		},
																		"nativeSrc": "2222:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:6"
																},
																"nativeSrc": "2215:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:6"
															},
															"nativeSrc": "2212:63:6",
															"nodeType": "YulIf",
															"src": "2212:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:6",
														"nodeType": "YulTypedName",
														"src": "2195:5:6",
														"type": ""
													}
												],
												"src": "2159:122:6"
											},
											{
												"body": {
													"nativeSrc": "2339:87:6",
													"nodeType": "YulBlock",
													"src": "2339:87:6",
													"statements": [
														{
															"nativeSrc": "2349:29:6",
															"nodeType": "YulAssignment",
															"src": "2349:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:6"
																},
																"nativeSrc": "2358:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:6"
																},
																"nativeSrc": "2387:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:6"
															},
															"nativeSrc": "2387:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:6",
														"nodeType": "YulTypedName",
														"src": "2317:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:6",
														"nodeType": "YulTypedName",
														"src": "2325:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:6",
														"nodeType": "YulTypedName",
														"src": "2333:5:6",
														"type": ""
													}
												],
												"src": "2287:139:6"
											},
											{
												"body": {
													"nativeSrc": "2515:391:6",
													"nodeType": "YulBlock",
													"src": "2515:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:6",
																"nodeType": "YulBlock",
																"src": "2561:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:6"
																			},
																			"nativeSrc": "2563:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:6"
																		},
																		"nativeSrc": "2563:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:6"
																		},
																		"nativeSrc": "2532:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:6"
																},
																"nativeSrc": "2528:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:6"
															},
															"nativeSrc": "2525:119:6",
															"nodeType": "YulIf",
															"src": "2525:119:6"
														},
														{
															"nativeSrc": "2654:117:6",
															"nodeType": "YulBlock",
															"src": "2654:117:6",
															"statements": [
																{
																	"nativeSrc": "2669:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:6"
																				},
																				"nativeSrc": "2729:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:6"
																		},
																		"nativeSrc": "2708:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:6",
															"nodeType": "YulBlock",
															"src": "2781:118:6",
															"statements": [
																{
																	"nativeSrc": "2796:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:6"
																				},
																				"nativeSrc": "2857:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:6"
																		},
																		"nativeSrc": "2836:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:6",
														"nodeType": "YulTypedName",
														"src": "2477:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:6",
														"nodeType": "YulTypedName",
														"src": "2488:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:6",
														"nodeType": "YulTypedName",
														"src": "2500:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:6",
														"nodeType": "YulTypedName",
														"src": "2508:6:6",
														"type": ""
													}
												],
												"src": "2432:474:6"
											},
											{
												"body": {
													"nativeSrc": "2954:48:6",
													"nodeType": "YulBlock",
													"src": "2954:48:6",
													"statements": [
														{
															"nativeSrc": "2964:32:6",
															"nodeType": "YulAssignment",
															"src": "2964:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:6"
																		},
																		"nativeSrc": "2982:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:6"
																},
																"nativeSrc": "2975:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:6",
														"nodeType": "YulTypedName",
														"src": "2936:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:6",
														"nodeType": "YulTypedName",
														"src": "2946:7:6",
														"type": ""
													}
												],
												"src": "2912:90:6"
											},
											{
												"body": {
													"nativeSrc": "3067:50:6",
													"nodeType": "YulBlock",
													"src": "3067:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:6"
																		},
																		"nativeSrc": "3089:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:6"
																},
																"nativeSrc": "3077:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:6"
															},
															"nativeSrc": "3077:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:6",
														"nodeType": "YulTypedName",
														"src": "3055:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:6",
														"nodeType": "YulTypedName",
														"src": "3062:3:6",
														"type": ""
													}
												],
												"src": "3008:109:6"
											},
											{
												"body": {
													"nativeSrc": "3215:118:6",
													"nodeType": "YulBlock",
													"src": "3215:118:6",
													"statements": [
														{
															"nativeSrc": "3225:26:6",
															"nodeType": "YulAssignment",
															"src": "3225:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:6"
																},
																"nativeSrc": "3233:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:6"
																		},
																		"nativeSrc": "3308:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:6"
																},
																"nativeSrc": "3261:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:6"
															},
															"nativeSrc": "3261:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:6",
														"nodeType": "YulTypedName",
														"src": "3187:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:6",
														"nodeType": "YulTypedName",
														"src": "3199:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:6",
														"nodeType": "YulTypedName",
														"src": "3210:4:6",
														"type": ""
													}
												],
												"src": "3123:210:6"
											},
											{
												"body": {
													"nativeSrc": "3404:53:6",
													"nodeType": "YulBlock",
													"src": "3404:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:6"
																		},
																		"nativeSrc": "3426:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:6"
																},
																"nativeSrc": "3414:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:6"
															},
															"nativeSrc": "3414:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:6",
														"nodeType": "YulTypedName",
														"src": "3392:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:6",
														"nodeType": "YulTypedName",
														"src": "3399:3:6",
														"type": ""
													}
												],
												"src": "3339:118:6"
											},
											{
												"body": {
													"nativeSrc": "3561:124:6",
													"nodeType": "YulBlock",
													"src": "3561:124:6",
													"statements": [
														{
															"nativeSrc": "3571:26:6",
															"nodeType": "YulAssignment",
															"src": "3571:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:6"
																},
																"nativeSrc": "3579:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:6"
																		},
																		"nativeSrc": "3660:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:6"
																},
																"nativeSrc": "3607:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:6"
															},
															"nativeSrc": "3607:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:6",
														"nodeType": "YulTypedName",
														"src": "3533:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:6",
														"nodeType": "YulTypedName",
														"src": "3545:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:6",
														"nodeType": "YulTypedName",
														"src": "3556:4:6",
														"type": ""
													}
												],
												"src": "3463:222:6"
											},
											{
												"body": {
													"nativeSrc": "3791:519:6",
													"nodeType": "YulBlock",
													"src": "3791:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:6",
																"nodeType": "YulBlock",
																"src": "3837:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:6"
																			},
																			"nativeSrc": "3839:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:6"
																		},
																		"nativeSrc": "3839:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:6"
																		},
																		"nativeSrc": "3808:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:6"
																},
																"nativeSrc": "3804:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:6"
															},
															"nativeSrc": "3801:119:6",
															"nodeType": "YulIf",
															"src": "3801:119:6"
														},
														{
															"nativeSrc": "3930:117:6",
															"nodeType": "YulBlock",
															"src": "3930:117:6",
															"statements": [
																{
																	"nativeSrc": "3945:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:6"
																				},
																				"nativeSrc": "4005:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:6"
																		},
																		"nativeSrc": "3984:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:6",
															"nodeType": "YulBlock",
															"src": "4057:118:6",
															"statements": [
																{
																	"nativeSrc": "4072:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:6"
																				},
																				"nativeSrc": "4133:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:6"
																		},
																		"nativeSrc": "4112:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:6",
															"nodeType": "YulBlock",
															"src": "4185:118:6",
															"statements": [
																{
																	"nativeSrc": "4200:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:6"
																				},
																				"nativeSrc": "4261:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:6"
																		},
																		"nativeSrc": "4240:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:6",
														"nodeType": "YulTypedName",
														"src": "3745:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:6",
														"nodeType": "YulTypedName",
														"src": "3756:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:6",
														"nodeType": "YulTypedName",
														"src": "3768:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:6",
														"nodeType": "YulTypedName",
														"src": "3776:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:6",
														"nodeType": "YulTypedName",
														"src": "3784:6:6",
														"type": ""
													}
												],
												"src": "3691:619:6"
											},
											{
												"body": {
													"nativeSrc": "4359:43:6",
													"nodeType": "YulBlock",
													"src": "4359:43:6",
													"statements": [
														{
															"nativeSrc": "4369:27:6",
															"nodeType": "YulAssignment",
															"src": "4369:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:6"
																},
																"nativeSrc": "4380:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:6",
														"nodeType": "YulTypedName",
														"src": "4341:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:6",
														"nodeType": "YulTypedName",
														"src": "4351:7:6",
														"type": ""
													}
												],
												"src": "4316:86:6"
											},
											{
												"body": {
													"nativeSrc": "4469:51:6",
													"nodeType": "YulBlock",
													"src": "4469:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:6"
																		},
																		"nativeSrc": "4491:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:6"
																},
																"nativeSrc": "4479:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:6"
															},
															"nativeSrc": "4479:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:6",
														"nodeType": "YulTypedName",
														"src": "4457:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:6",
														"nodeType": "YulTypedName",
														"src": "4464:3:6",
														"type": ""
													}
												],
												"src": "4408:112:6"
											},
											{
												"body": {
													"nativeSrc": "4620:120:6",
													"nodeType": "YulBlock",
													"src": "4620:120:6",
													"statements": [
														{
															"nativeSrc": "4630:26:6",
															"nodeType": "YulAssignment",
															"src": "4630:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:6"
																},
																"nativeSrc": "4638:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:6"
																		},
																		"nativeSrc": "4715:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:6"
																},
																"nativeSrc": "4666:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:6"
															},
															"nativeSrc": "4666:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:6",
														"nodeType": "YulTypedName",
														"src": "4592:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:6",
														"nodeType": "YulTypedName",
														"src": "4604:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:6",
														"nodeType": "YulTypedName",
														"src": "4615:4:6",
														"type": ""
													}
												],
												"src": "4526:214:6"
											},
											{
												"body": {
													"nativeSrc": "4811:53:6",
													"nodeType": "YulBlock",
													"src": "4811:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4828:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4828:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4851:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4851:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4833:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4833:17:6"
																		},
																		"nativeSrc": "4833:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4833:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4821:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4821:6:6"
																},
																"nativeSrc": "4821:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4821:37:6"
															},
															"nativeSrc": "4821:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4821:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4746:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4799:5:6",
														"nodeType": "YulTypedName",
														"src": "4799:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4806:3:6",
														"nodeType": "YulTypedName",
														"src": "4806:3:6",
														"type": ""
													}
												],
												"src": "4746:118:6"
											},
											{
												"body": {
													"nativeSrc": "4968:124:6",
													"nodeType": "YulBlock",
													"src": "4968:124:6",
													"statements": [
														{
															"nativeSrc": "4978:26:6",
															"nodeType": "YulAssignment",
															"src": "4978:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4990:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4990:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5001:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5001:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4986:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4986:3:6"
																},
																"nativeSrc": "4986:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4986:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4978:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4978:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5058:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5058:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5071:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5071:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5082:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5082:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5067:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5067:3:6"
																		},
																		"nativeSrc": "5067:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5067:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5014:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5014:43:6"
																},
																"nativeSrc": "5014:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5014:71:6"
															},
															"nativeSrc": "5014:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5014:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4870:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4940:9:6",
														"nodeType": "YulTypedName",
														"src": "4940:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4952:6:6",
														"nodeType": "YulTypedName",
														"src": "4952:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4963:4:6",
														"nodeType": "YulTypedName",
														"src": "4963:4:6",
														"type": ""
													}
												],
												"src": "4870:222:6"
											},
											{
												"body": {
													"nativeSrc": "5164:263:6",
													"nodeType": "YulBlock",
													"src": "5164:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5210:83:6",
																"nodeType": "YulBlock",
																"src": "5210:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5212:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5212:77:6"
																			},
																			"nativeSrc": "5212:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5212:79:6"
																		},
																		"nativeSrc": "5212:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5212:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5185:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5185:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5194:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5194:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5181:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:6"
																		},
																		"nativeSrc": "5181:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5181:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5177:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:6"
																},
																"nativeSrc": "5177:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5177:32:6"
															},
															"nativeSrc": "5174:119:6",
															"nodeType": "YulIf",
															"src": "5174:119:6"
														},
														{
															"nativeSrc": "5303:117:6",
															"nodeType": "YulBlock",
															"src": "5303:117:6",
															"statements": [
																{
																	"nativeSrc": "5318:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5318:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5332:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5322:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5322:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5347:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5347:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5382:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5382:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5393:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5393:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5378:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:6"
																				},
																				"nativeSrc": "5378:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5378:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5402:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5402:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5357:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5357:20:6"
																		},
																		"nativeSrc": "5357:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5347:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5347:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5098:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5134:9:6",
														"nodeType": "YulTypedName",
														"src": "5134:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5145:7:6",
														"nodeType": "YulTypedName",
														"src": "5145:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5157:6:6",
														"nodeType": "YulTypedName",
														"src": "5157:6:6",
														"type": ""
													}
												],
												"src": "5098:329:6"
											},
											{
												"body": {
													"nativeSrc": "5499:263:6",
													"nodeType": "YulBlock",
													"src": "5499:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5545:83:6",
																"nodeType": "YulBlock",
																"src": "5545:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5547:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5547:77:6"
																			},
																			"nativeSrc": "5547:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5547:79:6"
																		},
																		"nativeSrc": "5547:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5547:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5529:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5516:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:6"
																		},
																		"nativeSrc": "5516:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5512:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:6"
																},
																"nativeSrc": "5512:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5512:32:6"
															},
															"nativeSrc": "5509:119:6",
															"nodeType": "YulIf",
															"src": "5509:119:6"
														},
														{
															"nativeSrc": "5638:117:6",
															"nodeType": "YulBlock",
															"src": "5638:117:6",
															"statements": [
																{
																	"nativeSrc": "5653:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5653:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5667:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5657:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5657:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5682:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5682:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5717:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5717:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5728:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5728:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5713:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5713:3:6"
																				},
																				"nativeSrc": "5713:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5713:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5737:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5737:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5692:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5692:20:6"
																		},
																		"nativeSrc": "5692:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5682:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5682:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5433:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5469:9:6",
														"nodeType": "YulTypedName",
														"src": "5469:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5480:7:6",
														"nodeType": "YulTypedName",
														"src": "5480:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5492:6:6",
														"nodeType": "YulTypedName",
														"src": "5492:6:6",
														"type": ""
													}
												],
												"src": "5433:329:6"
											},
											{
												"body": {
													"nativeSrc": "5851:391:6",
													"nodeType": "YulBlock",
													"src": "5851:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:6",
																"nodeType": "YulBlock",
																"src": "5897:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:6"
																			},
																			"nativeSrc": "5899:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:6"
																		},
																		"nativeSrc": "5899:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:6"
																		},
																		"nativeSrc": "5868:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:6"
																},
																"nativeSrc": "5864:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:6"
															},
															"nativeSrc": "5861:119:6",
															"nodeType": "YulIf",
															"src": "5861:119:6"
														},
														{
															"nativeSrc": "5990:117:6",
															"nodeType": "YulBlock",
															"src": "5990:117:6",
															"statements": [
																{
																	"nativeSrc": "6005:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:6"
																				},
																				"nativeSrc": "6065:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:6"
																		},
																		"nativeSrc": "6044:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:6",
															"nodeType": "YulBlock",
															"src": "6117:118:6",
															"statements": [
																{
																	"nativeSrc": "6132:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:6"
																				},
																				"nativeSrc": "6193:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:6"
																		},
																		"nativeSrc": "6172:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:6",
														"nodeType": "YulTypedName",
														"src": "5813:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:6",
														"nodeType": "YulTypedName",
														"src": "5824:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:6",
														"nodeType": "YulTypedName",
														"src": "5836:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:6",
														"nodeType": "YulTypedName",
														"src": "5844:6:6",
														"type": ""
													}
												],
												"src": "5768:474:6"
											},
											{
												"body": {
													"nativeSrc": "6276:152:6",
													"nodeType": "YulBlock",
													"src": "6276:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:6"
																},
																"nativeSrc": "6286:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:6"
															},
															"nativeSrc": "6286:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:6"
																},
																"nativeSrc": "6383:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:6"
															},
															"nativeSrc": "6383:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:6"
																},
																"nativeSrc": "6407:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:6"
															},
															"nativeSrc": "6407:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:6"
											},
											{
												"body": {
													"nativeSrc": "6485:269:6",
													"nodeType": "YulBlock",
													"src": "6485:269:6",
													"statements": [
														{
															"nativeSrc": "6495:22:6",
															"nodeType": "YulAssignment",
															"src": "6495:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:6"
																},
																"nativeSrc": "6505:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:6"
																}
															]
														},
														{
															"nativeSrc": "6526:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:6"
																},
																"nativeSrc": "6552:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:6",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:6",
																"nodeType": "YulBlock",
																"src": "6603:51:6",
																"statements": [
																	{
																		"nativeSrc": "6617:27:6",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:6"
																			},
																			"nativeSrc": "6627:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:6"
																},
																"nativeSrc": "6576:26:6",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:6"
															},
															"nativeSrc": "6573:81:6",
															"nodeType": "YulIf",
															"src": "6573:81:6"
														},
														{
															"body": {
																"nativeSrc": "6706:42:6",
																"nodeType": "YulBlock",
																"src": "6706:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:6"
																			},
																			"nativeSrc": "6720:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:6"
																		},
																		"nativeSrc": "6720:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:6"
																		},
																		"nativeSrc": "6690:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:6"
																},
																"nativeSrc": "6667:38:6",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:6"
															},
															"nativeSrc": "6664:84:6",
															"nodeType": "YulIf",
															"src": "6664:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:6",
														"nodeType": "YulTypedName",
														"src": "6469:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:6",
														"nodeType": "YulTypedName",
														"src": "6478:6:6",
														"type": ""
													}
												],
												"src": "6434:320:6"
											},
											{
												"body": {
													"nativeSrc": "6866:129:6",
													"nodeType": "YulBlock",
													"src": "6866:129:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6888:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6896:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6896:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6884:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:6"
																		},
																		"nativeSrc": "6884:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6884:14:6"
																	},
																	{
																		"hexValue": "536f6c6f20756e206f7267616e697a7a61746f72652070756f20657365677569",
																		"kind": "string",
																		"nativeSrc": "6900:34:6",
																		"nodeType": "YulLiteral",
																		"src": "6900:34:6",
																		"type": "",
																		"value": "Solo un organizzatore puo esegui"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:6"
																},
																"nativeSrc": "6877:58:6",
																"nodeType": "YulFunctionCall",
																"src": "6877:58:6"
															},
															"nativeSrc": "6877:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "6877:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6956:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6956:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6964:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6964:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6952:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6952:3:6"
																		},
																		"nativeSrc": "6952:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6952:15:6"
																	},
																	{
																		"hexValue": "72652071756573746120617a696f6e65",
																		"kind": "string",
																		"nativeSrc": "6969:18:6",
																		"nodeType": "YulLiteral",
																		"src": "6969:18:6",
																		"type": "",
																		"value": "re questa azione"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6945:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6945:6:6"
																},
																"nativeSrc": "6945:43:6",
																"nodeType": "YulFunctionCall",
																"src": "6945:43:6"
															},
															"nativeSrc": "6945:43:6",
															"nodeType": "YulExpressionStatement",
															"src": "6945:43:6"
														}
													]
												},
												"name": "store_literal_in_memory_27c49403adc40fe0f856a373524ee3f36e7d19d61bc3f92604bc3fdbbb48c4f5",
												"nativeSrc": "6760:235:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6858:6:6",
														"nodeType": "YulTypedName",
														"src": "6858:6:6",
														"type": ""
													}
												],
												"src": "6760:235:6"
											},
											{
												"body": {
													"nativeSrc": "7147:220:6",
													"nodeType": "YulBlock",
													"src": "7147:220:6",
													"statements": [
														{
															"nativeSrc": "7157:74:6",
															"nodeType": "YulAssignment",
															"src": "7157:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7223:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7223:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7228:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7228:2:6",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7164:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7164:58:6"
																},
																"nativeSrc": "7164:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7164:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7157:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7157:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7329:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7329:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_27c49403adc40fe0f856a373524ee3f36e7d19d61bc3f92604bc3fdbbb48c4f5",
																	"nativeSrc": "7240:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "7240:88:6"
																},
																"nativeSrc": "7240:93:6",
																"nodeType": "YulFunctionCall",
																"src": "7240:93:6"
															},
															"nativeSrc": "7240:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "7240:93:6"
														},
														{
															"nativeSrc": "7342:19:6",
															"nodeType": "YulAssignment",
															"src": "7342:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7353:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7353:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7358:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7358:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7349:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7349:3:6"
																},
																"nativeSrc": "7349:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7349:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7342:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7342:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_27c49403adc40fe0f856a373524ee3f36e7d19d61bc3f92604bc3fdbbb48c4f5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7001:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7135:3:6",
														"nodeType": "YulTypedName",
														"src": "7135:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7143:3:6",
														"nodeType": "YulTypedName",
														"src": "7143:3:6",
														"type": ""
													}
												],
												"src": "7001:366:6"
											},
											{
												"body": {
													"nativeSrc": "7544:248:6",
													"nodeType": "YulBlock",
													"src": "7544:248:6",
													"statements": [
														{
															"nativeSrc": "7554:26:6",
															"nodeType": "YulAssignment",
															"src": "7554:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7566:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7566:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7577:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7577:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7562:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7562:3:6"
																},
																"nativeSrc": "7562:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7562:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7554:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7554:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7601:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7601:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7612:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7612:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7597:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7597:3:6"
																		},
																		"nativeSrc": "7597:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7597:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7620:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7620:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7626:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7626:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7616:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7616:3:6"
																		},
																		"nativeSrc": "7616:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7616:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7590:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7590:6:6"
																},
																"nativeSrc": "7590:47:6",
																"nodeType": "YulFunctionCall",
																"src": "7590:47:6"
															},
															"nativeSrc": "7590:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "7590:47:6"
														},
														{
															"nativeSrc": "7646:139:6",
															"nodeType": "YulAssignment",
															"src": "7646:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7780:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7780:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_27c49403adc40fe0f856a373524ee3f36e7d19d61bc3f92604bc3fdbbb48c4f5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7654:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "7654:124:6"
																},
																"nativeSrc": "7654:131:6",
																"nodeType": "YulFunctionCall",
																"src": "7654:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7646:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7646:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_27c49403adc40fe0f856a373524ee3f36e7d19d61bc3f92604bc3fdbbb48c4f5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7373:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7524:9:6",
														"nodeType": "YulTypedName",
														"src": "7524:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7539:4:6",
														"nodeType": "YulTypedName",
														"src": "7539:4:6",
														"type": ""
													}
												],
												"src": "7373:419:6"
											},
											{
												"body": {
													"nativeSrc": "7826:152:6",
													"nodeType": "YulBlock",
													"src": "7826:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7843:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7843:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7846:77:6",
																		"nodeType": "YulLiteral",
																		"src": "7846:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7836:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7836:6:6"
																},
																"nativeSrc": "7836:88:6",
																"nodeType": "YulFunctionCall",
																"src": "7836:88:6"
															},
															"nativeSrc": "7836:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "7836:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7940:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7940:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7943:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7943:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7933:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7933:6:6"
																},
																"nativeSrc": "7933:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7933:15:6"
															},
															"nativeSrc": "7933:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7933:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7964:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7964:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7967:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7967:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7957:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7957:6:6"
																},
																"nativeSrc": "7957:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7957:15:6"
															},
															"nativeSrc": "7957:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7957:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7798:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "7798:180:6"
											},
											{
												"body": {
													"nativeSrc": "8032:362:6",
													"nodeType": "YulBlock",
													"src": "8032:362:6",
													"statements": [
														{
															"nativeSrc": "8042:25:6",
															"nodeType": "YulAssignment",
															"src": "8042:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8065:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8065:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8047:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8047:17:6"
																},
																"nativeSrc": "8047:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8047:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8042:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8042:1:6"
																}
															]
														},
														{
															"nativeSrc": "8076:25:6",
															"nodeType": "YulAssignment",
															"src": "8076:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8099:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8099:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8081:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8081:17:6"
																},
																"nativeSrc": "8081:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8081:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8076:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8076:1:6"
																}
															]
														},
														{
															"nativeSrc": "8110:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8110:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8133:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8133:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8136:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8136:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8129:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8129:3:6"
																},
																"nativeSrc": "8129:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8129:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8114:11:6",
																	"nodeType": "YulTypedName",
																	"src": "8114:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8147:41:6",
															"nodeType": "YulAssignment",
															"src": "8147:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8176:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "8176:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8158:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8158:17:6"
																},
																"nativeSrc": "8158:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8158:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8147:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "8147:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8365:22:6",
																"nodeType": "YulBlock",
																"src": "8365:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8367:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8367:16:6"
																			},
																			"nativeSrc": "8367:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8367:18:6"
																		},
																		"nativeSrc": "8367:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8367:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8298:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8298:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8291:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "8291:6:6"
																				},
																				"nativeSrc": "8291:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8291:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8321:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8321:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8328:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "8328:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8337:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "8337:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8324:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "8324:3:6"
																						},
																						"nativeSrc": "8324:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "8324:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8318:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "8318:2:6"
																				},
																				"nativeSrc": "8318:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8318:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8271:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "8271:2:6"
																		},
																		"nativeSrc": "8271:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8271:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8251:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8251:6:6"
																},
																"nativeSrc": "8251:113:6",
																"nodeType": "YulFunctionCall",
																"src": "8251:113:6"
															},
															"nativeSrc": "8248:139:6",
															"nodeType": "YulIf",
															"src": "8248:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7984:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8015:1:6",
														"nodeType": "YulTypedName",
														"src": "8015:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8018:1:6",
														"nodeType": "YulTypedName",
														"src": "8018:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8024:7:6",
														"nodeType": "YulTypedName",
														"src": "8024:7:6",
														"type": ""
													}
												],
												"src": "7984:410:6"
											},
											{
												"body": {
													"nativeSrc": "8444:147:6",
													"nodeType": "YulBlock",
													"src": "8444:147:6",
													"statements": [
														{
															"nativeSrc": "8454:25:6",
															"nodeType": "YulAssignment",
															"src": "8454:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8477:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8477:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8459:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8459:17:6"
																},
																"nativeSrc": "8459:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8459:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8454:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8454:1:6"
																}
															]
														},
														{
															"nativeSrc": "8488:25:6",
															"nodeType": "YulAssignment",
															"src": "8488:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8511:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8511:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8493:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8493:17:6"
																},
																"nativeSrc": "8493:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8493:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8488:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8488:1:6"
																}
															]
														},
														{
															"nativeSrc": "8522:16:6",
															"nodeType": "YulAssignment",
															"src": "8522:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8533:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8533:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8536:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8536:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8529:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8529:3:6"
																},
																"nativeSrc": "8529:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8529:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8522:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8522:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8562:22:6",
																"nodeType": "YulBlock",
																"src": "8562:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8564:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8564:16:6"
																			},
																			"nativeSrc": "8564:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8564:18:6"
																		},
																		"nativeSrc": "8564:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8564:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8554:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8554:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8557:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8557:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8551:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8551:2:6"
																},
																"nativeSrc": "8551:10:6",
																"nodeType": "YulFunctionCall",
																"src": "8551:10:6"
															},
															"nativeSrc": "8548:36:6",
															"nodeType": "YulIf",
															"src": "8548:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8400:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8431:1:6",
														"nodeType": "YulTypedName",
														"src": "8431:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8434:1:6",
														"nodeType": "YulTypedName",
														"src": "8434:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8440:3:6",
														"nodeType": "YulTypedName",
														"src": "8440:3:6",
														"type": ""
													}
												],
												"src": "8400:191:6"
											},
											{
												"body": {
													"nativeSrc": "8703:123:6",
													"nodeType": "YulBlock",
													"src": "8703:123:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8725:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8725:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8733:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8733:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8721:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8721:3:6"
																		},
																		"nativeSrc": "8721:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8721:14:6"
																	},
																	{
																		"hexValue": "537570657261746f20696c206e756d65726f206d617373696d6f206469207061",
																		"kind": "string",
																		"nativeSrc": "8737:34:6",
																		"nodeType": "YulLiteral",
																		"src": "8737:34:6",
																		"type": "",
																		"value": "Superato il numero massimo di pa"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8714:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8714:6:6"
																},
																"nativeSrc": "8714:58:6",
																"nodeType": "YulFunctionCall",
																"src": "8714:58:6"
															},
															"nativeSrc": "8714:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "8714:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8793:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8793:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8801:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8801:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8789:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8789:3:6"
																		},
																		"nativeSrc": "8789:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8789:15:6"
																	},
																	{
																		"hexValue": "727465636970616e7469",
																		"kind": "string",
																		"nativeSrc": "8806:12:6",
																		"nodeType": "YulLiteral",
																		"src": "8806:12:6",
																		"type": "",
																		"value": "rtecipanti"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8782:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8782:6:6"
																},
																"nativeSrc": "8782:37:6",
																"nodeType": "YulFunctionCall",
																"src": "8782:37:6"
															},
															"nativeSrc": "8782:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "8782:37:6"
														}
													]
												},
												"name": "store_literal_in_memory_927e9bae9db212268b760267d73ae19086f86260fc0b99fc43ef3200201f00fd",
												"nativeSrc": "8597:229:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8695:6:6",
														"nodeType": "YulTypedName",
														"src": "8695:6:6",
														"type": ""
													}
												],
												"src": "8597:229:6"
											},
											{
												"body": {
													"nativeSrc": "8978:220:6",
													"nodeType": "YulBlock",
													"src": "8978:220:6",
													"statements": [
														{
															"nativeSrc": "8988:74:6",
															"nodeType": "YulAssignment",
															"src": "8988:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9054:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9054:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9059:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9059:2:6",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8995:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8995:58:6"
																},
																"nativeSrc": "8995:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8995:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8988:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8988:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9160:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9160:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_927e9bae9db212268b760267d73ae19086f86260fc0b99fc43ef3200201f00fd",
																	"nativeSrc": "9071:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9071:88:6"
																},
																"nativeSrc": "9071:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9071:93:6"
															},
															"nativeSrc": "9071:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9071:93:6"
														},
														{
															"nativeSrc": "9173:19:6",
															"nodeType": "YulAssignment",
															"src": "9173:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9184:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9184:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9189:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9189:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9180:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9180:3:6"
																},
																"nativeSrc": "9180:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9180:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9173:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9173:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_927e9bae9db212268b760267d73ae19086f86260fc0b99fc43ef3200201f00fd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8832:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8966:3:6",
														"nodeType": "YulTypedName",
														"src": "8966:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8974:3:6",
														"nodeType": "YulTypedName",
														"src": "8974:3:6",
														"type": ""
													}
												],
												"src": "8832:366:6"
											},
											{
												"body": {
													"nativeSrc": "9375:248:6",
													"nodeType": "YulBlock",
													"src": "9375:248:6",
													"statements": [
														{
															"nativeSrc": "9385:26:6",
															"nodeType": "YulAssignment",
															"src": "9385:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9397:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9397:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9408:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9408:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9393:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9393:3:6"
																},
																"nativeSrc": "9393:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9393:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9385:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9385:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9432:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9432:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9443:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9443:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9428:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9428:3:6"
																		},
																		"nativeSrc": "9428:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9428:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9451:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9451:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9457:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9457:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9447:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9447:3:6"
																		},
																		"nativeSrc": "9447:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9447:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9421:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9421:6:6"
																},
																"nativeSrc": "9421:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9421:47:6"
															},
															"nativeSrc": "9421:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9421:47:6"
														},
														{
															"nativeSrc": "9477:139:6",
															"nodeType": "YulAssignment",
															"src": "9477:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9611:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9611:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_927e9bae9db212268b760267d73ae19086f86260fc0b99fc43ef3200201f00fd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9485:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9485:124:6"
																},
																"nativeSrc": "9485:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9485:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9477:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9477:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_927e9bae9db212268b760267d73ae19086f86260fc0b99fc43ef3200201f00fd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9204:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9355:9:6",
														"nodeType": "YulTypedName",
														"src": "9355:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9370:4:6",
														"nodeType": "YulTypedName",
														"src": "9370:4:6",
														"type": ""
													}
												],
												"src": "9204:419:6"
											},
											{
												"body": {
													"nativeSrc": "9735:72:6",
													"nodeType": "YulBlock",
													"src": "9735:72:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9757:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9757:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9765:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9765:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9753:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9753:3:6"
																		},
																		"nativeSrc": "9753:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9753:14:6"
																	},
																	{
																		"hexValue": "496d706f72746f20696e766961746f206e6f6e20636f72726574746f",
																		"kind": "string",
																		"nativeSrc": "9769:30:6",
																		"nodeType": "YulLiteral",
																		"src": "9769:30:6",
																		"type": "",
																		"value": "Importo inviato non corretto"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9746:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9746:6:6"
																},
																"nativeSrc": "9746:54:6",
																"nodeType": "YulFunctionCall",
																"src": "9746:54:6"
															},
															"nativeSrc": "9746:54:6",
															"nodeType": "YulExpressionStatement",
															"src": "9746:54:6"
														}
													]
												},
												"name": "store_literal_in_memory_784abb4172389cad1df52f00030b4dad397b2e4d004fc59fa41f872190258fa4",
												"nativeSrc": "9629:178:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9727:6:6",
														"nodeType": "YulTypedName",
														"src": "9727:6:6",
														"type": ""
													}
												],
												"src": "9629:178:6"
											},
											{
												"body": {
													"nativeSrc": "9959:220:6",
													"nodeType": "YulBlock",
													"src": "9959:220:6",
													"statements": [
														{
															"nativeSrc": "9969:74:6",
															"nodeType": "YulAssignment",
															"src": "9969:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10035:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10035:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10040:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10040:2:6",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9976:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9976:58:6"
																},
																"nativeSrc": "9976:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9976:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9969:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9969:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10141:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10141:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_784abb4172389cad1df52f00030b4dad397b2e4d004fc59fa41f872190258fa4",
																	"nativeSrc": "10052:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10052:88:6"
																},
																"nativeSrc": "10052:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10052:93:6"
															},
															"nativeSrc": "10052:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10052:93:6"
														},
														{
															"nativeSrc": "10154:19:6",
															"nodeType": "YulAssignment",
															"src": "10154:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10165:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10165:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10170:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10170:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10161:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10161:3:6"
																},
																"nativeSrc": "10161:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10161:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10154:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10154:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_784abb4172389cad1df52f00030b4dad397b2e4d004fc59fa41f872190258fa4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9813:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9947:3:6",
														"nodeType": "YulTypedName",
														"src": "9947:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9955:3:6",
														"nodeType": "YulTypedName",
														"src": "9955:3:6",
														"type": ""
													}
												],
												"src": "9813:366:6"
											},
											{
												"body": {
													"nativeSrc": "10356:248:6",
													"nodeType": "YulBlock",
													"src": "10356:248:6",
													"statements": [
														{
															"nativeSrc": "10366:26:6",
															"nodeType": "YulAssignment",
															"src": "10366:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10378:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10378:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10389:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10389:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10374:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10374:3:6"
																},
																"nativeSrc": "10374:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10374:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10366:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10366:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10413:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10413:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10424:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10424:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10409:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10409:3:6"
																		},
																		"nativeSrc": "10409:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10409:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10432:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10432:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10438:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10438:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10428:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10428:3:6"
																		},
																		"nativeSrc": "10428:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10428:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10402:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10402:6:6"
																},
																"nativeSrc": "10402:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10402:47:6"
															},
															"nativeSrc": "10402:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10402:47:6"
														},
														{
															"nativeSrc": "10458:139:6",
															"nodeType": "YulAssignment",
															"src": "10458:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10592:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10592:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_784abb4172389cad1df52f00030b4dad397b2e4d004fc59fa41f872190258fa4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10466:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10466:124:6"
																},
																"nativeSrc": "10466:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10466:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10458:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10458:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_784abb4172389cad1df52f00030b4dad397b2e4d004fc59fa41f872190258fa4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10185:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10336:9:6",
														"nodeType": "YulTypedName",
														"src": "10336:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10351:4:6",
														"nodeType": "YulTypedName",
														"src": "10351:4:6",
														"type": ""
													}
												],
												"src": "10185:419:6"
											},
											{
												"body": {
													"nativeSrc": "10736:206:6",
													"nodeType": "YulBlock",
													"src": "10736:206:6",
													"statements": [
														{
															"nativeSrc": "10746:26:6",
															"nodeType": "YulAssignment",
															"src": "10746:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10758:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10758:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10769:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10769:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10754:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10754:3:6"
																},
																"nativeSrc": "10754:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10754:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10746:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10746:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10826:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10826:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10839:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10839:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10850:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10850:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10835:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10835:3:6"
																		},
																		"nativeSrc": "10835:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10835:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10782:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10782:43:6"
																},
																"nativeSrc": "10782:71:6",
																"nodeType": "YulFunctionCall",
																"src": "10782:71:6"
															},
															"nativeSrc": "10782:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "10782:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10907:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10907:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10920:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10920:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10931:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10931:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10916:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10916:3:6"
																		},
																		"nativeSrc": "10916:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10916:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10863:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10863:43:6"
																},
																"nativeSrc": "10863:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10863:72:6"
															},
															"nativeSrc": "10863:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10863:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10610:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10700:9:6",
														"nodeType": "YulTypedName",
														"src": "10700:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10712:6:6",
														"nodeType": "YulTypedName",
														"src": "10712:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10720:6:6",
														"nodeType": "YulTypedName",
														"src": "10720:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10731:4:6",
														"nodeType": "YulTypedName",
														"src": "10731:4:6",
														"type": ""
													}
												],
												"src": "10610:332:6"
											},
											{
												"body": {
													"nativeSrc": "10993:149:6",
													"nodeType": "YulBlock",
													"src": "10993:149:6",
													"statements": [
														{
															"nativeSrc": "11003:25:6",
															"nodeType": "YulAssignment",
															"src": "11003:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11026:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11026:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11008:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11008:17:6"
																},
																"nativeSrc": "11008:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11008:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11003:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11003:1:6"
																}
															]
														},
														{
															"nativeSrc": "11037:25:6",
															"nodeType": "YulAssignment",
															"src": "11037:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11060:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11060:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11042:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11042:17:6"
																},
																"nativeSrc": "11042:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11042:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11037:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11037:1:6"
																}
															]
														},
														{
															"nativeSrc": "11071:17:6",
															"nodeType": "YulAssignment",
															"src": "11071:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11083:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11083:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11086:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11086:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11079:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11079:3:6"
																},
																"nativeSrc": "11079:9:6",
																"nodeType": "YulFunctionCall",
																"src": "11079:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11071:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11071:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11113:22:6",
																"nodeType": "YulBlock",
																"src": "11113:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11115:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "11115:16:6"
																			},
																			"nativeSrc": "11115:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11115:18:6"
																		},
																		"nativeSrc": "11115:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11115:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11104:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11104:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11110:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11110:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11101:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "11101:2:6"
																},
																"nativeSrc": "11101:11:6",
																"nodeType": "YulFunctionCall",
																"src": "11101:11:6"
															},
															"nativeSrc": "11098:37:6",
															"nodeType": "YulIf",
															"src": "11098:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10948:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10979:1:6",
														"nodeType": "YulTypedName",
														"src": "10979:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10982:1:6",
														"nodeType": "YulTypedName",
														"src": "10982:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10988:4:6",
														"nodeType": "YulTypedName",
														"src": "10988:4:6",
														"type": ""
													}
												],
												"src": "10948:194:6"
											},
											{
												"body": {
													"nativeSrc": "11254:66:6",
													"nodeType": "YulBlock",
													"src": "11254:66:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11276:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11276:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11284:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11284:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11272:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11272:3:6"
																		},
																		"nativeSrc": "11272:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11272:14:6"
																	},
																	{
																		"hexValue": "4e657373756e20746f6b656e20706f7373656475746f",
																		"kind": "string",
																		"nativeSrc": "11288:24:6",
																		"nodeType": "YulLiteral",
																		"src": "11288:24:6",
																		"type": "",
																		"value": "Nessun token posseduto"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11265:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11265:6:6"
																},
																"nativeSrc": "11265:48:6",
																"nodeType": "YulFunctionCall",
																"src": "11265:48:6"
															},
															"nativeSrc": "11265:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "11265:48:6"
														}
													]
												},
												"name": "store_literal_in_memory_50a758898a4b38e6b10f630a2548014d4902e892601e32f381a8c9cbb33c80a5",
												"nativeSrc": "11148:172:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11246:6:6",
														"nodeType": "YulTypedName",
														"src": "11246:6:6",
														"type": ""
													}
												],
												"src": "11148:172:6"
											},
											{
												"body": {
													"nativeSrc": "11472:220:6",
													"nodeType": "YulBlock",
													"src": "11472:220:6",
													"statements": [
														{
															"nativeSrc": "11482:74:6",
															"nodeType": "YulAssignment",
															"src": "11482:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11548:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11548:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11553:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11553:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11489:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "11489:58:6"
																},
																"nativeSrc": "11489:67:6",
																"nodeType": "YulFunctionCall",
																"src": "11489:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11482:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11482:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11654:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11654:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_50a758898a4b38e6b10f630a2548014d4902e892601e32f381a8c9cbb33c80a5",
																	"nativeSrc": "11565:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "11565:88:6"
																},
																"nativeSrc": "11565:93:6",
																"nodeType": "YulFunctionCall",
																"src": "11565:93:6"
															},
															"nativeSrc": "11565:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "11565:93:6"
														},
														{
															"nativeSrc": "11667:19:6",
															"nodeType": "YulAssignment",
															"src": "11667:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11678:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11678:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11683:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11683:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11674:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11674:3:6"
																},
																"nativeSrc": "11674:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11674:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11667:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11667:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_50a758898a4b38e6b10f630a2548014d4902e892601e32f381a8c9cbb33c80a5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11326:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11460:3:6",
														"nodeType": "YulTypedName",
														"src": "11460:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11468:3:6",
														"nodeType": "YulTypedName",
														"src": "11468:3:6",
														"type": ""
													}
												],
												"src": "11326:366:6"
											},
											{
												"body": {
													"nativeSrc": "11869:248:6",
													"nodeType": "YulBlock",
													"src": "11869:248:6",
													"statements": [
														{
															"nativeSrc": "11879:26:6",
															"nodeType": "YulAssignment",
															"src": "11879:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11891:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11891:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11902:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11902:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11887:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11887:3:6"
																},
																"nativeSrc": "11887:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11887:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11879:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11879:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11926:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11926:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11937:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11937:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11922:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11922:3:6"
																		},
																		"nativeSrc": "11922:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11922:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11945:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11945:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11951:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11951:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11941:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11941:3:6"
																		},
																		"nativeSrc": "11941:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11941:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11915:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11915:6:6"
																},
																"nativeSrc": "11915:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11915:47:6"
															},
															"nativeSrc": "11915:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11915:47:6"
														},
														{
															"nativeSrc": "11971:139:6",
															"nodeType": "YulAssignment",
															"src": "11971:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12105:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12105:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_50a758898a4b38e6b10f630a2548014d4902e892601e32f381a8c9cbb33c80a5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11979:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11979:124:6"
																},
																"nativeSrc": "11979:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11979:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11971:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11971:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_50a758898a4b38e6b10f630a2548014d4902e892601e32f381a8c9cbb33c80a5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11698:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11849:9:6",
														"nodeType": "YulTypedName",
														"src": "11849:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11864:4:6",
														"nodeType": "YulTypedName",
														"src": "11864:4:6",
														"type": ""
													}
												],
												"src": "11698:419:6"
											},
											{
												"body": {
													"nativeSrc": "12229:60:6",
													"nodeType": "YulBlock",
													"src": "12229:60:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12251:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12251:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12259:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12259:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12247:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12247:3:6"
																		},
																		"nativeSrc": "12247:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12247:14:6"
																	},
																	{
																		"hexValue": "546f6b656e207574696c697a7a61746f",
																		"kind": "string",
																		"nativeSrc": "12263:18:6",
																		"nodeType": "YulLiteral",
																		"src": "12263:18:6",
																		"type": "",
																		"value": "Token utilizzato"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12240:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12240:6:6"
																},
																"nativeSrc": "12240:42:6",
																"nodeType": "YulFunctionCall",
																"src": "12240:42:6"
															},
															"nativeSrc": "12240:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "12240:42:6"
														}
													]
												},
												"name": "store_literal_in_memory_5999effb3dc573f58face8177a8dfbe7b2b4e361623f526c53749ef21323fef1",
												"nativeSrc": "12123:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12221:6:6",
														"nodeType": "YulTypedName",
														"src": "12221:6:6",
														"type": ""
													}
												],
												"src": "12123:166:6"
											},
											{
												"body": {
													"nativeSrc": "12441:220:6",
													"nodeType": "YulBlock",
													"src": "12441:220:6",
													"statements": [
														{
															"nativeSrc": "12451:74:6",
															"nodeType": "YulAssignment",
															"src": "12451:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12517:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12517:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12522:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12522:2:6",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12458:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "12458:58:6"
																},
																"nativeSrc": "12458:67:6",
																"nodeType": "YulFunctionCall",
																"src": "12458:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12451:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12451:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12623:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12623:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5999effb3dc573f58face8177a8dfbe7b2b4e361623f526c53749ef21323fef1",
																	"nativeSrc": "12534:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "12534:88:6"
																},
																"nativeSrc": "12534:93:6",
																"nodeType": "YulFunctionCall",
																"src": "12534:93:6"
															},
															"nativeSrc": "12534:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "12534:93:6"
														},
														{
															"nativeSrc": "12636:19:6",
															"nodeType": "YulAssignment",
															"src": "12636:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12647:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12647:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12652:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12652:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12643:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12643:3:6"
																},
																"nativeSrc": "12643:12:6",
																"nodeType": "YulFunctionCall",
																"src": "12643:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12636:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12636:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5999effb3dc573f58face8177a8dfbe7b2b4e361623f526c53749ef21323fef1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12295:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12429:3:6",
														"nodeType": "YulTypedName",
														"src": "12429:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12437:3:6",
														"nodeType": "YulTypedName",
														"src": "12437:3:6",
														"type": ""
													}
												],
												"src": "12295:366:6"
											},
											{
												"body": {
													"nativeSrc": "12838:248:6",
													"nodeType": "YulBlock",
													"src": "12838:248:6",
													"statements": [
														{
															"nativeSrc": "12848:26:6",
															"nodeType": "YulAssignment",
															"src": "12848:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12860:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12860:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12871:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12871:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12856:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12856:3:6"
																},
																"nativeSrc": "12856:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12856:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12848:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12848:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12895:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12895:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12906:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12906:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12891:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12891:3:6"
																		},
																		"nativeSrc": "12891:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12891:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12914:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "12914:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12920:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12920:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12910:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12910:3:6"
																		},
																		"nativeSrc": "12910:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12910:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12884:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12884:6:6"
																},
																"nativeSrc": "12884:47:6",
																"nodeType": "YulFunctionCall",
																"src": "12884:47:6"
															},
															"nativeSrc": "12884:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "12884:47:6"
														},
														{
															"nativeSrc": "12940:139:6",
															"nodeType": "YulAssignment",
															"src": "12940:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13074:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "13074:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5999effb3dc573f58face8177a8dfbe7b2b4e361623f526c53749ef21323fef1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12948:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "12948:124:6"
																},
																"nativeSrc": "12948:131:6",
																"nodeType": "YulFunctionCall",
																"src": "12948:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12940:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12940:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5999effb3dc573f58face8177a8dfbe7b2b4e361623f526c53749ef21323fef1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12667:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12818:9:6",
														"nodeType": "YulTypedName",
														"src": "12818:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12833:4:6",
														"nodeType": "YulTypedName",
														"src": "12833:4:6",
														"type": ""
													}
												],
												"src": "12667:419:6"
											},
											{
												"body": {
													"nativeSrc": "13135:128:6",
													"nodeType": "YulBlock",
													"src": "13135:128:6",
													"statements": [
														{
															"nativeSrc": "13145:33:6",
															"nodeType": "YulAssignment",
															"src": "13145:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13172:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "13172:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13154:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13154:17:6"
																},
																"nativeSrc": "13154:24:6",
																"nodeType": "YulFunctionCall",
																"src": "13154:24:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13145:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "13145:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13206:22:6",
																"nodeType": "YulBlock",
																"src": "13206:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13208:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "13208:16:6"
																			},
																			"nativeSrc": "13208:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "13208:18:6"
																		},
																		"nativeSrc": "13208:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "13208:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13193:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "13193:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13200:4:6",
																		"nodeType": "YulLiteral",
																		"src": "13200:4:6",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13190:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "13190:2:6"
																},
																"nativeSrc": "13190:15:6",
																"nodeType": "YulFunctionCall",
																"src": "13190:15:6"
															},
															"nativeSrc": "13187:41:6",
															"nodeType": "YulIf",
															"src": "13187:41:6"
														},
														{
															"nativeSrc": "13237:20:6",
															"nodeType": "YulAssignment",
															"src": "13237:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13248:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "13248:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13255:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13255:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13244:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13244:3:6"
																},
																"nativeSrc": "13244:13:6",
																"nodeType": "YulFunctionCall",
																"src": "13244:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13237:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13237:3:6"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "13092:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13121:5:6",
														"nodeType": "YulTypedName",
														"src": "13121:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13131:3:6",
														"nodeType": "YulTypedName",
														"src": "13131:3:6",
														"type": ""
													}
												],
												"src": "13092:171:6"
											},
											{
												"body": {
													"nativeSrc": "13423:288:6",
													"nodeType": "YulBlock",
													"src": "13423:288:6",
													"statements": [
														{
															"nativeSrc": "13433:26:6",
															"nodeType": "YulAssignment",
															"src": "13433:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13445:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13445:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13456:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13456:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13441:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13441:3:6"
																},
																"nativeSrc": "13441:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13441:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13433:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13433:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13513:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13513:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13526:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13526:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13537:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13537:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13522:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13522:3:6"
																		},
																		"nativeSrc": "13522:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13522:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13469:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13469:43:6"
																},
																"nativeSrc": "13469:71:6",
																"nodeType": "YulFunctionCall",
																"src": "13469:71:6"
															},
															"nativeSrc": "13469:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "13469:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13594:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13594:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13607:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13607:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13618:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13618:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13603:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13603:3:6"
																		},
																		"nativeSrc": "13603:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13603:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13550:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13550:43:6"
																},
																"nativeSrc": "13550:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13550:72:6"
															},
															"nativeSrc": "13550:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13550:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13676:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13676:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13689:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13689:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13700:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13700:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13685:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13685:3:6"
																		},
																		"nativeSrc": "13685:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13685:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13632:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13632:43:6"
																},
																"nativeSrc": "13632:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13632:72:6"
															},
															"nativeSrc": "13632:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13632:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13269:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13379:9:6",
														"nodeType": "YulTypedName",
														"src": "13379:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13391:6:6",
														"nodeType": "YulTypedName",
														"src": "13391:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13399:6:6",
														"nodeType": "YulTypedName",
														"src": "13399:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13407:6:6",
														"nodeType": "YulTypedName",
														"src": "13407:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13418:4:6",
														"nodeType": "YulTypedName",
														"src": "13418:4:6",
														"type": ""
													}
												],
												"src": "13269:442:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_27c49403adc40fe0f856a373524ee3f36e7d19d61bc3f92604bc3fdbbb48c4f5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Solo un organizzatore puo esegui\")\n\n        mstore(add(memPtr, 32), \"re questa azione\")\n\n    }\n\n    function abi_encode_t_stringliteral_27c49403adc40fe0f856a373524ee3f36e7d19d61bc3f92604bc3fdbbb48c4f5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_27c49403adc40fe0f856a373524ee3f36e7d19d61bc3f92604bc3fdbbb48c4f5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_27c49403adc40fe0f856a373524ee3f36e7d19d61bc3f92604bc3fdbbb48c4f5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_27c49403adc40fe0f856a373524ee3f36e7d19d61bc3f92604bc3fdbbb48c4f5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_927e9bae9db212268b760267d73ae19086f86260fc0b99fc43ef3200201f00fd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Superato il numero massimo di pa\")\n\n        mstore(add(memPtr, 32), \"rtecipanti\")\n\n    }\n\n    function abi_encode_t_stringliteral_927e9bae9db212268b760267d73ae19086f86260fc0b99fc43ef3200201f00fd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_927e9bae9db212268b760267d73ae19086f86260fc0b99fc43ef3200201f00fd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_927e9bae9db212268b760267d73ae19086f86260fc0b99fc43ef3200201f00fd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_927e9bae9db212268b760267d73ae19086f86260fc0b99fc43ef3200201f00fd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_784abb4172389cad1df52f00030b4dad397b2e4d004fc59fa41f872190258fa4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Importo inviato non corretto\")\n\n    }\n\n    function abi_encode_t_stringliteral_784abb4172389cad1df52f00030b4dad397b2e4d004fc59fa41f872190258fa4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_784abb4172389cad1df52f00030b4dad397b2e4d004fc59fa41f872190258fa4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_784abb4172389cad1df52f00030b4dad397b2e4d004fc59fa41f872190258fa4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_784abb4172389cad1df52f00030b4dad397b2e4d004fc59fa41f872190258fa4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_50a758898a4b38e6b10f630a2548014d4902e892601e32f381a8c9cbb33c80a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nessun token posseduto\")\n\n    }\n\n    function abi_encode_t_stringliteral_50a758898a4b38e6b10f630a2548014d4902e892601e32f381a8c9cbb33c80a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_50a758898a4b38e6b10f630a2548014d4902e892601e32f381a8c9cbb33c80a5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_50a758898a4b38e6b10f630a2548014d4902e892601e32f381a8c9cbb33c80a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_50a758898a4b38e6b10f630a2548014d4902e892601e32f381a8c9cbb33c80a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5999effb3dc573f58face8177a8dfbe7b2b4e361623f526c53749ef21323fef1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token utilizzato\")\n\n    }\n\n    function abi_encode_t_stringliteral_5999effb3dc573f58face8177a8dfbe7b2b4e361623f526c53749ef21323fef1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_5999effb3dc573f58face8177a8dfbe7b2b4e361623f526c53749ef21323fef1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5999effb3dc573f58face8177a8dfbe7b2b4e361623f526c53749ef21323fef1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5999effb3dc573f58face8177a8dfbe7b2b4e361623f526c53749ef21323fef1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610129575f3560e01c806361203265116100aa578063906d895d1161006e578063906d895d146103b557806395d89b41146103df5780639b13b20e14610409578063a9059cbb1461041f578063d866b0b61461045b578063dd62ed3e1461049757610129565b806361203265146102e1578063676c0d771461030b57806370a08231146103335780637b97008d1461036f5780637ff9b5961461038b57610129565b806324600fc3116100f157806324600fc314610223578063313ce56714610239578063520198a8146102635780635a4dc09f1461028d5780635f3d7fa1146102b757610129565b806306fdde031461012d578063095ea7b3146101575780630a5d288c1461019357806318160ddd146101bd57806323b872dd146101e7575b5f80fd5b348015610138575f80fd5b506101416104d3565b60405161014e919061132d565b60405180910390f35b348015610162575f80fd5b5061017d600480360381019061017891906113de565b610563565b60405161018a9190611436565b60405180910390f35b34801561019e575f80fd5b506101a7610585565b6040516101b4919061145e565b60405180910390f35b3480156101c8575f80fd5b506101d161058b565b6040516101de919061145e565b60405180910390f35b3480156101f2575f80fd5b5061020d60048036038101906102089190611477565b610594565b60405161021a9190611436565b60405180910390f35b34801561022e575f80fd5b506102376105c2565b005b348015610244575f80fd5b5061024d6106b8565b60405161025a91906114e2565b60405180910390f35b34801561026e575f80fd5b506102776106c0565b604051610284919061145e565b60405180910390f35b348015610298575f80fd5b506102a16106c9565b6040516102ae919061145e565b60405180910390f35b3480156102c2575f80fd5b506102cb6106df565b6040516102d8919061145e565b60405180910390f35b3480156102ec575f80fd5b506102f56106e5565b604051610302919061150a565b60405180910390f35b348015610316575f80fd5b50610331600480360381019061032c9190611523565b61070a565b005b34801561033e575f80fd5b506103596004803603810190610354919061154e565b6107da565b604051610366919061145e565b60405180910390f35b61038960048036038101906103849190611523565b61081f565b005b348015610396575f80fd5b5061039f61093f565b6040516103ac919061145e565b60405180910390f35b3480156103c0575f80fd5b506103c9610945565b6040516103d6919061145e565b60405180910390f35b3480156103ea575f80fd5b506103f361095b565b604051610400919061132d565b60405180910390f35b348015610414575f80fd5b5061041d6109eb565b005b34801561042a575f80fd5b50610445600480360381019061044091906113de565b610b7b565b6040516104529190611436565b60405180910390f35b348015610466575f80fd5b50610481600480360381019061047c919061154e565b610b9d565b60405161048e9190611436565b60405180910390f35b3480156104a2575f80fd5b506104bd60048036038101906104b89190611579565b610bba565b6040516104ca919061145e565b60405180910390f35b6060600380546104e2906115e4565b80601f016020809104026020016040519081016040528092919081815260200182805461050e906115e4565b80156105595780601f1061053057610100808354040283529160200191610559565b820191905f5260205f20905b81548152906001019060200180831161053c57829003601f168201915b5050505050905090565b5f8061056d610c3c565b905061057a818585610c43565b600191505092915050565b60075481565b5f600254905090565b5f8061059e610c3c565b90506105ab858285610c55565b6105b6858585610ce7565b60019150509392505050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610651576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064890611684565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f193505050501580156106b5573d5f803e3d5ffd5b50565b5f6012905090565b5f600754905090565b5f6008546007546106da91906116cf565b905090565b60065481565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079090611684565b60405180910390fd5b806008819055507f66cbca4f3c64fecf1dcb9ce094abcf7f68c3450a1d4e3a8e917dd621edb4ebe0816040516107cf919061145e565b60405180910390a150565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f6008548261082e91906116cf565b90506006548261083c61058b565b6108469190611710565b1115610887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087e906117b3565b60405180910390fd5b8034146108c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c09061181b565b60405180910390fd5b6108d33383610dd7565b8160075f8282546108e49190611710565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f3ceffd410054fdaed44f598ff5c1fb450658778e2241892da4aa646979dee6178383604051610933929190611839565b60405180910390a25050565b60085481565b5f6007546006546109569190611860565b905090565b60606004805461096a906115e4565b80601f0160208091040260200160405190810160405280929190818152602001828054610996906115e4565b80156109e15780601f106109b8576101008083540402835291602001916109e1565b820191905f5260205f20905b8154815290600101906020018083116109c457829003601f168201915b5050505050905090565b5f6109f5336107da565b11610a35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2c906118dd565b60405180910390fd5b60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610abf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab690611945565b60405180910390fd5b600160095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555060075f815480929190610b2690611963565b9190505550610b36336001610e56565b3373ffffffffffffffffffffffffffffffffffffffff167f316d1ea3d1525e2bff370eb30cae16e7a334c48bb414303791bc219776e2cc2660405160405180910390a2565b5f80610b85610c3c565b9050610b92818585610ce7565b600191505092915050565b6009602052805f5260405f205f915054906101000a900460ff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b610c508383836001610ed5565b505050565b5f610c608484610bba565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610ce15781811015610cd2578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610cc99392919061198a565b60405180910390fd5b610ce084848484035f610ed5565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d57575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d4e919061150a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dc7575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610dbe919061150a565b60405180910390fd5b610dd28383836110a4565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e47575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e3e919061150a565b60405180910390fd5b610e525f83836110a4565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ec6575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ebd919061150a565b60405180910390fd5b610ed1825f836110a4565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f45575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610f3c919061150a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fb5575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610fac919061150a565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561109e578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611095919061145e565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110f4578060025f8282546110e89190611710565b925050819055506111c2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561117d578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016111749392919061198a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611209578060025f8282540392505081905550611253565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112b0919061145e565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6112ff826112bd565b61130981856112c7565b93506113198185602086016112d7565b611322816112e5565b840191505092915050565b5f6020820190508181035f83015261134581846112f5565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61137a82611351565b9050919050565b61138a81611370565b8114611394575f80fd5b50565b5f813590506113a581611381565b92915050565b5f819050919050565b6113bd816113ab565b81146113c7575f80fd5b50565b5f813590506113d8816113b4565b92915050565b5f80604083850312156113f4576113f361134d565b5b5f61140185828601611397565b9250506020611412858286016113ca565b9150509250929050565b5f8115159050919050565b6114308161141c565b82525050565b5f6020820190506114495f830184611427565b92915050565b611458816113ab565b82525050565b5f6020820190506114715f83018461144f565b92915050565b5f805f6060848603121561148e5761148d61134d565b5b5f61149b86828701611397565b93505060206114ac86828701611397565b92505060406114bd868287016113ca565b9150509250925092565b5f60ff82169050919050565b6114dc816114c7565b82525050565b5f6020820190506114f55f8301846114d3565b92915050565b61150481611370565b82525050565b5f60208201905061151d5f8301846114fb565b92915050565b5f602082840312156115385761153761134d565b5b5f611545848285016113ca565b91505092915050565b5f602082840312156115635761156261134d565b5b5f61157084828501611397565b91505092915050565b5f806040838503121561158f5761158e61134d565b5b5f61159c85828601611397565b92505060206115ad85828601611397565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806115fb57607f821691505b60208210810361160e5761160d6115b7565b5b50919050565b7f536f6c6f20756e206f7267616e697a7a61746f72652070756f206573656775695f8201527f72652071756573746120617a696f6e6500000000000000000000000000000000602082015250565b5f61166e6030836112c7565b915061167982611614565b604082019050919050565b5f6020820190508181035f83015261169b81611662565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6116d9826113ab565b91506116e4836113ab565b92508282026116f2816113ab565b91508282048414831517611709576117086116a2565b5b5092915050565b5f61171a826113ab565b9150611725836113ab565b925082820190508082111561173d5761173c6116a2565b5b92915050565b7f537570657261746f20696c206e756d65726f206d617373696d6f2064692070615f8201527f727465636970616e746900000000000000000000000000000000000000000000602082015250565b5f61179d602a836112c7565b91506117a882611743565b604082019050919050565b5f6020820190508181035f8301526117ca81611791565b9050919050565b7f496d706f72746f20696e766961746f206e6f6e20636f72726574746f000000005f82015250565b5f611805601c836112c7565b9150611810826117d1565b602082019050919050565b5f6020820190508181035f830152611832816117f9565b9050919050565b5f60408201905061184c5f83018561144f565b611859602083018461144f565b9392505050565b5f61186a826113ab565b9150611875836113ab565b925082820390508181111561188d5761188c6116a2565b5b92915050565b7f4e657373756e20746f6b656e20706f7373656475746f000000000000000000005f82015250565b5f6118c76016836112c7565b91506118d282611893565b602082019050919050565b5f6020820190508181035f8301526118f4816118bb565b9050919050565b7f546f6b656e207574696c697a7a61746f000000000000000000000000000000005f82015250565b5f61192f6010836112c7565b915061193a826118fb565b602082019050919050565b5f6020820190508181035f83015261195c81611923565b9050919050565b5f61196d826113ab565b91505f820361197f5761197e6116a2565b5b600182039050919050565b5f60608201905061199d5f8301866114fb565b6119aa602083018561144f565b6119b7604083018461144f565b94935050505056fea2646970667358221220319846fec81953f6d5ce34fb8ca053ec26af410a7c4a377b4506fd80a7d8a64164736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x129 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61203265 GT PUSH2 0xAA JUMPI DUP1 PUSH4 0x906D895D GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x906D895D EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x9B13B20E EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xD866B0B6 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x497 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x61203265 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x676C0D77 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x7B97008D EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x7FF9B596 EQ PUSH2 0x38B JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x24600FC3 GT PUSH2 0xF1 JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x520198A8 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x5A4DC09F EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x5F3D7FA1 EQ PUSH2 0x2B7 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA5D288C EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x237 PUSH2 0x5C2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x277 PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1523 JUMP JUMPDEST PUSH2 0x70A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x154E JUMP JUMPDEST PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x1523 JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0x93F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C9 PUSH2 0x945 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F3 PUSH2 0x95B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x414 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x41D PUSH2 0x9EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x445 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x481 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x154E JUMP JUMPDEST PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48E SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x1579 JUMP JUMPDEST PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4E2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x50E SWAP1 PUSH2 0x15E4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x559 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x530 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x559 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x53C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x56D PUSH2 0xC3C JUMP JUMPDEST SWAP1 POP PUSH2 0x57A DUP2 DUP6 DUP6 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x59E PUSH2 0xC3C JUMP JUMPDEST SWAP1 POP PUSH2 0x5AB DUP6 DUP3 DUP6 PUSH2 0xC55 JUMP JUMPDEST PUSH2 0x5B6 DUP6 DUP6 DUP6 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x651 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x648 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6B5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0x16CF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x799 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x790 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0x66CBCA4F3C64FECF1DCB9CE094ABCF7F68C3450A1D4E3A8E917DD621EDB4EBE0 DUP2 PUSH1 0x40 MLOAD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x82E SWAP2 SWAP1 PUSH2 0x16CF JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD DUP3 PUSH2 0x83C PUSH2 0x58B JUMP JUMPDEST PUSH2 0x846 SWAP2 SWAP1 PUSH2 0x1710 JUMP JUMPDEST GT ISZERO PUSH2 0x887 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87E SWAP1 PUSH2 0x17B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLVALUE EQ PUSH2 0x8C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C0 SWAP1 PUSH2 0x181B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8D3 CALLER DUP4 PUSH2 0xDD7 JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0x1710 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3CEFFD410054FDAED44F598FF5C1FB450658778E2241892DA4AA646979DEE617 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x933 SWAP3 SWAP2 SWAP1 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x956 SWAP2 SWAP1 PUSH2 0x1860 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x96A SWAP1 PUSH2 0x15E4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x996 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x9F5 CALLER PUSH2 0x7DA JUMP JUMPDEST GT PUSH2 0xA35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2C SWAP1 PUSH2 0x18DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xABF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB6 SWAP1 PUSH2 0x1945 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB26 SWAP1 PUSH2 0x1963 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xB36 CALLER PUSH1 0x1 PUSH2 0xE56 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x316D1EA3D1525E2BFF370EB30CAE16E7A334C48BB414303791BC219776E2CC26 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB85 PUSH2 0xC3C JUMP JUMPDEST SWAP1 POP PUSH2 0xB92 DUP2 DUP6 DUP6 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC50 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xED5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC60 DUP5 DUP5 PUSH2 0xBBA JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xCE1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCD2 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x198A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xED5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD57 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4E SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBE SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDD2 DUP4 DUP4 DUP4 PUSH2 0x10A4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE47 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3E SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE52 PUSH0 DUP4 DUP4 PUSH2 0x10A4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBD SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xED1 DUP3 PUSH0 DUP4 PUSH2 0x10A4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF45 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3C SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFB5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAC SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x109E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1095 SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10E8 SWAP2 SWAP1 PUSH2 0x1710 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11C2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x117D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1174 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x198A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1209 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1253 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x12B0 SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12FF DUP3 PUSH2 0x12BD JUMP JUMPDEST PUSH2 0x1309 DUP2 DUP6 PUSH2 0x12C7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1319 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12D7 JUMP JUMPDEST PUSH2 0x1322 DUP2 PUSH2 0x12E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1345 DUP2 DUP5 PUSH2 0x12F5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x137A DUP3 PUSH2 0x1351 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x138A DUP2 PUSH2 0x1370 JUMP JUMPDEST DUP2 EQ PUSH2 0x1394 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13A5 DUP2 PUSH2 0x1381 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BD DUP2 PUSH2 0x13AB JUMP JUMPDEST DUP2 EQ PUSH2 0x13C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13D8 DUP2 PUSH2 0x13B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F4 JUMPI PUSH2 0x13F3 PUSH2 0x134D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1401 DUP6 DUP3 DUP7 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1412 DUP6 DUP3 DUP7 ADD PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1430 DUP2 PUSH2 0x141C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1449 PUSH0 DUP4 ADD DUP5 PUSH2 0x1427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1458 DUP2 PUSH2 0x13AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1471 PUSH0 DUP4 ADD DUP5 PUSH2 0x144F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x148E JUMPI PUSH2 0x148D PUSH2 0x134D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x149B DUP7 DUP3 DUP8 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14AC DUP7 DUP3 DUP8 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x14BD DUP7 DUP3 DUP8 ADD PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14DC DUP2 PUSH2 0x14C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14F5 PUSH0 DUP4 ADD DUP5 PUSH2 0x14D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1504 DUP2 PUSH2 0x1370 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x151D PUSH0 DUP4 ADD DUP5 PUSH2 0x14FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1538 JUMPI PUSH2 0x1537 PUSH2 0x134D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1545 DUP5 DUP3 DUP6 ADD PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1563 JUMPI PUSH2 0x1562 PUSH2 0x134D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1570 DUP5 DUP3 DUP6 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x158F JUMPI PUSH2 0x158E PUSH2 0x134D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x159C DUP6 DUP3 DUP7 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15AD DUP6 DUP3 DUP7 ADD PUSH2 0x1397 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x15FB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x160E JUMPI PUSH2 0x160D PUSH2 0x15B7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536F6C6F20756E206F7267616E697A7A61746F72652070756F20657365677569 PUSH0 DUP3 ADD MSTORE PUSH32 0x72652071756573746120617A696F6E6500000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x166E PUSH1 0x30 DUP4 PUSH2 0x12C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1679 DUP3 PUSH2 0x1614 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x169B DUP2 PUSH2 0x1662 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16D9 DUP3 PUSH2 0x13AB JUMP JUMPDEST SWAP2 POP PUSH2 0x16E4 DUP4 PUSH2 0x13AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x16F2 DUP2 PUSH2 0x13AB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1709 JUMPI PUSH2 0x1708 PUSH2 0x16A2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x171A DUP3 PUSH2 0x13AB JUMP JUMPDEST SWAP2 POP PUSH2 0x1725 DUP4 PUSH2 0x13AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x173D JUMPI PUSH2 0x173C PUSH2 0x16A2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x537570657261746F20696C206E756D65726F206D617373696D6F206469207061 PUSH0 DUP3 ADD MSTORE PUSH32 0x727465636970616E746900000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x179D PUSH1 0x2A DUP4 PUSH2 0x12C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x17A8 DUP3 PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17CA DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496D706F72746F20696E766961746F206E6F6E20636F72726574746F00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1805 PUSH1 0x1C DUP4 PUSH2 0x12C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1810 DUP3 PUSH2 0x17D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1832 DUP2 PUSH2 0x17F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x184C PUSH0 DUP4 ADD DUP6 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x1859 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x144F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x186A DUP3 PUSH2 0x13AB JUMP JUMPDEST SWAP2 POP PUSH2 0x1875 DUP4 PUSH2 0x13AB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x188D JUMPI PUSH2 0x188C PUSH2 0x16A2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E657373756E20746F6B656E20706F7373656475746F00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18C7 PUSH1 0x16 DUP4 PUSH2 0x12C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x18D2 DUP3 PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18F4 DUP2 PUSH2 0x18BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E207574696C697A7A61746F00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x192F PUSH1 0x10 DUP4 PUSH2 0x12C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x193A DUP3 PUSH2 0x18FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x195C DUP2 PUSH2 0x1923 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x196D DUP3 PUSH2 0x13AB JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x197F JUMPI PUSH2 0x197E PUSH2 0x16A2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x199D PUSH0 DUP4 ADD DUP7 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x19AA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x19B7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x144F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SWAP9 CHAINID INVALID 0xC8 NOT MSTORE8 0xF6 0xD5 0xCE CALLVALUE 0xFB DUP13 LOG0 MSTORE8 0xEC 0x26 0xAF COINBASE EXP PUSH29 0x4A377B4506FD80A7D8A64164736F6C6343000819003300000000000000 ",
							"sourceMap": "126:2807:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;235:29:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2301:117:5;;;;;;;;;;;;;:::i;:::-;;3002:82:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2655:98:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2814:116;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;201:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;170:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1197:148;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1398:438:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;271:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2480:116;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1897:331:5;;;;;;;;;;;;;:::i;:::-;;3610:178:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;401:43:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;235:29:5:-;;;;:::o;3144:97:1:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;2301:117:5:-;1045:9;;;;;;;;;;;1031:23;;:10;:23;;;1023:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;2368:9:::1;;;;;;;;;;;2360:27;;:50;2388:21;2360:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2301:117::o:0;3002:82:1:-;3051:5;3075:2;3068:9;;3002:82;:::o;2655:98:5:-;2704:7;2731:14;;2724:21;;2655:98;:::o;2814:116::-;2868:7;2912:10;;2895:14;;:27;;;;:::i;:::-;2888:34;;2814:116;:::o;201:27::-;;;;:::o;170:24::-;;;;;;;;;;;;;:::o;1197:148::-;1045:9;;;;;;;;;;;1031:23;;:10;:23;;;1023:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;1289:9:::1;1276:10;:22;;;;1314:23;1327:9;1314:23;;;;;;:::i;:::-;;;;;;;;1197:148:::0;:::o;3299:116:1:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;1398:438:5:-;1467:18;1498:10;;1488:7;:20;;;;:::i;:::-;1467:41;;1554:12;;1543:7;1527:13;:11;:13::i;:::-;:23;;;;:::i;:::-;:39;;1519:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;1645:10;1632:9;:23;1624:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1701:26;1707:10;1719:7;1701:5;:26::i;:::-;1756:7;1738:14;;:25;;;;;;;:::i;:::-;;;;;;;;1796:10;1781:47;;;1808:7;1817:10;1781:47;;;;;;;:::i;:::-;;;;;;;;1456:380;1398:438;:::o;271:25::-;;;;:::o;2480:116::-;2532:7;2574:14;;2559:12;;:29;;;;:::i;:::-;2552:36;;2480:116;:::o;2276:93:1:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;1897:331:5:-;1977:1;1953:21;1963:10;1953:9;:21::i;:::-;:25;1945:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2025:11;:23;2037:10;2025:23;;;;;;;;;;;;;;;;;;;;;;;;;2024:24;2016:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2108:4;2082:11;:23;2094:10;2082:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;2123:14;;:16;;;;;;;;;:::i;:::-;;;;;;2152:20;2158:10;2170:1;2152:5;:20::i;:::-;2209:10;2190:30;;;;;;;;;;;;1897:331::o;3610:178:1:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;401:43:5:-;;;;;;;;;;;;;;;;;;;;;;:::o;3846:140:1:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8989:128:1:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:118::-;4833:24;4851:5;4833:24;:::i;:::-;4828:3;4821:37;4746:118;;:::o;4870:222::-;4963:4;5001:2;4990:9;4986:18;4978:26;;5014:71;5082:1;5071:9;5067:17;5058:6;5014:71;:::i;:::-;4870:222;;;;:::o;5098:329::-;5157:6;5206:2;5194:9;5185:7;5181:23;5177:32;5174:119;;;5212:79;;:::i;:::-;5174:119;5332:1;5357:53;5402:7;5393:6;5382:9;5378:22;5357:53;:::i;:::-;5347:63;;5303:117;5098:329;;;;:::o;5433:::-;5492:6;5541:2;5529:9;5520:7;5516:23;5512:32;5509:119;;;5547:79;;:::i;:::-;5509:119;5667:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;:::i;:::-;5682:63;;5638:117;5433:329;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:235::-;6900:34;6896:1;6888:6;6884:14;6877:58;6969:18;6964:2;6956:6;6952:15;6945:43;6760:235;:::o;7001:366::-;7143:3;7164:67;7228:2;7223:3;7164:67;:::i;:::-;7157:74;;7240:93;7329:3;7240:93;:::i;:::-;7358:2;7353:3;7349:12;7342:19;;7001:366;;;:::o;7373:419::-;7539:4;7577:2;7566:9;7562:18;7554:26;;7626:9;7620:4;7616:20;7612:1;7601:9;7597:17;7590:47;7654:131;7780:4;7654:131;:::i;:::-;7646:139;;7373:419;;;:::o;7798:180::-;7846:77;7843:1;7836:88;7943:4;7940:1;7933:15;7967:4;7964:1;7957:15;7984:410;8024:7;8047:20;8065:1;8047:20;:::i;:::-;8042:25;;8081:20;8099:1;8081:20;:::i;:::-;8076:25;;8136:1;8133;8129:9;8158:30;8176:11;8158:30;:::i;:::-;8147:41;;8337:1;8328:7;8324:15;8321:1;8318:22;8298:1;8291:9;8271:83;8248:139;;8367:18;;:::i;:::-;8248:139;8032:362;7984:410;;;;:::o;8400:191::-;8440:3;8459:20;8477:1;8459:20;:::i;:::-;8454:25;;8493:20;8511:1;8493:20;:::i;:::-;8488:25;;8536:1;8533;8529:9;8522:16;;8557:3;8554:1;8551:10;8548:36;;;8564:18;;:::i;:::-;8548:36;8400:191;;;;:::o;8597:229::-;8737:34;8733:1;8725:6;8721:14;8714:58;8806:12;8801:2;8793:6;8789:15;8782:37;8597:229;:::o;8832:366::-;8974:3;8995:67;9059:2;9054:3;8995:67;:::i;:::-;8988:74;;9071:93;9160:3;9071:93;:::i;:::-;9189:2;9184:3;9180:12;9173:19;;8832:366;;;:::o;9204:419::-;9370:4;9408:2;9397:9;9393:18;9385:26;;9457:9;9451:4;9447:20;9443:1;9432:9;9428:17;9421:47;9485:131;9611:4;9485:131;:::i;:::-;9477:139;;9204:419;;;:::o;9629:178::-;9769:30;9765:1;9757:6;9753:14;9746:54;9629:178;:::o;9813:366::-;9955:3;9976:67;10040:2;10035:3;9976:67;:::i;:::-;9969:74;;10052:93;10141:3;10052:93;:::i;:::-;10170:2;10165:3;10161:12;10154:19;;9813:366;;;:::o;10185:419::-;10351:4;10389:2;10378:9;10374:18;10366:26;;10438:9;10432:4;10428:20;10424:1;10413:9;10409:17;10402:47;10466:131;10592:4;10466:131;:::i;:::-;10458:139;;10185:419;;;:::o;10610:332::-;10731:4;10769:2;10758:9;10754:18;10746:26;;10782:71;10850:1;10839:9;10835:17;10826:6;10782:71;:::i;:::-;10863:72;10931:2;10920:9;10916:18;10907:6;10863:72;:::i;:::-;10610:332;;;;;:::o;10948:194::-;10988:4;11008:20;11026:1;11008:20;:::i;:::-;11003:25;;11042:20;11060:1;11042:20;:::i;:::-;11037:25;;11086:1;11083;11079:9;11071:17;;11110:1;11104:4;11101:11;11098:37;;;11115:18;;:::i;:::-;11098:37;10948:194;;;;:::o;11148:172::-;11288:24;11284:1;11276:6;11272:14;11265:48;11148:172;:::o;11326:366::-;11468:3;11489:67;11553:2;11548:3;11489:67;:::i;:::-;11482:74;;11565:93;11654:3;11565:93;:::i;:::-;11683:2;11678:3;11674:12;11667:19;;11326:366;;;:::o;11698:419::-;11864:4;11902:2;11891:9;11887:18;11879:26;;11951:9;11945:4;11941:20;11937:1;11926:9;11922:17;11915:47;11979:131;12105:4;11979:131;:::i;:::-;11971:139;;11698:419;;;:::o;12123:166::-;12263:18;12259:1;12251:6;12247:14;12240:42;12123:166;:::o;12295:366::-;12437:3;12458:67;12522:2;12517:3;12458:67;:::i;:::-;12451:74;;12534:93;12623:3;12534:93;:::i;:::-;12652:2;12647:3;12643:12;12636:19;;12295:366;;;:::o;12667:419::-;12833:4;12871:2;12860:9;12856:18;12848:26;;12920:9;12914:4;12910:20;12906:1;12895:9;12891:17;12884:47;12948:131;13074:4;12948:131;:::i;:::-;12940:139;;12667:419;;;:::o;13092:171::-;13131:3;13154:24;13172:5;13154:24;:::i;:::-;13145:33;;13200:4;13193:5;13190:15;13187:41;;13208:18;;:::i;:::-;13187:41;13255:1;13248:5;13244:13;13237:20;;13092:171;;;:::o;13269:442::-;13418:4;13456:2;13445:9;13441:18;13433:26;;13469:71;13537:1;13526:9;13522:17;13513:6;13469:71;:::i;:::-;13550:72;13618:2;13607:9;13603:18;13594:6;13550:72;:::i;:::-;13632;13700:2;13689:9;13685:18;13676:6;13632:72;:::i;:::-;13269:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1329000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"decimals()": "383",
								"getAvailableSeats()": "infinite",
								"getTicketsSold()": "2499",
								"getTotalAccumulated()": "infinite",
								"hasAttended(address)": "2943",
								"maxAttendees()": "2536",
								"name()": "infinite",
								"organizer()": "2531",
								"purchaseTokens(uint256)": "infinite",
								"recordAttendance()": "infinite",
								"symbol()": "infinite",
								"tokenPrice()": "2536",
								"totalAttendees()": "2493",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"updateTokenPrice(uint256)": "infinite",
								"withdrawFunds()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 2933,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 126,
									"end": 2933,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 126,
									"end": 2933,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 641,
									"end": 921,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 641,
									"end": 921,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 641,
									"end": 921,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 641,
									"end": 921,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 641,
									"end": 921,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 641,
									"end": 921,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 641,
									"end": 921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 641,
									"end": 921,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 790,
									"end": 795,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 797,
									"end": 804,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 829,
									"end": 839,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 817,
									"end": 826,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 817,
									"end": 826,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 839,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 817,
									"end": 839,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 817,
									"end": 839,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 817,
									"end": 839,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 817,
									"end": 839,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 817,
									"end": 839,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 817,
									"end": 839,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 817,
									"end": 839,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 817,
									"end": 839,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 817,
									"end": 839,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 817,
									"end": 839,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 817,
									"end": 839,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 817,
									"end": 839,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 817,
									"end": 839,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 817,
									"end": 839,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 817,
									"end": 839,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 817,
									"end": 839,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 817,
									"end": 839,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 865,
									"end": 878,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 850,
									"end": 862,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 850,
									"end": 878,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 850,
									"end": 878,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 850,
									"end": 878,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 850,
									"end": 878,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 902,
									"end": 913,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 889,
									"end": 899,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 889,
									"end": 913,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 889,
									"end": 913,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 889,
									"end": 913,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 889,
									"end": 913,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 921,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 126,
									"end": 2933,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 126,
									"end": 2933,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2636,
									"end": 2641,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2744,
									"end": 2749,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2726,
									"end": 2750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2724,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2716,
									"end": 2751,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2765,
									"end": 2766,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2763,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2755,
									"end": 2767,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2838,
									"end": 2843,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2875,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2863,
									"end": 2876,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 2912,
									"end": 2917,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2885,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3047,
									"end": 3053,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3055,
									"end": 3061,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3063,
									"end": 3069,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3071,
									"end": 3077,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3120,
									"end": 3123,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3108,
									"end": 3117,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3099,
									"end": 3106,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3091,
									"end": 3124,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 3088,
									"end": 3208,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3088,
									"end": 3208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3088,
									"end": 3208,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3206,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3127,
									"end": 3206,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 3127,
									"end": 3206,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3206,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3127,
									"end": 3206,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3088,
									"end": 3208,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3088,
									"end": 3208,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3268,
									"end": 3269,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3257,
									"end": 3266,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3253,
									"end": 3270,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3247,
									"end": 3271,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3298,
									"end": 3316,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3290,
									"end": 3296,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3287,
									"end": 3317,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3284,
									"end": 3401,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3284,
									"end": 3401,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3284,
									"end": 3401,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3320,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 3320,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 3320,
									"end": 3399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3320,
									"end": 3399,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 3320,
									"end": 3399,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3284,
									"end": 3401,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3284,
									"end": 3401,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3425,
									"end": 3499,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3491,
									"end": 3498,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3482,
									"end": 3488,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3471,
									"end": 3480,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3467,
									"end": 3489,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3425,
									"end": 3499,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3425,
									"end": 3499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3425,
									"end": 3499,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3425,
									"end": 3499,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3415,
									"end": 3499,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3415,
									"end": 3499,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3509,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3569,
									"end": 3571,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3558,
									"end": 3567,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3554,
									"end": 3572,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3548,
									"end": 3573,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3600,
									"end": 3618,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3592,
									"end": 3598,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3589,
									"end": 3619,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3586,
									"end": 3703,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3586,
									"end": 3703,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3586,
									"end": 3703,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3622,
									"end": 3701,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 3622,
									"end": 3701,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 3622,
									"end": 3701,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3622,
									"end": 3701,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 3622,
									"end": 3701,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3586,
									"end": 3703,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3586,
									"end": 3703,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3727,
									"end": 3801,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 3793,
									"end": 3800,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3784,
									"end": 3790,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3773,
									"end": 3782,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3769,
									"end": 3791,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3727,
									"end": 3801,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3727,
									"end": 3801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3727,
									"end": 3801,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 3727,
									"end": 3801,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 3801,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 3801,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3519,
									"end": 3811,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3850,
									"end": 3852,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3876,
									"end": 3940,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 3932,
									"end": 3939,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3923,
									"end": 3929,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3912,
									"end": 3921,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3908,
									"end": 3930,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3876,
									"end": 3940,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3876,
									"end": 3940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3876,
									"end": 3940,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 3876,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3866,
									"end": 3940,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3866,
									"end": 3940,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3821,
									"end": 3950,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3989,
									"end": 3991,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4015,
									"end": 4079,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 4071,
									"end": 4078,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 4062,
									"end": 4068,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4051,
									"end": 4060,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4047,
									"end": 4069,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4015,
									"end": 4079,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 4015,
									"end": 4079,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4015,
									"end": 4079,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 4015,
									"end": 4079,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4005,
									"end": 4079,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4005,
									"end": 4079,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3960,
									"end": 4089,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 4096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4102,
									"end": 4201,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 4102,
									"end": 4201,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4154,
									"end": 4160,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4188,
									"end": 4193,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4182,
									"end": 4194,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4172,
									"end": 4194,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4172,
									"end": 4194,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4102,
									"end": 4201,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4102,
									"end": 4201,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4102,
									"end": 4201,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4102,
									"end": 4201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4207,
									"end": 4387,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 4207,
									"end": 4387,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4255,
									"end": 4332,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4252,
									"end": 4253,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4245,
									"end": 4333,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4352,
									"end": 4356,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 4349,
									"end": 4350,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4342,
									"end": 4357,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4376,
									"end": 4380,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4373,
									"end": 4374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4366,
									"end": 4381,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4393,
									"end": 4713,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 4393,
									"end": 4713,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4437,
									"end": 4443,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4474,
									"end": 4475,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4468,
									"end": 4472,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4464,
									"end": 4476,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4454,
									"end": 4476,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4454,
									"end": 4476,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4521,
									"end": 4522,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4515,
									"end": 4519,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4511,
									"end": 4523,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4542,
									"end": 4560,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4532,
									"end": 4613,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4532,
									"end": 4613,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4598,
									"end": 4602,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 4590,
									"end": 4596,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4586,
									"end": 4603,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4576,
									"end": 4603,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4576,
									"end": 4603,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4532,
									"end": 4613,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4532,
									"end": 4613,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4660,
									"end": 4662,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4652,
									"end": 4658,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4649,
									"end": 4663,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4626,
									"end": 4664,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4623,
									"end": 4707,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4623,
									"end": 4707,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4679,
									"end": 4697,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4679,
									"end": 4697,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 4679,
									"end": 4697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4679,
									"end": 4697,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4679,
									"end": 4697,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4623,
									"end": 4707,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4623,
									"end": 4707,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4444,
									"end": 4713,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4393,
									"end": 4713,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4393,
									"end": 4713,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4393,
									"end": 4713,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4393,
									"end": 4713,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4719,
									"end": 4860,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 4719,
									"end": 4860,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4768,
									"end": 4772,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4791,
									"end": 4794,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4783,
									"end": 4794,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4783,
									"end": 4794,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4814,
									"end": 4817,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4811,
									"end": 4812,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4804,
									"end": 4818,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4848,
									"end": 4852,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4845,
									"end": 4846,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4835,
									"end": 4853,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4827,
									"end": 4853,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4827,
									"end": 4853,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4719,
									"end": 4860,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4719,
									"end": 4860,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4719,
									"end": 4860,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4719,
									"end": 4860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4866,
									"end": 4959,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 4866,
									"end": 4959,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4903,
									"end": 4909,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4952,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4945,
									"end": 4947,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4938,
									"end": 4943,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4934,
									"end": 4948,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4930,
									"end": 4953,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4920,
									"end": 4953,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4920,
									"end": 4953,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4866,
									"end": 4959,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4866,
									"end": 4959,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4866,
									"end": 4959,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4866,
									"end": 4959,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5072,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 4965,
									"end": 5072,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5009,
									"end": 5017,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5059,
									"end": 5064,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5053,
									"end": 5057,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5049,
									"end": 5065,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 5028,
									"end": 5065,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5028,
									"end": 5065,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5072,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5072,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5072,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5072,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5072,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5147,
									"end": 5153,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5197,
									"end": 5198,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5185,
									"end": 5195,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5181,
									"end": 5199,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5220,
									"end": 5317,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5250,
									"end": 5316,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5248,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5220,
									"end": 5317,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 5220,
									"end": 5317,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5220,
									"end": 5317,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5220,
									"end": 5317,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5338,
									"end": 5377,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 5368,
									"end": 5376,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5357,
									"end": 5366,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5338,
									"end": 5377,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 5338,
									"end": 5377,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5338,
									"end": 5377,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 5338,
									"end": 5377,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5326,
									"end": 5377,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 5326,
									"end": 5377,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5410,
									"end": 5414,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5406,
									"end": 5415,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5404,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5395,
									"end": 5416,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5386,
									"end": 5416,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5386,
									"end": 5416,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5459,
									"end": 5463,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5449,
									"end": 5457,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5445,
									"end": 5464,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5438,
									"end": 5443,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5435,
									"end": 5465,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5425,
									"end": 5465,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5425,
									"end": 5465,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5154,
									"end": 5471,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5154,
									"end": 5471,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5477,
									"end": 5537,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 5477,
									"end": 5537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5505,
									"end": 5508,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5526,
									"end": 5531,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5519,
									"end": 5531,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5519,
									"end": 5531,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5477,
									"end": 5537,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5477,
									"end": 5537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5477,
									"end": 5537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5477,
									"end": 5537,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5543,
									"end": 5685,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5543,
									"end": 5685,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5593,
									"end": 5602,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5626,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5644,
									"end": 5678,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5653,
									"end": 5677,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 5671,
									"end": 5676,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5653,
									"end": 5677,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 5653,
									"end": 5677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5653,
									"end": 5677,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 5653,
									"end": 5677,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5644,
									"end": 5678,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 5644,
									"end": 5678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5644,
									"end": 5678,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5644,
									"end": 5678,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5626,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 5626,
									"end": 5679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5626,
									"end": 5679,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5626,
									"end": 5679,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5613,
									"end": 5679,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5613,
									"end": 5679,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5543,
									"end": 5685,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5543,
									"end": 5685,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5543,
									"end": 5685,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5543,
									"end": 5685,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5691,
									"end": 5766,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5691,
									"end": 5766,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5734,
									"end": 5737,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5755,
									"end": 5760,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5748,
									"end": 5760,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5748,
									"end": 5760,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5691,
									"end": 5766,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5691,
									"end": 5766,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5691,
									"end": 5766,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5691,
									"end": 5766,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5772,
									"end": 6041,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 5772,
									"end": 6041,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5882,
									"end": 5921,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5913,
									"end": 5920,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5882,
									"end": 5921,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5882,
									"end": 5921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5882,
									"end": 5921,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5882,
									"end": 5921,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5943,
									"end": 6034,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 5992,
									"end": 6033,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 6016,
									"end": 6032,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5992,
									"end": 6033,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5992,
									"end": 6033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5992,
									"end": 6033,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 5992,
									"end": 6033,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5984,
									"end": 5990,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5977,
									"end": 5981,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5971,
									"end": 5982,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5943,
									"end": 6034,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5943,
									"end": 6034,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5943,
									"end": 6034,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 5943,
									"end": 6034,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5937,
									"end": 5941,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5930,
									"end": 6035,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5848,
									"end": 6041,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5772,
									"end": 6041,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5772,
									"end": 6041,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5772,
									"end": 6041,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5772,
									"end": 6041,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6047,
									"end": 6120,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 6047,
									"end": 6120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6092,
									"end": 6095,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6047,
									"end": 6120,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6047,
									"end": 6120,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6126,
									"end": 6315,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6126,
									"end": 6315,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6203,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 6203,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 6203,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6203,
									"end": 6235,
									"name": "tag",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 6203,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6244,
									"end": 6309,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6302,
									"end": 6308,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6294,
									"end": 6300,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6288,
									"end": 6292,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6244,
									"end": 6309,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 6244,
									"end": 6309,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6244,
									"end": 6309,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6244,
									"end": 6309,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6179,
									"end": 6315,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6126,
									"end": 6315,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6126,
									"end": 6315,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6126,
									"end": 6315,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6321,
									"end": 6507,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 6321,
									"end": 6507,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6398,
									"end": 6401,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6391,
									"end": 6396,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6388,
									"end": 6402,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6452,
									"end": 6491,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 6489,
									"end": 6490,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6482,
									"end": 6487,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6452,
									"end": 6491,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6452,
									"end": 6491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6452,
									"end": 6491,
									"name": "tag",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 6452,
									"end": 6491,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6425,
									"end": 6426,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6418,
									"end": 6423,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6414,
									"end": 6427,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6405,
									"end": 6427,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6405,
									"end": 6427,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6321,
									"end": 6507,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6321,
									"end": 6507,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6321,
									"end": 6507,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6513,
									"end": 7056,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 6513,
									"end": 7056,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6614,
									"end": 6616,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6609,
									"end": 6612,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6606,
									"end": 6617,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6603,
									"end": 7049,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6603,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 6603,
									"end": 7049,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6648,
									"end": 6686,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 6680,
									"end": 6685,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6648,
									"end": 6686,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 6648,
									"end": 6686,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6648,
									"end": 6686,
									"name": "tag",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 6648,
									"end": 6686,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6732,
									"end": 6761,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 6750,
									"end": 6760,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6732,
									"end": 6761,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 6732,
									"end": 6761,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6732,
									"end": 6761,
									"name": "tag",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 6732,
									"end": 6761,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6722,
									"end": 6730,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6718,
									"end": 6762,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6915,
									"end": 6917,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6903,
									"end": 6913,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6900,
									"end": 6918,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6897,
									"end": 6946,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6897,
									"end": 6946,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 6897,
									"end": 6946,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6936,
									"end": 6944,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6921,
									"end": 6944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6921,
									"end": 6944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6897,
									"end": 6946,
									"name": "tag",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 6897,
									"end": 6946,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6959,
									"end": 7039,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 7015,
									"end": 7037,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 7033,
									"end": 7036,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7037,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 7015,
									"end": 7037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7037,
									"name": "tag",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 7015,
									"end": 7037,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7005,
									"end": 7013,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7001,
									"end": 7038,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6988,
									"end": 6999,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6959,
									"end": 7039,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 6959,
									"end": 7039,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6959,
									"end": 7039,
									"name": "tag",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 6959,
									"end": 7039,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6618,
									"end": 7049,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6618,
									"end": 7049,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6603,
									"end": 7049,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 6603,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6513,
									"end": 7056,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6513,
									"end": 7056,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6513,
									"end": 7056,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6513,
									"end": 7056,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7062,
									"end": 7179,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 7062,
									"end": 7179,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7116,
									"end": 7124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7166,
									"end": 7171,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7160,
									"end": 7164,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7156,
									"end": 7172,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 7135,
									"end": 7172,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7135,
									"end": 7172,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7062,
									"end": 7179,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7062,
									"end": 7179,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7062,
									"end": 7179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7062,
									"end": 7179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7062,
									"end": 7179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7185,
									"end": 7354,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 7185,
									"end": 7354,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7229,
									"end": 7235,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7262,
									"end": 7313,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 7310,
									"end": 7311,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7306,
									"end": 7312,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7298,
									"end": 7303,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7295,
									"end": 7296,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7291,
									"end": 7304,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7262,
									"end": 7313,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 7262,
									"end": 7313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7262,
									"end": 7313,
									"name": "tag",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 7262,
									"end": 7313,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7258,
									"end": 7314,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 7347,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7337,
									"end": 7341,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7333,
									"end": 7348,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7323,
									"end": 7348,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7323,
									"end": 7348,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7236,
									"end": 7354,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7185,
									"end": 7354,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7185,
									"end": 7354,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7185,
									"end": 7354,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7185,
									"end": 7354,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7185,
									"end": 7354,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7359,
									"end": 7654,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 7359,
									"end": 7654,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7435,
									"end": 7439,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7581,
									"end": 7610,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 7606,
									"end": 7609,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7600,
									"end": 7604,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7581,
									"end": 7610,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 7581,
									"end": 7610,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7581,
									"end": 7610,
									"name": "tag",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 7581,
									"end": 7610,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7573,
									"end": 7610,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7573,
									"end": 7610,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7643,
									"end": 7646,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7636,
									"end": 7647,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7630,
									"end": 7634,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7627,
									"end": 7648,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 7619,
									"end": 7648,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7619,
									"end": 7648,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7359,
									"end": 7654,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7359,
									"end": 7654,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7359,
									"end": 7654,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7359,
									"end": 7654,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7359,
									"end": 7654,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7659,
									"end": 9054,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7659,
									"end": 9054,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7776,
									"end": 7813,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 7809,
									"end": 7812,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7776,
									"end": 7813,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 7776,
									"end": 7813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7776,
									"end": 7813,
									"name": "tag",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 7776,
									"end": 7813,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7878,
									"end": 7896,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7870,
									"end": 7876,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7867,
									"end": 7897,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7864,
									"end": 7920,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7864,
									"end": 7920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 7864,
									"end": 7920,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7900,
									"end": 7918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 7900,
									"end": 7918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 7900,
									"end": 7918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7900,
									"end": 7918,
									"name": "tag",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 7900,
									"end": 7918,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7864,
									"end": 7920,
									"name": "tag",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 7864,
									"end": 7920,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7944,
									"end": 7982,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 7976,
									"end": 7980,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7970,
									"end": 7981,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 7944,
									"end": 7982,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 7944,
									"end": 7982,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7944,
									"end": 7982,
									"name": "tag",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 7944,
									"end": 7982,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8029,
									"end": 8096,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 8089,
									"end": 8095,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8081,
									"end": 8087,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8075,
									"end": 8079,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8029,
									"end": 8096,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 8029,
									"end": 8096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8029,
									"end": 8096,
									"name": "tag",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 8029,
									"end": 8096,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8123,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8147,
									"end": 8151,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8134,
									"end": 8151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8134,
									"end": 8151,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8179,
									"end": 8181,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8171,
									"end": 8177,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8168,
									"end": 8182,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8196,
									"end": 8197,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8191,
									"end": 8809,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8191,
									"end": 8809,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 8191,
									"end": 8809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 8191,
									"end": 8809,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8853,
									"end": 8854,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8870,
									"end": 8876,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8867,
									"end": 8944,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8867,
									"end": 8944,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 8867,
									"end": 8944,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8919,
									"end": 8928,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8914,
									"end": 8917,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 8910,
									"end": 8929,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8904,
									"end": 8930,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8895,
									"end": 8930,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8895,
									"end": 8930,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8867,
									"end": 8944,
									"name": "tag",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 8867,
									"end": 8944,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8970,
									"end": 9037,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 9030,
									"end": 9036,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9023,
									"end": 9028,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8970,
									"end": 9037,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 8970,
									"end": 9037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8970,
									"end": 9037,
									"name": "tag",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 8970,
									"end": 9037,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8964,
									"end": 8968,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8957,
									"end": 9038,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8826,
									"end": 9048,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8161,
									"end": 9048,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 8161,
									"end": 9048,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8191,
									"end": 8809,
									"name": "tag",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 8191,
									"end": 8809,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8243,
									"end": 8247,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8239,
									"end": 8248,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 8231,
									"end": 8237,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8227,
									"end": 8249,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8277,
									"end": 8314,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 8309,
									"end": 8313,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8277,
									"end": 8314,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 8277,
									"end": 8314,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8277,
									"end": 8314,
									"name": "tag",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 8277,
									"end": 8314,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8336,
									"end": 8337,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "tag",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8364,
									"end": 8371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8361,
									"end": 8362,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8358,
									"end": 8372,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8443,
									"end": 8452,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8438,
									"end": 8441,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8434,
									"end": 8453,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8428,
									"end": 8454,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8420,
									"end": 8426,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8413,
									"end": 8455,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8494,
									"end": 8495,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8486,
									"end": 8492,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8482,
									"end": 8496,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8472,
									"end": 8496,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8472,
									"end": 8496,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8541,
									"end": 8543,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8530,
									"end": 8539,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8526,
									"end": 8544,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8513,
									"end": 8544,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 8513,
									"end": 8544,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8387,
									"end": 8391,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8384,
									"end": 8385,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8380,
									"end": 8392,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8375,
									"end": 8392,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8375,
									"end": 8392,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "tag",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8586,
									"end": 8592,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8577,
									"end": 8584,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8574,
									"end": 8593,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8571,
									"end": 8750,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8571,
									"end": 8750,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 8571,
									"end": 8750,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8644,
									"end": 8653,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8639,
									"end": 8642,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8635,
									"end": 8654,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8629,
									"end": 8655,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8687,
									"end": 8735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 8729,
									"end": 8733,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8721,
									"end": 8727,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8717,
									"end": 8734,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8706,
									"end": 8715,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8687,
									"end": 8735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 8687,
									"end": 8735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8687,
									"end": 8735,
									"name": "tag",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 8687,
									"end": 8735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8679,
									"end": 8685,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8672,
									"end": 8736,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8594,
									"end": 8750,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8571,
									"end": 8750,
									"name": "tag",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 8571,
									"end": 8750,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8796,
									"end": 8797,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8792,
									"end": 8793,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 8784,
									"end": 8790,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8780,
									"end": 8794,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8776,
									"end": 8798,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8770,
									"end": 8774,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8763,
									"end": 8799,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8198,
									"end": 8809,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8198,
									"end": 8809,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8198,
									"end": 8809,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8161,
									"end": 9048,
									"name": "tag",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 8161,
									"end": 9048,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8161,
									"end": 9048,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7751,
									"end": 9054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7751,
									"end": 9054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7751,
									"end": 9054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7659,
									"end": 9054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7659,
									"end": 9054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7659,
									"end": 9054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 126,
									"end": 2933,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 126,
									"end": 2933,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 126,
									"end": 2933,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 2933,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 126,
									"end": 2933,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 2933,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 2933,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 126,
									"end": 2933,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 2933,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220319846fec81953f6d5ce34fb8ca053ec26af410a7c4a377b4506fd80a7d8a64164736f6c63430008190033",
									".code": [
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "61203265"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "906D895D"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "906D895D"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "9B13B20E"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "D866B0B6"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "61203265"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "676C0D77"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "7B97008D"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "7FF9B596"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "24600FC3"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "24600FC3"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "520198A8"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "5A4DC09F"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "5F3D7FA1"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "A5D288C"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 2933,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 235,
											"end": 264,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 235,
											"end": 264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 235,
											"end": 264,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 264,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 235,
											"end": 264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 235,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 235,
											"end": 264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 235,
											"end": 264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 235,
											"end": 264,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 235,
											"end": 264,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 235,
											"end": 264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 235,
											"end": 264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 235,
											"end": 264,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2301,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2655,
											"end": 2753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2655,
											"end": 2753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2814,
											"end": 2930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2814,
											"end": 2930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 201,
											"end": 228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 201,
											"end": 228,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 201,
											"end": 228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 201,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 201,
											"end": 228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 201,
											"end": 228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 228,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 201,
											"end": 228,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 201,
											"end": 228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 201,
											"end": 228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 228,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 170,
											"end": 194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 170,
											"end": 194,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 194,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 170,
											"end": 194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 170,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 170,
											"end": 194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 170,
											"end": 194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 194,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 170,
											"end": 194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 170,
											"end": 194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 170,
											"end": 194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 194,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1197,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1197,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1398,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1398,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 271,
											"end": 296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 271,
											"end": 296,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 271,
											"end": 296,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 271,
											"end": 296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 271,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 271,
											"end": 296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 271,
											"end": 296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 271,
											"end": 296,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 271,
											"end": 296,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 271,
											"end": 296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 271,
											"end": 296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 271,
											"end": 296,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2480,
											"end": 2596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2480,
											"end": 2596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1897,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 401,
											"end": 444,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 401,
											"end": 444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 401,
											"end": 444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 401,
											"end": 444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 235,
											"end": 264,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 235,
											"end": 264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 235,
											"end": 264,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 235,
											"end": 264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1054,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1054,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1041,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1054,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1054,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1054,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1023,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2368,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2377,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2368,
											"end": 2377,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2377,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2368,
											"end": 2377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2360,
											"end": 2387,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 2388,
											"end": 2409,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2410,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2410,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2711,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2922,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2912,
											"end": 2922,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2895,
											"end": 2909,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2895,
											"end": 2909,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2895,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2895,
											"end": 2922,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2895,
											"end": 2922,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2895,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2895,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2895,
											"end": 2922,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2895,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2922,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 201,
											"end": 228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 201,
											"end": 228,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 201,
											"end": 228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 170,
											"end": 194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 170,
											"end": 194,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 170,
											"end": 194,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 170,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1045,
											"end": 1054,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1054,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1054,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1041,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1054,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1031,
											"end": 1054,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1054,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1023,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1023,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1289,
											"end": 1298,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "66CBCA4F3C64FECF1DCB9CE094ABCF7F68C3450A1D4E3A8E917DD621EDB4EBE0"
										},
										{
											"begin": 1327,
											"end": 1336,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1337,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1314,
											"end": 1337,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1337,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1314,
											"end": 1337,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1337,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1314,
											"end": 1337,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1337,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1337,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1337,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1337,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1337,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1337,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1485,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1508,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1498,
											"end": 1508,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1495,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1488,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1543,
											"end": 1550,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1527,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1527,
											"end": 1540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1540,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1527,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1527,
											"end": 1550,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1527,
											"end": 1550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1550,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1527,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1566,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1566,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1519,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1519,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1632,
											"end": 1641,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1624,
											"end": 1688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1624,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1707,
											"end": 1717,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1719,
											"end": 1726,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1701,
											"end": 1727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1756,
											"end": 1763,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1752,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1738,
											"end": 1752,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1763,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1763,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1763,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1738,
											"end": 1763,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1738,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1763,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1738,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1763,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1763,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1763,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1806,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "PUSH",
											"source": 5,
											"value": "3CEFFD410054FDAED44F598FF5C1FB450658778E2241892DA4AA646979DEE617"
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1827,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1781,
											"end": 1828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1828,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 271,
											"end": 296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 271,
											"end": 296,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 271,
											"end": 296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2532,
											"end": 2539,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2588,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2574,
											"end": 2588,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2559,
											"end": 2571,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2559,
											"end": 2571,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2559,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2559,
											"end": 2588,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2559,
											"end": 2588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2559,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2559,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2559,
											"end": 2588,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2559,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1897,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 1978,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1963,
											"end": 1973,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1953,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1953,
											"end": 1974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1953,
											"end": 1974,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1953,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1953,
											"end": 1978,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1945,
											"end": 2005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1945,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2037,
											"end": 2047,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2048,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2016,
											"end": 2069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2016,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2112,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2082,
											"end": 2093,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2094,
											"end": 2104,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2137,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2123,
											"end": 2137,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2139,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2139,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2139,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2139,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2139,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2123,
											"end": 2139,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2123,
											"end": 2139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2139,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2123,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2139,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2139,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2139,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2139,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2139,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2158,
											"end": 2168,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2170,
											"end": 2171,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2152,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2152,
											"end": 2172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2219,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "316D1EA3D1525E2BFF370EB30CAE16E7A334C48BB414303791BC219776E2CC26"
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 401,
											"end": 444,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 401,
											"end": 444,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 401,
											"end": 444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4864,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 4746,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 4851,
											"end": 4856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 4833,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4857,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 4833,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4831,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4858,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 5092,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4870,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 4967,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5001,
											"end": 5003,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5004,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4978,
											"end": 5004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4978,
											"end": 5004,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 5082,
											"end": 5083,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5080,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5064,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 5014,
											"end": 5085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5085,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 5014,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 5092,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 5092,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 5092,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 5092,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 5092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5194,
											"end": 5203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5209,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 5212,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5378,
											"end": 5400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 5357,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5516,
											"end": 5539,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5512,
											"end": 5544,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 5547,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 5737,
											"end": 5744,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 5692,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5638,
											"end": 5755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6995,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 6760,
											"end": 6995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6900,
											"end": 6934,
											"name": "PUSH",
											"source": 6,
											"value": "536F6C6F20756E206F7267616E697A7A61746F72652070756F20657365677569"
										},
										{
											"begin": 6896,
											"end": 6897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6877,
											"end": 6935,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6969,
											"end": 6987,
											"name": "PUSH",
											"source": 6,
											"value": "72652071756573746120617A696F6E6500000000000000000000000000000000"
										},
										{
											"begin": 6964,
											"end": 6966,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6956,
											"end": 6962,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6952,
											"end": 6967,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6945,
											"end": 6988,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6995,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7367,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 7001,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7143,
											"end": 7146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7164,
											"end": 7231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 7228,
											"end": 7230,
											"name": "PUSH",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7164,
											"end": 7231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 7164,
											"end": 7231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7164,
											"end": 7231,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 7164,
											"end": 7231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7157,
											"end": 7231,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7157,
											"end": 7231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 7329,
											"end": 7332,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 7240,
											"end": 7333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7333,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 7240,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7358,
											"end": 7360,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7353,
											"end": 7356,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7367,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7367,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7373,
											"end": 7792,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 7373,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7539,
											"end": 7543,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7577,
											"end": 7579,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7566,
											"end": 7575,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7562,
											"end": 7580,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7554,
											"end": 7580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7554,
											"end": 7580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7626,
											"end": 7635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7620,
											"end": 7624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7616,
											"end": 7636,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7612,
											"end": 7613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7601,
											"end": 7610,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7597,
											"end": 7614,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7654,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 7780,
											"end": 7784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7654,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 7654,
											"end": 7785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7654,
											"end": 7785,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 7654,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7646,
											"end": 7785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7646,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7373,
											"end": 7792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7373,
											"end": 7792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7373,
											"end": 7792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7373,
											"end": 7792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7798,
											"end": 7978,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 7798,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7846,
											"end": 7923,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7843,
											"end": 7844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7924,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7943,
											"end": 7947,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 7940,
											"end": 7941,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7933,
											"end": 7948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 7971,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7964,
											"end": 7965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8394,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 7984,
											"end": 8394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8024,
											"end": 8031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8047,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 8065,
											"end": 8066,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8047,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8047,
											"end": 8067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8047,
											"end": 8067,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 8047,
											"end": 8067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 8099,
											"end": 8100,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8081,
											"end": 8101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8081,
											"end": 8101,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 8081,
											"end": 8101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8101,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8133,
											"end": 8134,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8129,
											"end": 8138,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8158,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 8176,
											"end": 8187,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8158,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8158,
											"end": 8188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8158,
											"end": 8188,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 8158,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8147,
											"end": 8188,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8147,
											"end": 8188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8337,
											"end": 8338,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8335,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8324,
											"end": 8339,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8321,
											"end": 8322,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8340,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8298,
											"end": 8299,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8291,
											"end": 8300,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8354,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8248,
											"end": 8387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 8248,
											"end": 8387,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8367,
											"end": 8385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 8367,
											"end": 8385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8367,
											"end": 8385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8367,
											"end": 8385,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 8367,
											"end": 8385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8248,
											"end": 8387,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 8248,
											"end": 8387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8032,
											"end": 8394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8394,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8400,
											"end": 8591,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 8400,
											"end": 8591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 8443,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8459,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 8477,
											"end": 8478,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8459,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8459,
											"end": 8479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8459,
											"end": 8479,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 8459,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8454,
											"end": 8479,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8454,
											"end": 8479,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8493,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 8511,
											"end": 8512,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8493,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8493,
											"end": 8513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8493,
											"end": 8513,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 8493,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8488,
											"end": 8513,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8488,
											"end": 8513,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 8537,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8534,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8529,
											"end": 8538,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8522,
											"end": 8538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8522,
											"end": 8538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8557,
											"end": 8560,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8554,
											"end": 8555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8551,
											"end": 8561,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8548,
											"end": 8584,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8548,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 8548,
											"end": 8584,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 8564,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8564,
											"end": 8582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8564,
											"end": 8582,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 8564,
											"end": 8582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8548,
											"end": 8584,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 8548,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8400,
											"end": 8591,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8400,
											"end": 8591,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8400,
											"end": 8591,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8400,
											"end": 8591,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8400,
											"end": 8591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8597,
											"end": 8826,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 8597,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8737,
											"end": 8771,
											"name": "PUSH",
											"source": 6,
											"value": "537570657261746F20696C206E756D65726F206D617373696D6F206469207061"
										},
										{
											"begin": 8733,
											"end": 8734,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8725,
											"end": 8731,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8721,
											"end": 8735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8714,
											"end": 8772,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8806,
											"end": 8818,
											"name": "PUSH",
											"source": 6,
											"value": "727465636970616E746900000000000000000000000000000000000000000000"
										},
										{
											"begin": 8801,
											"end": 8803,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8793,
											"end": 8799,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8789,
											"end": 8804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8782,
											"end": 8819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8597,
											"end": 8826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8597,
											"end": 8826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8832,
											"end": 9198,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 8832,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8974,
											"end": 8977,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8995,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 9059,
											"end": 9061,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 9054,
											"end": 9057,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 8995,
											"end": 9062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9062,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 8995,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8988,
											"end": 9062,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8988,
											"end": 9062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9071,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 9160,
											"end": 9163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9071,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 9071,
											"end": 9164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9071,
											"end": 9164,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 9071,
											"end": 9164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9189,
											"end": 9191,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9184,
											"end": 9187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9180,
											"end": 9192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9173,
											"end": 9192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9173,
											"end": 9192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8832,
											"end": 9198,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8832,
											"end": 9198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8832,
											"end": 9198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8832,
											"end": 9198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9204,
											"end": 9623,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 9204,
											"end": 9623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9370,
											"end": 9374,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9408,
											"end": 9410,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9397,
											"end": 9406,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9411,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9457,
											"end": 9466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9451,
											"end": 9455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9467,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9443,
											"end": 9444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9432,
											"end": 9441,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9428,
											"end": 9445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9421,
											"end": 9468,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9485,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 9611,
											"end": 9615,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9485,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 9485,
											"end": 9616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9485,
											"end": 9616,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 9485,
											"end": 9616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9477,
											"end": 9616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9477,
											"end": 9616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9204,
											"end": 9623,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9204,
											"end": 9623,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9204,
											"end": 9623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9204,
											"end": 9623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9629,
											"end": 9807,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 9629,
											"end": 9807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9769,
											"end": 9799,
											"name": "PUSH",
											"source": 6,
											"value": "496D706F72746F20696E766961746F206E6F6E20636F72726574746F00000000"
										},
										{
											"begin": 9765,
											"end": 9766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9763,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9753,
											"end": 9767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9746,
											"end": 9800,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9629,
											"end": 9807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9629,
											"end": 9807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9813,
											"end": 10179,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 9813,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9958,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9976,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 10040,
											"end": 10042,
											"name": "PUSH",
											"source": 6,
											"value": "1C"
										},
										{
											"begin": 10035,
											"end": 10038,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9976,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 9976,
											"end": 10043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9976,
											"end": 10043,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 9976,
											"end": 10043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9969,
											"end": 10043,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9969,
											"end": 10043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10052,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 10141,
											"end": 10144,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10052,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 10052,
											"end": 10145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10052,
											"end": 10145,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 10052,
											"end": 10145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10170,
											"end": 10172,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10165,
											"end": 10168,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10161,
											"end": 10173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10154,
											"end": 10173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10154,
											"end": 10173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9813,
											"end": 10179,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9813,
											"end": 10179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9813,
											"end": 10179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9813,
											"end": 10179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10185,
											"end": 10604,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 10185,
											"end": 10604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10351,
											"end": 10355,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10389,
											"end": 10391,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10378,
											"end": 10387,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10366,
											"end": 10392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10366,
											"end": 10392,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10438,
											"end": 10447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10432,
											"end": 10436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10428,
											"end": 10448,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10424,
											"end": 10425,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10413,
											"end": 10422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10409,
											"end": 10426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10402,
											"end": 10449,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 10592,
											"end": 10596,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 10466,
											"end": 10597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10597,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 10466,
											"end": 10597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10458,
											"end": 10597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10458,
											"end": 10597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10185,
											"end": 10604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10185,
											"end": 10604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10185,
											"end": 10604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10185,
											"end": 10604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10942,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 10610,
											"end": 10942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10731,
											"end": 10735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10769,
											"end": 10771,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10754,
											"end": 10772,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10746,
											"end": 10772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10746,
											"end": 10772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 10850,
											"end": 10851,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10839,
											"end": 10848,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 10852,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10826,
											"end": 10832,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 10782,
											"end": 10853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10863,
											"end": 10935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 10931,
											"end": 10933,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10920,
											"end": 10929,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10916,
											"end": 10934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10907,
											"end": 10913,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10863,
											"end": 10935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 10863,
											"end": 10935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10863,
											"end": 10935,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 10863,
											"end": 10935,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10942,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10942,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10948,
											"end": 11142,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 10948,
											"end": 11142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10988,
											"end": 10992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11008,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 11026,
											"end": 11027,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11008,
											"end": 11028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 11008,
											"end": 11028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11008,
											"end": 11028,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 11008,
											"end": 11028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11003,
											"end": 11028,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11003,
											"end": 11028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11042,
											"end": 11062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 11060,
											"end": 11061,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11042,
											"end": 11062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 11042,
											"end": 11062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11042,
											"end": 11062,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 11042,
											"end": 11062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11037,
											"end": 11062,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11037,
											"end": 11062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11086,
											"end": 11087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11083,
											"end": 11084,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11079,
											"end": 11088,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11071,
											"end": 11088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11071,
											"end": 11088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11110,
											"end": 11111,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11104,
											"end": 11108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11101,
											"end": 11112,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11098,
											"end": 11135,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11098,
											"end": 11135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 11098,
											"end": 11135,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11115,
											"end": 11133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 11115,
											"end": 11133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 11115,
											"end": 11133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11115,
											"end": 11133,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 11115,
											"end": 11133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11098,
											"end": 11135,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 11098,
											"end": 11135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10948,
											"end": 11142,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10948,
											"end": 11142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10948,
											"end": 11142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10948,
											"end": 11142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10948,
											"end": 11142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11148,
											"end": 11320,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 11148,
											"end": 11320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11288,
											"end": 11312,
											"name": "PUSH",
											"source": 6,
											"value": "4E657373756E20746F6B656E20706F7373656475746F00000000000000000000"
										},
										{
											"begin": 11284,
											"end": 11285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11276,
											"end": 11282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11272,
											"end": 11286,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11265,
											"end": 11313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11148,
											"end": 11320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11148,
											"end": 11320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11692,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 11326,
											"end": 11692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11468,
											"end": 11471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11489,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 11553,
											"end": 11555,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 11548,
											"end": 11551,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11489,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 11489,
											"end": 11556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11489,
											"end": 11556,
											"name": "tag",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 11489,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11482,
											"end": 11556,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11482,
											"end": 11556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11565,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 11654,
											"end": 11657,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11565,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 11565,
											"end": 11658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11565,
											"end": 11658,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 11565,
											"end": 11658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11683,
											"end": 11685,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11678,
											"end": 11681,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11674,
											"end": 11686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11667,
											"end": 11686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11667,
											"end": 11686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11692,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11698,
											"end": 12117,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 11698,
											"end": 12117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11864,
											"end": 11868,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11902,
											"end": 11904,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11891,
											"end": 11900,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11887,
											"end": 11905,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11879,
											"end": 11905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11879,
											"end": 11905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11951,
											"end": 11960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11945,
											"end": 11949,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11941,
											"end": 11961,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11937,
											"end": 11938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11926,
											"end": 11935,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11922,
											"end": 11939,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11915,
											"end": 11962,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11979,
											"end": 12110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 12105,
											"end": 12109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11979,
											"end": 12110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 11979,
											"end": 12110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11979,
											"end": 12110,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 11979,
											"end": 12110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12110,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 12110,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11698,
											"end": 12117,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11698,
											"end": 12117,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11698,
											"end": 12117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11698,
											"end": 12117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12123,
											"end": 12289,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 12123,
											"end": 12289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12263,
											"end": 12281,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E207574696C697A7A61746F00000000000000000000000000000000"
										},
										{
											"begin": 12259,
											"end": 12260,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12251,
											"end": 12257,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12247,
											"end": 12261,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12240,
											"end": 12282,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12123,
											"end": 12289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12123,
											"end": 12289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12295,
											"end": 12661,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 12295,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12437,
											"end": 12440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12458,
											"end": 12525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 12522,
											"end": 12524,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 12517,
											"end": 12520,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12458,
											"end": 12525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 12458,
											"end": 12525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12458,
											"end": 12525,
											"name": "tag",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 12458,
											"end": 12525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12451,
											"end": 12525,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12451,
											"end": 12525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12534,
											"end": 12627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 12623,
											"end": 12626,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12534,
											"end": 12627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 12534,
											"end": 12627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12534,
											"end": 12627,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 12534,
											"end": 12627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12652,
											"end": 12654,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12647,
											"end": 12650,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12643,
											"end": 12655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12636,
											"end": 12655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12636,
											"end": 12655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12295,
											"end": 12661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12295,
											"end": 12661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12295,
											"end": 12661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12295,
											"end": 12661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12667,
											"end": 13086,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 12667,
											"end": 13086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12833,
											"end": 12837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12871,
											"end": 12873,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12860,
											"end": 12869,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12856,
											"end": 12874,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12848,
											"end": 12874,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12848,
											"end": 12874,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12920,
											"end": 12929,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12914,
											"end": 12918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12910,
											"end": 12930,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12906,
											"end": 12907,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12895,
											"end": 12904,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12891,
											"end": 12908,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12884,
											"end": 12931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12948,
											"end": 13079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 13074,
											"end": 13078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12948,
											"end": 13079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 12948,
											"end": 13079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12948,
											"end": 13079,
											"name": "tag",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 12948,
											"end": 13079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12940,
											"end": 13079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12940,
											"end": 13079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12667,
											"end": 13086,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12667,
											"end": 13086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12667,
											"end": 13086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12667,
											"end": 13086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13092,
											"end": 13263,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 13092,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13131,
											"end": 13134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13154,
											"end": 13178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 13172,
											"end": 13177,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13154,
											"end": 13178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 13154,
											"end": 13178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13154,
											"end": 13178,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 13154,
											"end": 13178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13145,
											"end": 13178,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13145,
											"end": 13178,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13200,
											"end": 13204,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13193,
											"end": 13198,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13190,
											"end": 13205,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13208,
											"end": 13226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 13208,
											"end": 13226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 13208,
											"end": 13226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13208,
											"end": 13226,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 13208,
											"end": 13226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13255,
											"end": 13256,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13248,
											"end": 13253,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13244,
											"end": 13257,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13237,
											"end": 13257,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13237,
											"end": 13257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13092,
											"end": 13263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13092,
											"end": 13263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13092,
											"end": 13263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13092,
											"end": 13263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13269,
											"end": 13711,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 13269,
											"end": 13711,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13418,
											"end": 13422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13456,
											"end": 13458,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 13445,
											"end": 13454,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13441,
											"end": 13459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13433,
											"end": 13459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13433,
											"end": 13459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13469,
											"end": 13540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 13537,
											"end": 13538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13526,
											"end": 13535,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13522,
											"end": 13539,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13513,
											"end": 13519,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13469,
											"end": 13540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 13469,
											"end": 13540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13469,
											"end": 13540,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 13469,
											"end": 13540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13550,
											"end": 13622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 13618,
											"end": 13620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13607,
											"end": 13616,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13603,
											"end": 13621,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13594,
											"end": 13600,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13550,
											"end": 13622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 13550,
											"end": 13622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13550,
											"end": 13622,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 13550,
											"end": 13622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13632,
											"end": 13704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 13700,
											"end": 13702,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13689,
											"end": 13698,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13685,
											"end": 13703,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13676,
											"end": 13682,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13632,
											"end": 13704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 13632,
											"end": 13704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13632,
											"end": 13704,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 13632,
											"end": 13704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13269,
											"end": 13711,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 13269,
											"end": 13711,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13269,
											"end": 13711,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13269,
											"end": 13711,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13269,
											"end": 13711,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13269,
											"end": 13711,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13269,
											"end": 13711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/ExclusivePassToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getAvailableSeats()": "906d895d",
							"getTicketsSold()": "520198a8",
							"getTotalAccumulated()": "5a4dc09f",
							"hasAttended(address)": "d866b0b6",
							"maxAttendees()": "5f3d7fa1",
							"name()": "06fdde03",
							"organizer()": "61203265",
							"purchaseTokens(uint256)": "7b97008d",
							"recordAttendance()": "9b13b20e",
							"symbol()": "95d89b41",
							"tokenPrice()": "7ff9b596",
							"totalAttendees()": "0a5d288c",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"updateTokenPrice(uint256)": "676c0d77",
							"withdrawFunds()": "24600fc3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_maxAttendees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attendee\",\"type\":\"address\"}],\"name\":\"AttendanceRecorded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"PriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalPrice\",\"type\":\"uint256\"}],\"name\":\"TokenPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAvailableSeats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTicketsSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalAccumulated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasAttended\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAttendees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"organizer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"purchaseTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordAttendance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAttendees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"updateTokenPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ExclusivePassToken.sol\":\"ExclusivePassToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/ExclusivePassToken.sol\":{\"keccak256\":\"0x0b61f6911a07e0f93b4724763f679f93e2079e8f24fa4ae5ae2cf06f4b884fae\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://91c0e581a25c7a7f7149a28c3d8cc6930c1ac3dd37c62e8e0daca61ab27fced0\",\"dweb:/ipfs/QmcQPvCZpFFwWxNM11XkUpxxydKMgLXwBsxjvEzLbsgKad\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/ExclusivePassToken.sol:ExclusivePassToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/ExclusivePassToken.sol:ExclusivePassToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/ExclusivePassToken.sol:ExclusivePassToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/ExclusivePassToken.sol:ExclusivePassToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/ExclusivePassToken.sol:ExclusivePassToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 792,
								"contract": "contracts/ExclusivePassToken.sol:ExclusivePassToken",
								"label": "organizer",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 794,
								"contract": "contracts/ExclusivePassToken.sol:ExclusivePassToken",
								"label": "maxAttendees",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 796,
								"contract": "contracts/ExclusivePassToken.sol:ExclusivePassToken",
								"label": "totalAttendees",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 798,
								"contract": "contracts/ExclusivePassToken.sol:ExclusivePassToken",
								"label": "tokenPrice",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 802,
								"contract": "contracts/ExclusivePassToken.sol:ExclusivePassToken",
								"label": "hasAttended",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/ExclusivePassToken.sol": {
				"ast": {
					"absolutePath": "contracts/ExclusivePassToken.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"ExclusivePassToken": [
							1013
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 1014,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1014,
							"sourceUnit": 652,
							"src": "67:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 789,
										"name": "ERC20",
										"nameLocations": [
											"157:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "157:5:5"
									},
									"id": 790,
									"nodeType": "InheritanceSpecifier",
									"src": "157:5:5"
								}
							],
							"canonicalName": "ExclusivePassToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1013,
							"linearizedBaseContracts": [
								1013,
								651,
								41,
								755,
								729,
								785
							],
							"name": "ExclusivePassToken",
							"nameLocation": "135:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "61203265",
									"id": 792,
									"mutability": "mutable",
									"name": "organizer",
									"nameLocation": "185:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1013,
									"src": "170:24:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 791,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "170:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f3d7fa1",
									"id": 794,
									"mutability": "mutable",
									"name": "maxAttendees",
									"nameLocation": "216:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1013,
									"src": "201:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 793,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "201:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0a5d288c",
									"id": 796,
									"mutability": "mutable",
									"name": "totalAttendees",
									"nameLocation": "250:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1013,
									"src": "235:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 795,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "235:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7ff9b596",
									"id": 798,
									"mutability": "mutable",
									"name": "tokenPrice",
									"nameLocation": "286:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1013,
									"src": "271:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 797,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "271:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d866b0b6",
									"id": 802,
									"mutability": "mutable",
									"name": "hasAttended",
									"nameLocation": "433:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1013,
									"src": "401:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 801,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 799,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "409:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "401:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 800,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "420:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "3ceffd410054fdaed44f598ff5c1fb450658778e2241892da4aa646979dee617",
									"id": 810,
									"name": "TokenPurchased",
									"nameLocation": "459:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "490:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "474:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "505:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "497:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "497:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalPrice",
												"nameLocation": "521:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "513:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "473:59:5"
									},
									"src": "453:80:5"
								},
								{
									"anonymous": false,
									"eventSelector": "316d1ea3d1525e2bff370eb30cae16e7a334c48bb414303791bc219776e2cc26",
									"id": 814,
									"name": "AttendanceRecorded",
									"nameLocation": "545:18:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"indexed": true,
												"mutability": "mutable",
												"name": "attendee",
												"nameLocation": "580:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "564:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "564:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "563:26:5"
									},
									"src": "539:51:5"
								},
								{
									"anonymous": false,
									"eventSelector": "66cbca4f3c64fecf1dcb9ce094abcf7f68c3450a1d4e3a8e917dd621edb4ebe0",
									"id": 818,
									"name": "PriceUpdated",
									"nameLocation": "602:12:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"indexed": false,
												"mutability": "mutable",
												"name": "newPrice",
												"nameLocation": "623:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "615:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:18:5"
									},
									"src": "596:37:5"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "806:115:5",
										"statements": [
											{
												"expression": {
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 833,
														"name": "organizer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "817:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 834,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "829:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "833:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "829:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "817:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "817:22:5"
											},
											{
												"expression": {
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 838,
														"name": "maxAttendees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "850:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 839,
														"name": "_maxAttendees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "865:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "850:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "850:28:5"
											},
											{
												"expression": {
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 842,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "889:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 843,
														"name": "_tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "902:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "889:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "889:24:5"
											}
										]
									},
									"id": 847,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 829,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "790:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 830,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 822,
													"src": "797:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 831,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 828,
												"name": "ERC20",
												"nameLocations": [
													"784:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "784:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "784:21:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "677:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "663:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 819,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "663:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "707:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "693:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 821,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "_maxAttendees",
												"nameLocation": "733:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "725:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "_tokenPrice",
												"nameLocation": "765:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "757:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "652:131:5"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "806:0:5"
									},
									"scope": 1013,
									"src": "641:280:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "1012:115:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 850,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1031:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1035:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1031:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 852,
																"name": "organizer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "1045:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1031:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536f6c6f20756e206f7267616e697a7a61746f72652070756f2065736567756972652071756573746120617a696f6e65",
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1056:50:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27c49403adc40fe0f856a373524ee3f36e7d19d61bc3f92604bc3fdbbb48c4f5",
																"typeString": "literal_string \"Solo un organizzatore puo eseguire questa azione\""
															},
															"value": "Solo un organizzatore puo eseguire questa azione"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_27c49403adc40fe0f856a373524ee3f36e7d19d61bc3f92604bc3fdbbb48c4f5",
																"typeString": "literal_string \"Solo un organizzatore puo eseguire questa azione\""
															}
														],
														"id": 849,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1023:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:84:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "1023:84:5"
											},
											{
												"id": 857,
												"nodeType": "PlaceholderStatement",
												"src": "1118:1:5"
											}
										]
									},
									"id": 859,
									"name": "onlyOrganizer",
									"nameLocation": "996:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:2:5"
									},
									"src": "987:140:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "1265:80:5",
										"statements": [
											{
												"expression": {
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 866,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1276:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 867,
														"name": "_newPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "1289:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1276:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "1276:22:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 871,
															"name": "_newPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "1327:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 870,
														"name": "PriceUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "1314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1314:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "EmitStatement",
												"src": "1309:28:5"
											}
										]
									},
									"functionSelector": "676c0d77",
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 864,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 863,
												"name": "onlyOrganizer",
												"nameLocations": [
													"1251:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "1251:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1251:13:5"
										}
									],
									"name": "updateTokenPrice",
									"nameLocation": "1206:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "_newPrice",
												"nameLocation": "1231:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "1223:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:19:5"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1265:0:5"
									},
									"scope": 1013,
									"src": "1197:148:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1456:380:5",
										"statements": [
											{
												"assignments": [
													881
												],
												"declarations": [
													{
														"constant": false,
														"id": 881,
														"mutability": "mutable",
														"name": "totalPrice",
														"nameLocation": "1475:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 921,
														"src": "1467:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 880,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1467:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 885,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 882,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "1488:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 883,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1498:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1488:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1467:41:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 887,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "1527:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1527:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 889,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "1543:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1527:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 891,
																"name": "maxAttendees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "1554:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1527:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537570657261746f20696c206e756d65726f206d617373696d6f206469207061727465636970616e7469",
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1568:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_927e9bae9db212268b760267d73ae19086f86260fc0b99fc43ef3200201f00fd",
																"typeString": "literal_string \"Superato il numero massimo di partecipanti\""
															},
															"value": "Superato il numero massimo di partecipanti"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_927e9bae9db212268b760267d73ae19086f86260fc0b99fc43ef3200201f00fd",
																"typeString": "literal_string \"Superato il numero massimo di partecipanti\""
															}
														],
														"id": 886,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1519:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1519:94:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "1519:94:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 897,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1632:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1636:5:5",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1632:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 899,
																"name": "totalPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "1645:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1632:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496d706f72746f20696e766961746f206e6f6e20636f72726574746f",
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1657:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_784abb4172389cad1df52f00030b4dad397b2e4d004fc59fa41f872190258fa4",
																"typeString": "literal_string \"Importo inviato non corretto\""
															},
															"value": "Importo inviato non corretto"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_784abb4172389cad1df52f00030b4dad397b2e4d004fc59fa41f872190258fa4",
																"typeString": "literal_string \"Importo inviato non corretto\""
															}
														],
														"id": 896,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1624:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1624:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "1624:64:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 905,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1707:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1711:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1707:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 907,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "1719:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 904,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1701:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1701:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "1701:26:5"
											},
											{
												"expression": {
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 910,
														"name": "totalAttendees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "1738:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 911,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "1756:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1738:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "1738:25:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 915,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1796:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1800:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1796:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 917,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "1808:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 918,
															"name": "totalPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "1817:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 914,
														"name": "TokenPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "1781:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1781:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "EmitStatement",
												"src": "1776:52:5"
											}
										]
									},
									"functionSelector": "7b97008d",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "purchaseTokens",
									"nameLocation": "1407:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1430:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1422:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1422:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1421:17:5"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1456:0:5"
									},
									"scope": 1013,
									"src": "1398:438:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "1934:294:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 927,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1963:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1967:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1963:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 926,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "1953:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1953:21:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1977:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1953:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e657373756e20746f6b656e20706f7373656475746f",
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1980:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50a758898a4b38e6b10f630a2548014d4902e892601e32f381a8c9cbb33c80a5",
																"typeString": "literal_string \"Nessun token posseduto\""
															},
															"value": "Nessun token posseduto"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50a758898a4b38e6b10f630a2548014d4902e892601e32f381a8c9cbb33c80a5",
																"typeString": "literal_string \"Nessun token posseduto\""
															}
														],
														"id": 925,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1945:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1945:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "1945:60:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2024:24:5",
															"subExpression": {
																"baseExpression": {
																	"id": 936,
																	"name": "hasAttended",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "2025:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 939,
																"indexExpression": {
																	"expression": {
																		"id": 937,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2037:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2041:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2037:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2025:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207574696c697a7a61746f",
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2050:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5999effb3dc573f58face8177a8dfbe7b2b4e361623f526c53749ef21323fef1",
																"typeString": "literal_string \"Token utilizzato\""
															},
															"value": "Token utilizzato"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5999effb3dc573f58face8177a8dfbe7b2b4e361623f526c53749ef21323fef1",
																"typeString": "literal_string \"Token utilizzato\""
															}
														],
														"id": 935,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2016:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2016:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "2016:53:5"
											},
											{
												"expression": {
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 944,
															"name": "hasAttended",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "2082:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 947,
														"indexExpression": {
															"expression": {
																"id": 945,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2094:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2098:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2094:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2082:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2108:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2082:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "2082:30:5"
											},
											{
												"expression": {
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "2123:16:5",
													"subExpression": {
														"id": 951,
														"name": "totalAttendees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "2123:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "2123:16:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 955,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2158:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2162:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2158:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2170:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 954,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "2152:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2152:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "2152:20:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 961,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2209:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2213:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2209:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 960,
														"name": "AttendanceRecorded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "2190:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2190:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "EmitStatement",
												"src": "2185:35:5"
											}
										]
									},
									"functionSelector": "9b13b20e",
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recordAttendance",
									"nameLocation": "1906:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1922:2:5"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1934:0:5"
									},
									"scope": 1013,
									"src": "1897:331:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "2349:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 978,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2396:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ExclusivePassToken_$1013",
																			"typeString": "contract ExclusivePassToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ExclusivePassToken_$1013",
																			"typeString": "contract ExclusivePassToken"
																		}
																	],
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2388:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 976,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2388:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2388:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2402:7:5",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2388:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 973,
																	"name": "organizer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "2368:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2360:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 971,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2360:8:5",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2360:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2379:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2360:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2360:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "2360:50:5"
											}
										]
									},
									"functionSelector": "24600fc3",
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 969,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 968,
												"name": "onlyOrganizer",
												"nameLocations": [
													"2335:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "2335:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2335:13:5"
										}
									],
									"name": "withdrawFunds",
									"nameLocation": "2310:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2323:2:5"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2349:0:5"
									},
									"scope": 1013,
									"src": "2301:117:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "2541:55:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 989,
														"name": "maxAttendees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "2559:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 990,
														"name": "totalAttendees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "2574:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2559:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 988,
												"id": 992,
												"nodeType": "Return",
												"src": "2552:36:5"
											}
										]
									},
									"functionSelector": "906d895d",
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAvailableSeats",
									"nameLocation": "2489:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2506:2:5"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "2532:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2532:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2531:9:5"
									},
									"scope": 1013,
									"src": "2480:116:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "2713:40:5",
										"statements": [
											{
												"expression": {
													"id": 999,
													"name": "totalAttendees",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 796,
													"src": "2731:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 998,
												"id": 1000,
												"nodeType": "Return",
												"src": "2724:21:5"
											}
										]
									},
									"functionSelector": "520198a8",
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTicketsSold",
									"nameLocation": "2664:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:5"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "2704:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:5"
									},
									"scope": 1013,
									"src": "2655:98:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "2877:53:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1007,
														"name": "totalAttendees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "2895:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1008,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "2912:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2895:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1006,
												"id": 1010,
												"nodeType": "Return",
												"src": "2888:34:5"
											}
										]
									},
									"functionSelector": "5a4dc09f",
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalAccumulated",
									"nameLocation": "2823:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2842:2:5"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "2868:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2867:9:5"
									},
									"scope": 1013,
									"src": "2814:116:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1014,
							"src": "126:2807:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672,
								810,
								814,
								818
							]
						}
					],
					"src": "40:2893:5"
				},
				"id": 5
			}
		}
	}
}