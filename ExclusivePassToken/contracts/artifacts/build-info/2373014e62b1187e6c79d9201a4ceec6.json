{
	"id": "2373014e62b1187e6c79d9201a4ceec6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/OpenZeppelinPresetContracts.sol": {
				"content": "pragma solidity ^0.6.2;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\";"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../access/AccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../token/ERC20/ERC20.sol\";\nimport \"../token/ERC20/ERC20Burnable.sol\";\nimport \"../token/ERC20/ERC20Pausable.sol\";\n\n/**\n * @dev {ERC20} token, including:\n *\n *  - ability for holders to burn (destroy) their tokens\n *  - a minter role that allows for token minting (creation)\n *  - a pauser role that allows to stop all token transfers\n *\n * This contract uses {AccessControl} to lock permissioned functions using the\n * different roles - head to its documentation for details.\n *\n * The account that deploys the contract will be granted the minter and pauser\n * roles, as well as the default admin role, which will let it grant both minter\n * and pauser roles to other accounts.\n */\ncontract ERC20PresetMinterPauser is Context, AccessControl, ERC20Burnable, ERC20Pausable {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n    /**\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n     * account that deploys the contract.\n     *\n     * See {ERC20-constructor}.\n     */\n    constructor(string memory name, string memory symbol) public ERC20(name, symbol) {\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n\n        _setupRole(MINTER_ROLE, _msgSender());\n        _setupRole(PAUSER_ROLE, _msgSender());\n    }\n\n    /**\n     * @dev Creates `amount` new tokens for `to`.\n     *\n     * See {ERC20-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `MINTER_ROLE`.\n     */\n    function mint(address to, uint256 amount) public virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have minter role to mint\");\n        _mint(to, amount);\n    }\n\n    /**\n     * @dev Pauses all token transfers.\n     *\n     * See {ERC20Pausable} and {Pausable-_pause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function pause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have pauser role to pause\");\n        _pause();\n    }\n\n    /**\n     * @dev Unpauses all token transfers.\n     *\n     * See {ERC20Pausable} and {Pausable-_unpause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function unpause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have pauser role to unpause\");\n        _unpause();\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override(ERC20, ERC20Pausable) {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./ERC20.sol\";\nimport \"../../utils/Pausable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_beforeTokenTransfer}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {\n        super._beforeTokenTransfer(from, to, amount);\n\n        require(!paused(), \"ERC20Pausable: token transfer while paused\");\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../../utils/Context.sol\";\nimport \"./ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    using SafeMath for uint256;\n\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\");\n\n        _approve(account, _msgSender(), decreasedAllowance);\n        _burn(account, amount);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../../utils/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal virtual {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/EnumerableSet.sol\";\nimport \"../utils/Address.sol\";\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context {\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using Address for address;\n\n    struct RoleData {\n        EnumerableSet.AddressSet members;\n        bytes32 adminRole;\n    }\n\n    mapping (bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view returns (bool) {\n        return _roles[role].members.contains(account);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\n        return _roles[role].members.length();\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\n        return _roles[role].members.at(index);\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual {\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to grant\");\n\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual {\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to revoke\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\n        _roles[role].adminRole = adminRole;\n    }\n\n    function _grantRole(bytes32 role, address account) private {\n        if (_roles[role].members.add(account)) {\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    function _revokeRole(bytes32 role, address account) private {\n        if (_roles[role].members.remove(account)) {\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor () internal {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping (bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\n\n            bytes32 lastvalue = set._values[lastIndex];\n\n            // Move the last value to the index where the value to delete is\n            set._values[toDeleteIndex] = lastvalue;\n            // Update the index for the moved value\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        require(set._values.length > index, \"EnumerableSet: index out of bounds\");\n        return set._values[index];\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x4fc155a2f7837603d69a13cfa481eb5e7f5e02cb77e2ec9edbac30986db37988\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0855147e38b5e36288a8df73b8da49132f14ec7abb19041b0c98872263643aaa\",\"dweb:/ipfs/QmSrSysyFUYQq7hbJaJXG7EyZW6ezDBzEJx3SABp6eiJSS\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)2048_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 2047,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol:AccessControl",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1783_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)2048_storage"
									},
									{
										"astId": 20,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Set)1783_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1778,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol:AccessControl",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1782,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol:AccessControl",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fa549771beb7cb323738fe629acc5936b555826ac27c122d71ff998350917db664736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fa549771beb7cb323738fe629acc5936b555826ac27c122d71ff998350917db664736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL SLOAD SWAP8 PUSH18 0xBEB7CB323738FE629ACC5936B555826AC27C SLT 0x2D PUSH18 0xFF998350917DB664736F6C634300060C0033 ",
							"sourceMap": "630:6594:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fa549771beb7cb323738fe629acc5936b555826ac27c122d71ff998350917db664736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL SLOAD SWAP8 PUSH18 0xBEB7CB323738FE629ACC5936B555826AC27C SLT 0x2D PUSH18 0xFF998350917DB664736F6C634300060C0033 ",
							"sourceMap": "630:6594:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fa549771beb7cb323738fe629acc5936b555826ac27c122d71ff998350917db664736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol": {
				"ERC20PresetMinterPauser": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "{ERC20} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"constructor": {
								"details": "Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. See {ERC20-constructor}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(address,uint256)": {
								"details": "Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"pause()": {
								"details": "Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"unpause()": {
								"details": "Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":824:2804  contract ERC20PresetMinterPauser is Context, AccessControl, ERC20Burnable, ERC20Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1233:1470  constructor(string memory name, string memory symbol) public ERC20(name, symbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1300:1304  name */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1306:1312  symbol */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2040:2045  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2032:2037  _name */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2065:2072  symbol_ */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2055:2062  _symbol */\n  0x05\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_23\n  swap3\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_23:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2094:2096  18 */\n  0x12\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2082:2091  _decimals */\n  0x06\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":945:950  false */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":935:942  _paused */\n  0x06\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":935:950  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1324:1368  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  tag_26\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":1772:1776  0x00 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1335:1353  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1355:1367  _msgSender() */\n  tag_27\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1355:1365  _msgSender */\n  shl(0x20, tag_28)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1355:1367  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1324:1334  _setupRole */\n  shl(0x20, tag_29)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1324:1368  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1379:1416  _setupRole(MINTER_ROLE, _msgSender()) */\n  tag_30\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":957:981  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1403:1415  _msgSender() */\n  tag_31\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1403:1413  _msgSender */\n  shl(0x20, tag_28)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1403:1415  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1379:1389  _setupRole */\n  shl(0x20, tag_29)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1379:1416  _setupRole(MINTER_ROLE, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1426:1463  _setupRole(PAUSER_ROLE, _msgSender()) */\n  tag_32\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1025:1049  keccak256(\"PAUSER_ROLE\") */\n  0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1450:1462  _msgSender() */\n  tag_33\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1450:1460  _msgSender */\n  shl(0x20, tag_28)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1450:1462  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_33:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1426:1436  _setupRole */\n  shl(0x20, tag_29)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1426:1463  _setupRole(PAUSER_ROLE, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1233:1470  constructor(string memory name, string memory symbol) public ERC20(name, symbol) {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":824:2804  contract ERC20PresetMinterPauser is Context, AccessControl, ERC20Burnable, ERC20Pausable {... */\n  jump(tag_34)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_28:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":651:666  address payable */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":685:695  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":678:695  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":6588:6698  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_29:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":6666:6691  _grantRole(role, account) */\n  tag_37\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":6677:6681  role */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":6683:6690  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":6666:6676  _grantRole */\n  shl(0x20, tag_38)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":6666:6691  _grantRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":6588:6698  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7025:7209  function _grantRole(bytes32 role, address account) private {... */\ntag_38:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7098:7131  _roles[role].members.add(account) */\n  tag_40\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7123:7130  account */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7098:7104  _roles */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7098:7110  _roles[role] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7105:7109  role */\n  dup6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7098:7110  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7098:7118  _roles[role].members */\n  0x00\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7098:7122  _roles[role].members.add */\n  or(tag_0_115, shl(0x20, tag_41))\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7098:7131  _roles[role].members.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_40:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7094:7203  if (_roles[role].members.add(account)) {... */\n  iszero\n  tag_42\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7179:7191  _msgSender() */\n  tag_43\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7179:7189  _msgSender */\n  shl(0x20, tag_28)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7179:7191  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_43:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7170:7177  account */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7164:7168  role */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7094:7203  if (_roles[role].members.add(account)) {... */\ntag_42:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7025:7209  function _grantRole(bytes32 role, address account) private {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6429:6579  function add(AddressSet storage set, address value) internal returns (bool) {... */\ntag_41:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6499:6503  bool */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6522:6572  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  tag_45\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6527:6530  set */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6527:6537  set._inner */\n  0x00\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6563:6568  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6547:6570  uint256(uint160(value)) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6539:6571  bytes32(uint256(uint160(value))) */\n  0x00\n  shl\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6522:6526  _add */\n  shl(0x20, tag_46)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6522:6572  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  0x20\n  shr\n  jump\t// in\ntag_45:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6515:6572  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6429:6579  function add(AddressSet storage set, address value) internal returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1640:2044  function _add(Set storage set, bytes32 value) private returns (bool) {... */\ntag_46:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1703:1707  bool */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1724:1745  _contains(set, value) */\n  tag_48\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1734:1737  set */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1739:1744  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1724:1733  _contains */\n  shl(0x20, tag_49)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1724:1745  _contains(set, value) */\n  0x20\n  shr\n  jump\t// in\ntag_48:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1719:2038  if (!_contains(set, value)) {... */\n  tag_50\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1761:1764  set */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1761:1772  set._values */\n  0x00\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1778:1783  value */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1761:1784  set._values.push(value) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  sstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1941:1944  set */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1941:1952  set._values */\n  0x00\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1941:1959  set._values.length */\n  dup1\n  sload\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1919:1922  set */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1919:1931  set._indexes */\n  0x01\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1919:1938  set._indexes[value] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1932:1937  value */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1919:1938  set._indexes[value] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1919:1959  set._indexes[value] = set._values.length */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1980:1984  true */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1973:1984  return true */\n  swap1\n  pop\n  jump(tag_47)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1719:2038  if (!_contains(set, value)) {... */\ntag_50:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2022:2027  false */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2015:2027  return false */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1640:2044  function _add(Set storage set, bytes32 value) private returns (bool) {... */\ntag_47:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3805:3932  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\ntag_49:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3878:3882  bool */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3924:3925  0 */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3901:3904  set */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3901:3913  set._indexes */\n  0x01\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3901:3920  set._indexes[value] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3914:3919  value */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3901:3920  set._indexes[value] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3901:3925  set._indexes[value] != 0 */\n  eq\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3894:3925  return set._indexes[value] != 0 */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3805:3932  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":824:2804  contract ERC20PresetMinterPauser is Context, AccessControl, ERC20Burnable, ERC20Pausable {... */\ntag_22:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_55\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_54)\ntag_55:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_54\n  jumpi\n  swap2\n  dup3\n  add\ntag_56:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_57\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_56)\ntag_57:\ntag_54:\n  pop\n  swap1\n  pop\n  tag_58\n  swap2\n  swap1\n  tag_59\n  jump\t// in\ntag_58:\n  pop\n  swap1\n  jump\t// out\ntag_59:\ntag_60:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_61\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_60)\ntag_61:\n  pop\n  swap1\n  jump\t// out\ntag_34:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":824:2804  contract ERC20PresetMinterPauser is Context, AccessControl, ERC20Burnable, ERC20Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xd5391393\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xa457c2d7\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xca15c873\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x9010d07c\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x9010d07c\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x313ce567\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x3f4ba83a\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_38:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_38)\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_41\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_41:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4282:4394  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n    tag_7:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4644:4867  function grantRole(bytes32 role, address account) public virtual {... */\n    tag_8:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5818:6023  function renounceRole(bytes32 role, address account) public virtual {... */\n    tag_10:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2440:2615  function unpause() public virtual {... */\n    tag_12:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1659:1861  function mint(address to, uint256 amount) public virtual {... */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":524:613  function burn(uint256 amount) public virtual {... */\n    tag_14:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1052:1136  function paused() public view virtual returns (bool) {... */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_16:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":919:1209  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2064:2233  function pause() public virtual {... */\n    tag_18:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3965:4101  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n    tag_19:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":2950:3087  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n    tag_20:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_21:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_90:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_92\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_90)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_93:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":1727:1776  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_22:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_23:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_24:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3255:3380  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n    tag_25:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_104\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":919:981  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_26:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5101:5327  function revokeRole(bytes32 role, address account) public virtual {... */\n    tag_27:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_109\n      jump\t// in\n    tag_107:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_28:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_112\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":987:1049  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_29:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2213:2226  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_117\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_118\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_117)\n    tag_118:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_119:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_119\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4327:4331  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      tag_121\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4352:4362  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4366:4373  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4375:4381  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4343:4351  _approve */\n      tag_124\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_121:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4399:4403  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4392:4403  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_46:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3296:3303  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3322:3334  _totalSupply */\n      sload(0x03)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3315:3334  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_49:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4983:4987  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      tag_127\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5009:5015  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5017:5026  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5028:5034  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4999:5008  _transfer */\n      tag_128\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_127:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_129\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5054:5060  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      tag_130\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5062:5072  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_131\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5114:5120  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5076:5087  _allowances */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5088:5094  sender */\n      dup12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      tag_132\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5096:5106  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5076:5113  _allowances[sender][_msgSender()].sub */\n      tag_133\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_131:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5045:5053  _approve */\n      tag_124\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_129:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5183:5187  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5176:5187  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4282:4394  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4339:4346  bytes32 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4365:4371  _roles */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4365:4377  _roles[role] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4372:4376  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4365:4377  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4365:4387  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4358:4387  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4282:4394  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4644:4867  function grantRole(bytes32 role, address account) public virtual {... */\n    tag_55:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4727:4772  hasRole(_roles[role].adminRole, _msgSender()) */\n      tag_136\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4735:4741  _roles */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4735:4747  _roles[role] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4742:4746  role */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4735:4747  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4735:4757  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4759:4771  _msgSender() */\n      tag_137\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4759:4769  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4759:4771  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4727:4734  hasRole */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4727:4772  hasRole(_roles[role].adminRole, _msgSender()) */\n      jump\t// in\n    tag_136:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4719:4824  require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to grant\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4835:4860  _grantRole(role, account) */\n      tag_139\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4846:4850  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4852:4859  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4835:4845  _grantRole */\n      tag_140\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4835:4860  _grantRole(role, account) */\n      jump\t// in\n    tag_139:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4644:4867  function grantRole(bytes32 role, address account) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3135:3140  uint8 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3159:3168  _decimals */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3152:3168  return _decimals */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5818:6023  function renounceRole(bytes32 role, address account) public virtual {... */\n    tag_60:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5915:5927  _msgSender() */\n      tag_143\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5915:5925  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5915:5927  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5904:5927  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5904:5911  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5904:5927  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5896:5979  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5990:6016  _revokeRole(role, account) */\n      tag_145\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":6002:6006  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":6008:6015  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5990:6001  _revokeRole */\n      tag_146\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5990:6016  _revokeRole(role, account) */\n      jump\t// in\n    tag_145:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5818:6023  function renounceRole(bytes32 role, address account) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_63:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5677:5681  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_148\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      tag_149\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5702:5712  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5716:5723  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_150\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5764:5774  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5725:5736  _allowances */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      tag_151\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5737:5747  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5751:5758  spender */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5725:5763  _allowances[_msgSender()][spender].add */\n      tag_152\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5693:5701  _approve */\n      tag_124\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_148:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5793:5797  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5786:5797  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2440:2615  function unpause() public virtual {... */\n    tag_65:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2492:2526  hasRole(PAUSER_ROLE, _msgSender()) */\n      tag_154\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1025:1049  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2513:2525  _msgSender() */\n      tag_155\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2513:2523  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2513:2525  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2492:2499  hasRole */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2492:2526  hasRole(PAUSER_ROLE, _msgSender()) */\n      jump\t// in\n    tag_154:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2484:2588  require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have pauser role to unpause\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x39\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186\n      0x39\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2598:2608  _unpause() */\n      tag_157\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2598:2606  _unpause */\n      tag_158\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2598:2608  _unpause() */\n      jump\t// in\n    tag_157:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2440:2615  function unpause() public virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1659:1861  function mint(address to, uint256 amount) public virtual {... */\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1734:1768  hasRole(MINTER_ROLE, _msgSender()) */\n      tag_160\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":957:981  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1755:1767  _msgSender() */\n      tag_161\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1755:1765  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1755:1767  _msgSender() */\n      jump\t// in\n    tag_161:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1734:1741  hasRole */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1734:1768  hasRole(MINTER_ROLE, _msgSender()) */\n      jump\t// in\n    tag_160:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1726:1827  require(hasRole(MINTER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have minter role to mint\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342\n      0x36\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1837:1854  _mint(to, amount) */\n      tag_163\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1843:1845  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1847:1853  amount */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1837:1842  _mint */\n      tag_164\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1837:1854  _mint(to, amount) */\n      jump\t// in\n    tag_163:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1659:1861  function mint(address to, uint256 amount) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":524:613  function burn(uint256 amount) public virtual {... */\n    tag_71:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":579:606  _burn(_msgSender(), amount) */\n      tag_166\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":585:597  _msgSender() */\n      tag_167\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":585:595  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":585:597  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":599:605  amount */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":579:584  _burn */\n      tag_168\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":579:606  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_166:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":524:613  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1052:1136  function paused() public view virtual returns (bool) {... */\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1099:1103  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1122:1129  _paused */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1115:1129  return _paused */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1052:1136  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3473:3480  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3499:3508  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3509:3516  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3492:3517  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":919:1209  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":995:1021  uint256 decreasedAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1024:1108  allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") */\n      tag_172\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1061:1067  amount */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1024:1108  allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db\n      0x24\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1024:1056  allowance(account, _msgSender()) */\n      tag_173\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1034:1041  account */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1043:1055  _msgSender() */\n      tag_174\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1043:1053  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1043:1055  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1024:1033  allowance */\n      tag_112\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1024:1056  allowance(account, _msgSender()) */\n      jump\t// in\n    tag_173:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1024:1060  allowance(account, _msgSender()).sub */\n      tag_133\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1024:1108  allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_172:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":995:1108  uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1119:1170  _approve(account, _msgSender(), decreasedAllowance) */\n      tag_175\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1128:1135  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1137:1149  _msgSender() */\n      tag_176\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1137:1147  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1137:1149  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1151:1169  decreasedAllowance */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1119:1127  _approve */\n      tag_124\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1119:1170  _approve(account, _msgSender(), decreasedAllowance) */\n      jump\t// in\n    tag_175:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1180:1202  _burn(account, amount) */\n      tag_177\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1186:1193  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1195:1201  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1180:1185  _burn */\n      tag_168\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":1180:1202  _burn(account, amount) */\n      jump\t// in\n    tag_177:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":919:1209  function burnFrom(address account, uint256 amount) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2064:2233  function pause() public virtual {... */\n    tag_81:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2114:2148  hasRole(PAUSER_ROLE, _msgSender()) */\n      tag_179\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1025:1049  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2135:2147  _msgSender() */\n      tag_180\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2135:2145  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2135:2147  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2114:2121  hasRole */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2114:2148  hasRole(PAUSER_ROLE, _msgSender()) */\n      jump\t// in\n    tag_179:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2106:2208  require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have pauser role to pause\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x37\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330\n      0x37\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2218:2226  _pause() */\n      tag_182\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2218:2224  _pause */\n      tag_183\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2218:2226  _pause() */\n      jump\t// in\n    tag_182:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2064:2233  function pause() public virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3965:4101  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n    tag_84:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4038:4045  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4064:4094  _roles[role].members.at(index) */\n      tag_185\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4088:4093  index */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4064:4070  _roles */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4064:4076  _roles[role] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4071:4075  role */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4064:4076  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4064:4084  _roles[role].members */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4064:4087  _roles[role].members.at */\n      tag_186\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4064:4094  _roles[role].members.at(index) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":4057:4094  return _roles[role].members.at(index) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3965:4101  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":2950:3087  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3019:3023  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3042:3080  _roles[role].members.contains(account) */\n      tag_188\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3072:3079  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3042:3048  _roles */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3042:3054  _roles[role] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3049:3053  role */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3042:3054  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3042:3062  _roles[role].members */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3042:3071  _roles[role].members.contains */\n      tag_189\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3042:3080  _roles[role].members.contains(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_188:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3035:3080  return _roles[role].members.contains(account) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":2950:3087  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_89:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2417:2430  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_191\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_192\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_191)\n    tag_192:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_193:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_193\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":1727:1776  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_95:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":1772:1776  0x00 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":1727:1776  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6384:6388  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_195\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      tag_196\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6409:6419  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6423:6430  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_197\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6471:6486  subtractedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6432:6443  _allowances */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      tag_198\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6444:6454  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      jump\t// in\n    tag_198:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6458:6465  spender */\n      dup11\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6432:6470  _allowances[_msgSender()][spender].sub */\n      tag_133\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_197:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6400:6408  _approve */\n      tag_124\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_195:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6546:6550  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6539:6550  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_101:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3813:3817  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      tag_200\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      tag_201\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3839:3849  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      jump\t// in\n    tag_201:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3853:3862  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3864:3870  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3829:3838  _transfer */\n      tag_128\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_200:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3888:3892  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3881:3892  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3255:3380  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n    tag_104:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3318:3325  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3344:3373  _roles[role].members.length() */\n      tag_203\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3344:3350  _roles */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3344:3356  _roles[role] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3351:3355  role */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3344:3356  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3344:3364  _roles[role].members */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3344:3371  _roles[role].members.length */\n      tag_204\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3344:3373  _roles[role].members.length() */\n      jump\t// in\n    tag_203:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3337:3373  return _roles[role].members.length() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":3255:3380  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":919:981  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_106:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":957:981  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":919:981  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5101:5327  function revokeRole(bytes32 role, address account) public virtual {... */\n    tag_109:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5185:5230  hasRole(_roles[role].adminRole, _msgSender()) */\n      tag_206\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5193:5199  _roles */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5193:5205  _roles[role] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5200:5204  role */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5193:5205  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5193:5215  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5217:5229  _msgSender() */\n      tag_207\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5217:5227  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5217:5229  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5185:5192  hasRole */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5185:5230  hasRole(_roles[role].adminRole, _msgSender()) */\n      jump\t// in\n    tag_206:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5177:5283  require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to revoke\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x30\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3\n      0x30\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5294:5320  _revokeRole(role, account) */\n      tag_209\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5306:5310  role */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5312:5319  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5294:5305  _revokeRole */\n      tag_146\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5294:5320  _revokeRole(role, account) */\n      jump\t// in\n    tag_209:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":5101:5327  function revokeRole(bytes32 role, address account) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_112:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4046:4053  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4072:4083  _allowances */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4084:4089  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4091:4098  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4065:4099  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":987:1049  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_114:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":1025:1049  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":987:1049  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6429:6579  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_115:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6499:6503  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6522:6572  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_212\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6527:6530  set */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6527:6537  set._inner */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6563:6568  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6547:6570  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6539:6571  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6522:6526  _add */\n      tag_213\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6522:6572  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_212:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6515:6572  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6429:6579  function add(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_123:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_124:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9473:9474  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9456:9461  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9448:9516  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9553:9554  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9534:9541  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9526:9594  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9635:9641  amount */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9605:9616  _allowances */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9617:9622  owner */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9624:9631  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9605:9641  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9672:9679  spender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9665:9670  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9681:9687  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7154:7155  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7136:7142  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7128:7198  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7237:7238  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7216:7225  recipient */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7208:7279  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_221\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7311:7317  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7319:7328  recipient */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7330:7336  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7290:7310  _beforeTokenTransfer */\n      tag_222\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_221:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_223\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7390:7396  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7368:7377  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7378:7384  sender */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7368:7389  _balances[sender].sub */\n      tag_133\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_223:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7348:7357  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7358:7364  sender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7348:7439  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      tag_224\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7497:7503  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7472:7481  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7482:7491  recipient */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7472:7496  _balances[recipient].add */\n      tag_152\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_224:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7449:7458  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7459:7468  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7449:7504  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7536:7545  recipient */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7528:7534  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7547:7553  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_133:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5518:5525  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5550:5551  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5545:5546  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5545:5551  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5553:5565  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      swap1\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_227:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_229\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_227)\n    tag_229:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_230\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_230:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5587:5588  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5583:5584  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5583:5588  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5576:5588  return a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7025:7209  function _grantRole(bytes32 role, address account) private {... */\n    tag_140:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7098:7131  _roles[role].members.add(account) */\n      tag_232\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7123:7130  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7098:7104  _roles */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7098:7110  _roles[role] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7105:7109  role */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7098:7110  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7098:7118  _roles[role].members */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7098:7122  _roles[role].members.add */\n      tag_115\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7098:7131  _roles[role].members.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7094:7203  if (_roles[role].members.add(account)) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7179:7191  _msgSender() */\n      tag_234\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7179:7189  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7179:7191  _msgSender() */\n      jump\t// in\n    tag_234:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7170:7177  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7164:7168  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7152:7192  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7094:7203  if (_roles[role].members.add(account)) {... */\n    tag_233:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7025:7209  function _grantRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7215:7403  function _revokeRole(bytes32 role, address account) private {... */\n    tag_146:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7289:7325  _roles[role].members.remove(account) */\n      tag_236\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7317:7324  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7289:7295  _roles */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7289:7301  _roles[role] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7296:7300  role */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7289:7301  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7289:7309  _roles[role].members */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7289:7316  _roles[role].members.remove */\n      tag_237\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7289:7325  _roles[role].members.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_236:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7285:7397  if (_roles[role].members.remove(account)) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7373:7385  _msgSender() */\n      tag_239\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7373:7383  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7373:7385  _msgSender() */\n      jump\t// in\n    tag_239:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7346:7386  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7364:7371  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7346:7386  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7358:7362  role */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7346:7386  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7285:7397  if (_roles[role].members.remove(account)) {... */\n    tag_238:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":7215:7403  function _revokeRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_152:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":2064:2181  function _unpause() internal virtual whenPaused {... */\n    tag_158:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1631:1639  paused() */\n      tag_243\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1631:1637  paused */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1631:1639  paused() */\n      jump\t// in\n    tag_243:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1623:1664  require(paused(), \"Pausable: not paused\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_244:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":2132:2137  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":2122:2129  _paused */\n      0x06\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":2122:2137  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":2152:2174  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":2161:2173  _msgSender() */\n      tag_246\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":2161:2171  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":2161:2173  _msgSender() */\n      jump\t// in\n    tag_246:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":2152:2174  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":2064:2181  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7832:8202  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_164:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7934:7935  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7915:7936  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7915:7922  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7915:7936  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7907:7972  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_248:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7983:8032  _beforeTokenTransfer(address(0), account, amount) */\n      tag_249\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8012:8013  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8016:8023  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8025:8031  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7983:8003  _beforeTokenTransfer */\n      tag_222\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7983:8032  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_249:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8058:8082  _totalSupply.add(amount) */\n      tag_250\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8075:8081  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8058:8070  _totalSupply */\n      sload(0x03)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8058:8074  _totalSupply.add */\n      tag_152\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8058:8082  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_250:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8043:8055  _totalSupply */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8043:8082  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8113:8143  _balances[account].add(amount) */\n      tag_251\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8136:8142  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8113:8122  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8113:8131  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8123:8130  account */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8113:8131  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8113:8135  _balances[account].add */\n      tag_152\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8113:8143  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_251:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8092:8101  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8092:8110  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8102:8109  account */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8092:8110  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8092:8143  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8179:8186  account */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8175:8176  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8188:8194  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7832:8202  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8522:8932  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_168:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8624:8625  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8605:8626  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8605:8612  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8605:8626  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8597:8664  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8675:8724  _beforeTokenTransfer(account, address(0), amount) */\n      tag_254\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8696:8703  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8713:8714  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8717:8723  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8675:8695  _beforeTokenTransfer */\n      tag_222\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8675:8724  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_254:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8756:8824  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      tag_255\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8779:8785  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8756:8824  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd\n      0x22\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8756:8765  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8756:8774  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8766:8773  account */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8756:8774  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8756:8778  _balances[account].sub */\n      tag_133\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8756:8824  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8735:8744  _balances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8735:8753  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8745:8752  account */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8735:8753  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8735:8824  _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8849:8873  _totalSupply.sub(amount) */\n      tag_256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8866:8872  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8849:8861  _totalSupply */\n      sload(0x03)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8849:8865  _totalSupply.sub */\n      tag_257\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8849:8873  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8834:8846  _totalSupply */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8834:8873  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8914:8915  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8888:8925  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8897:8904  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8888:8925  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8918:8924  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8888:8925  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":8522:8932  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1817:1932  function _pause() internal virtual whenNotPaused {... */\n    tag_183:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1366:1374  paused() */\n      tag_259\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1366:1372  paused */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1366:1374  paused() */\n      jump\t// in\n    tag_259:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1365:1374  !paused() */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1357:1395  require(!paused(), \"Pausable: paused\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_260:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1886:1890  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1876:1883  _paused */\n      0x06\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1876:1890  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1905:1925  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1912:1924  _msgSender() */\n      tag_262\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1912:1922  _msgSender */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1912:1924  _msgSender() */\n      jump\t// in\n    tag_262:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1905:1925  Paused(_msgSender()) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":1817:1932  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7677:7833  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_186:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7751:7758  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7801:7823  _at(set._inner, index) */\n      tag_264\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7805:7808  set */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7805:7815  set._inner */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7817:7822  index */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7801:7804  _at */\n      tag_265\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7801:7823  _at(set._inner, index) */\n      jump\t// in\n    tag_264:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7793:7824  uint256(_at(set._inner, index)) */\n      0x00\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7770:7826  return address(uint160(uint256(_at(set._inner, index)))) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7677:7833  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6984:7149  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_189:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7064:7068  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7087:7142  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_267\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7097:7100  set */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7097:7107  set._inner */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7133:7138  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7117:7140  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7109:7141  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7087:7096  _contains */\n      tag_268\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7087:7142  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_267:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7080:7142  return _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6984:7149  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7230:7345  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_204:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7293:7300  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7319:7338  _length(set._inner) */\n      tag_270\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7327:7330  set */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7327:7337  set._inner */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7319:7326  _length */\n      tag_271\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7319:7338  _length(set._inner) */\n      jump\t// in\n    tag_270:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7312:7338  return _length(set._inner) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":7230:7345  function length(AddressSet storage set) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1640:2044  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_213:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1703:1707  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1724:1745  _contains(set, value) */\n      tag_273\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1734:1737  set */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1739:1744  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1724:1733  _contains */\n      tag_268\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1724:1745  _contains(set, value) */\n      jump\t// in\n    tag_273:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1719:2038  if (!_contains(set, value)) {... */\n      tag_274\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1761:1764  set */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1761:1772  set._values */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1778:1783  value */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1761:1784  set._values.push(value) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1941:1944  set */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1941:1952  set._values */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1941:1959  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1919:1922  set */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1919:1931  set._indexes */\n      0x01\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1919:1938  set._indexes[value] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1932:1937  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1919:1938  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1919:1959  set._indexes[value] = set._values.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1980:1984  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1973:1984  return true */\n      swap1\n      pop\n      jump(tag_272)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1719:2038  if (!_contains(set, value)) {... */\n    tag_274:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2022:2027  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2015:2027  return false */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":1640:2044  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_272:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2621:2802  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override(ERC20, ERC20Pausable) {... */\n    tag_222:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2751:2795  super._beforeTokenTransfer(from, to, amount) */\n      tag_278\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2778:2782  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2784:2786  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2788:2794  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2751:2777  super._beforeTokenTransfer */\n      tag_279\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2751:2795  super._beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_278:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":2621:2802  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override(ERC20, ERC20Pausable) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6747:6903  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_237:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6820:6824  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6843:6896  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_281\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6851:6854  set */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6851:6861  set._inner */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6887:6892  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6871:6894  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6863:6895  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6843:6850  _remove */\n      tag_282\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6843:6896  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_281:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6836:6896  return _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":6747:6903  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_257:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":3194:3201  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":3226:3227  a */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":3221:3222  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":3221:3227  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":3213:3262  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_284:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":3283:3284  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":3279:3280  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":3279:3284  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":3272:3284  return a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4452:4653  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_265:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4519:4526  bytes32 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4567:4572  index */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4546:4549  set */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4546:4557  set._values */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4546:4564  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4546:4572  set._values.length > index */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4538:4611  require(set._values.length > index, \"EnumerableSet: index out of bounds\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_286:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4628:4631  set */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4628:4639  set._values */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4640:4645  index */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4628:4646  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_287\n      jumpi\n      invalid\n    tag_287:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4621:4646  return set._values[index] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4452:4653  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3805:3932  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_268:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3878:3882  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3924:3925  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3901:3904  set */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3901:3913  set._indexes */\n      0x01\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3901:3920  set._indexes[value] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3914:3919  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3901:3920  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3901:3925  set._indexes[value] != 0 */\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3894:3925  return set._indexes[value] != 0 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3805:3932  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4013:4120  function _length(Set storage set) private view returns (uint256) {... */\n    tag_271:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4069:4076  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4095:4098  set */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4095:4106  set._values */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4095:4113  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4088:4113  return set._values.length */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":4013:4120  function _length(Set storage set) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol\":590:824  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {... */\n    tag_279:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol\":698:742  super._beforeTokenTransfer(from, to, amount) */\n      tag_292\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol\":725:729  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol\":731:733  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol\":735:741  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol\":698:724  super._beforeTokenTransfer */\n      tag_293\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol\":698:742  super._beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_292:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol\":762:770  paused() */\n      tag_294\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol\":762:768  paused */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol\":762:770  paused() */\n      jump\t// in\n    tag_294:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol\":761:770  !paused() */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol\":753:817  require(!paused(), \"ERC20Pausable: token transfer while paused\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_295:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol\":590:824  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2212:3724  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_282:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2278:2282  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2394:2412  uint256 valueIndex */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2415:2418  set */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2415:2427  set._indexes */\n      0x01\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2415:2434  set._indexes[value] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2428:2433  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2415:2434  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2394:2434  uint256 valueIndex = set._indexes[value] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2463:2464  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2449:2459  valueIndex */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2449:2464  valueIndex != 0 */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2445:3718  if (valueIndex != 0) { // Equivalent to contains(set, value)... */\n      tag_297\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2806:2827  uint256 toDeleteIndex */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2843:2844  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2830:2840  valueIndex */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2830:2844  valueIndex - 1 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2806:2844  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2858:2875  uint256 lastIndex */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2899:2900  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2878:2881  set */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2878:2889  set._values */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2878:2896  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2878:2900  set._values.length - 1 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2858:2900  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3140:3157  bytes32 lastvalue */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3160:3163  set */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3160:3171  set._values */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3172:3181  lastIndex */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3160:3182  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_298\n      jumpi\n      invalid\n    tag_298:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3140:3182  bytes32 lastvalue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3303:3312  lastvalue */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3274:3277  set */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3274:3285  set._values */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3286:3299  toDeleteIndex */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3274:3300  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_300\n      jumpi\n      invalid\n    tag_300:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3274:3312  set._values[toDeleteIndex] = lastvalue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3420:3421  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3404:3417  toDeleteIndex */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3404:3421  toDeleteIndex + 1 */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3378:3381  set */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3378:3390  set._indexes */\n      0x01\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3378:3401  set._indexes[lastvalue] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3391:3400  lastvalue */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3378:3401  set._indexes[lastvalue] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3378:3421  set._indexes[lastvalue] = toDeleteIndex + 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3527:3530  set */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3527:3538  set._values */\n      0x00\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3527:3544  set._values.pop() */\n      dup1\n      sload\n      dup1\n      tag_302\n      jumpi\n      invalid\n    tag_302:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3619:3622  set */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3619:3631  set._indexes */\n      0x01\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3619:3638  set._indexes[value] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3632:3637  value */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3619:3638  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3612:3638  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3660:3664  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3653:3664  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_296)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2445:3718  if (valueIndex != 0) { // Equivalent to contains(set, value)... */\n    tag_297:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3702:3707  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":3695:3707  return false */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":2212:3724  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_296:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":10701:10793  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_293:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb 456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811 416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74\n    data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd 45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186 45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3 416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342 45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74\n    data_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db 45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365\n    data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f 45524332303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330 45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f207061757365\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b 416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66\n    data_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4 45524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564\n\n    auxdata: 0xa2646970667358221220009f66598501208be1e1f7a1b737b2b3a0653ecceb7b7c23f94795128113451964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002baf38038062002baf833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b5060405250505081818160049080519060200190620001cf92919062000466565b508060059080519060200190620001e892919062000466565b506012600660006101000a81548160ff021916908360ff16021790555050506000600660016101000a81548160ff021916908315150217905550620002466000801b6200023a620002d060201b60201c565b620002d860201b60201c565b620002877f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66200027b620002d060201b60201c565b620002d860201b60201c565b620002c87f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a620002bc620002d060201b60201c565b620002d860201b60201c565b50506200050c565b600033905090565b620002ea8282620002ee60201b60201c565b5050565b6200031c816000808581526020019081526020016000206000016200039160201b6200130f1790919060201c565b156200038d5762000332620002d060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000620003c1836000018373ffffffffffffffffffffffffffffffffffffffff1660001b620003c960201b60201c565b905092915050565b6000620003dd83836200044360201b60201c565b620004385782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506200043d565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004a957805160ff1916838001178555620004da565b82800160010185558215620004da579182015b82811115620004d9578251825591602001919060010190620004bc565b5b509050620004e99190620004ed565b5090565b5b8082111562000508576000816000905550600101620004ee565b5090565b612693806200051c6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c806370a08231116100f9578063a457c2d711610097578063d539139311610071578063d539139314610861578063d547741f1461087f578063dd62ed3e146108cd578063e63ab1e914610945576101a9565b8063a457c2d714610757578063a9059cbb146107bb578063ca15c8731461081f576101a9565b80639010d07c116100d35780639010d07c146105f057806391d148541461065257806395d89b41146106b6578063a217fddf14610739576101a9565b806370a082311461054057806379cc6790146105985780638456cb59146105e6576101a9565b8063313ce567116101665780633f4ba83a116101405780633f4ba83a1461049a57806340c10f19146104a457806342966c68146104f25780635c975abb14610520576101a9565b8063313ce567146103c757806336568abe146103e85780633950935114610436576101a9565b806306fdde03146101ae578063095ea7b31461023157806318160ddd1461029557806323b872dd146102b3578063248a9ca3146103375780632f2ff15d14610379575b600080fd5b6101b6610963565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101f65780820151818401526020810190506101db565b50505050905090810190601f1680156102235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61027d6004803603604081101561024757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a05565b60405180821515815260200191505060405180910390f35b61029d610a23565b6040518082815260200191505060405180910390f35b61031f600480360360608110156102c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a2d565b60405180821515815260200191505060405180910390f35b6103636004803603602081101561034d57600080fd5b8101908080359060200190929190505050610b06565b6040518082815260200191505060405180910390f35b6103c56004803603604081101561038f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b25565b005b6103cf610bae565b604051808260ff16815260200191505060405180910390f35b610434600480360360408110156103fe57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bc5565b005b6104826004803603604081101561044c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c5e565b60405180821515815260200191505060405180910390f35b6104a2610d11565b005b6104f0600480360360408110156104ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610da1565b005b61051e6004803603602081101561050857600080fd5b8101908080359060200190929190505050610e35565b005b610528610e49565b60405180821515815260200191505060405180910390f35b6105826004803603602081101561055657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e60565b6040518082815260200191505060405180910390f35b6105e4600480360360408110156105ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ea9565b005b6105ee610f0b565b005b6106266004803603604081101561060657600080fd5b810190808035906020019092919080359060200190929190505050610f9b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61069e6004803603604081101561066857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fcc565b60405180821515815260200191505060405180910390f35b6106be610ffd565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106fe5780820151818401526020810190506106e3565b50505050905090810190601f16801561072b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61074161109f565b6040518082815260200191505060405180910390f35b6107a36004803603604081101561076d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110a6565b60405180821515815260200191505060405180910390f35b610807600480360360408110156107d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611173565b60405180821515815260200191505060405180910390f35b61084b6004803603602081101561083557600080fd5b8101908080359060200190929190505050611191565b6040518082815260200191505060405180910390f35b6108696111b7565b6040518082815260200191505060405180910390f35b6108cb6004803603604081101561089557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111db565b005b61092f600480360360408110156108e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611264565b6040518082815260200191505060405180910390f35b61094d6112eb565b6040518082815260200191505060405180910390f35b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109fb5780601f106109d0576101008083540402835291602001916109fb565b820191906000526020600020905b8154815290600101906020018083116109de57829003601f168201915b5050505050905090565b6000610a19610a1261133f565b8484611347565b6001905092915050565b6000600354905090565b6000610a3a84848461153e565b610afb84610a4661133f565b610af6856040518060600160405280602881526020016124bd60289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610aac61133f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118039092919063ffffffff16565b611347565b600190509392505050565b6000806000838152602001908152602001600020600201549050919050565b610b4b60008084815260200190815260200160002060020154610b4661133f565b610fcc565b610ba0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806123bb602f913960400191505060405180910390fd5b610baa82826118bd565b5050565b6000600660009054906101000a900460ff16905090565b610bcd61133f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612605602f913960400191505060405180910390fd5b610c5a8282611950565b5050565b6000610d07610c6b61133f565b84610d028560026000610c7c61133f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119e390919063ffffffff16565b611347565b6001905092915050565b610d427f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610d3d61133f565b610fcc565b610d97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603981526020018061240c6039913960400191505060405180910390fd5b610d9f611a6b565b565b610dd27f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610dcd61133f565b610fcc565b610e27576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806124e56036913960400191505060405180910390fd5b610e318282611b56565b5050565b610e46610e4061133f565b82611d1f565b50565b6000600660019054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610ee88260405180606001604052806024815260200161251b60249139610ed986610ed461133f565b611264565b6118039092919063ffffffff16565b9050610efc83610ef661133f565b83611347565b610f068383611d1f565b505050565b610f3c7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610f3761133f565b610fcc565b610f91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001806125a96037913960400191505060405180910390fd5b610f99611ee5565b565b6000610fc482600080868152602001908152602001600020600001611fd190919063ffffffff16565b905092915050565b6000610ff582600080868152602001908152602001600020600001611feb90919063ffffffff16565b905092915050565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110955780601f1061106a57610100808354040283529160200191611095565b820191906000526020600020905b81548152906001019060200180831161107857829003601f168201915b5050505050905090565b6000801b81565b60006111696110b361133f565b84611164856040518060600160405280602581526020016125e060259139600260006110dd61133f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118039092919063ffffffff16565b611347565b6001905092915050565b600061118761118061133f565b848461153e565b6001905092915050565b60006111b060008084815260200190815260200160002060000161201b565b9050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b611201600080848152602001908152602001600020600201546111fc61133f565b610fcc565b611256576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061248d6030913960400191505060405180910390fd5b6112608282611950565b5050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6000611337836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612030565b905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156113cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806125856024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611453576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806124456022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156115c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806125606025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561164a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806123986023913960400191505060405180910390fd5b6116558383836120a0565b6116c18160405180606001604052806026815260200161246760269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118039092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061175681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119e390919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906118b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561187557808201518184015260208101905061185a565b50505050905090810190601f1680156118a25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b6118e48160008085815260200190815260200160002060000161130f90919063ffffffff16565b1561194c576118f161133f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b611977816000808581526020019081526020016000206000016120b090919063ffffffff16565b156119df5761198461133f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080828401905083811015611a61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b611a73610e49565b611ae5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600660016101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611b2961133f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611bf9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611c05600083836120a0565b611c1a816003546119e390919063ffffffff16565b600381905550611c7281600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119e390919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611da5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061253f6021913960400191505060405180910390fd5b611db1826000836120a0565b611e1d816040518060600160405280602281526020016123ea60229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118039092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e75816003546120e090919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b611eed610e49565b15611f60576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600660016101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611fa461133f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000611fe08360000183612163565b60001c905092915050565b6000612013836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6121e6565b905092915050565b600061202982600001612209565b9050919050565b600061203c83836121e6565b61209557826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905061209a565b600090505b92915050565b6120ab83838361221a565b505050565b60006120d8836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612288565b905092915050565b600082821115612158576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b6000818360000180549050116121c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806123766022913960400191505060405180910390fd5b8260000182815481106121d357fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b612225838383612370565b61222d610e49565b15612283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612634602a913960400191505060405180910390fd5b505050565b6000808360010160008481526020019081526020016000205490506000811461236457600060018203905060006001866000018054905003905060008660000182815481106122d357fe5b90600052602060002001549050808760000184815481106122f057fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061232857fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061236a565b60009150505b92915050565b50505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e706175736545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e7445524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20706175736545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c6645524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a2646970667358221220009f66598501208be1e1f7a1b737b2b3a0653ecceb7b7c23f94795128113451964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2BAF CODESIZE SUB DUP1 PUSH3 0x2BAF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 DUP2 DUP2 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CF SWAP3 SWAP2 SWAP1 PUSH3 0x466 JUMP JUMPDEST POP DUP1 PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E8 SWAP3 SWAP2 SWAP1 PUSH3 0x466 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x246 PUSH1 0x0 DUP1 SHL PUSH3 0x23A PUSH3 0x2D0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2D8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x287 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH3 0x27B PUSH3 0x2D0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2D8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2C8 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH3 0x2BC PUSH3 0x2D0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2D8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x50C JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x2EA DUP3 DUP3 PUSH3 0x2EE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x31C DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH3 0x391 PUSH1 0x20 SHL PUSH3 0x130F OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x38D JUMPI PUSH3 0x332 PUSH3 0x2D0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3C1 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH3 0x3C9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3DD DUP4 DUP4 PUSH3 0x443 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x438 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH3 0x43D JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x4A9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x4DA JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x4DA JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x4D9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x4BC JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x4E9 SWAP2 SWAP1 PUSH3 0x4ED JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x508 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x4EE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x2693 DUP1 PUSH3 0x51C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x861 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x87F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x8CD JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x945 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x757 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x7BB JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x81F JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x9010D07C GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x652 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6B6 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x739 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x540 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5E6 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x4F2 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x520 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x436 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x379 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x223 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x363 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB25 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CF PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x482 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A2 PUSH2 0xD11 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDA1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE35 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x528 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x582 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEA9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5EE PUSH2 0xF0B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x626 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6BE PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6FE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6E3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x72B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x741 PUSH2 0x109F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x807 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x84B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x869 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8CB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x895 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94D PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x9FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA19 PUSH2 0xA12 PUSH2 0x133F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3A DUP5 DUP5 DUP5 PUSH2 0x153E JUMP JUMPDEST PUSH2 0xAFB DUP5 PUSH2 0xA46 PUSH2 0x133F JUMP JUMPDEST PUSH2 0xAF6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24BD PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0xAAC PUSH2 0x133F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1803 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB4B PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xB46 PUSH2 0x133F JUMP JUMPDEST PUSH2 0xFCC JUMP JUMPDEST PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23BB PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBAA DUP3 DUP3 PUSH2 0x18BD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBCD PUSH2 0x133F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2605 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC5A DUP3 DUP3 PUSH2 0x1950 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD07 PUSH2 0xC6B PUSH2 0x133F JUMP JUMPDEST DUP5 PUSH2 0xD02 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0xC7C PUSH2 0x133F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x19E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD42 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xD3D PUSH2 0x133F JUMP JUMPDEST PUSH2 0xFCC JUMP JUMPDEST PUSH2 0xD97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x240C PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD9F PUSH2 0x1A6B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDD2 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xDCD PUSH2 0x133F JUMP JUMPDEST PUSH2 0xFCC JUMP JUMPDEST PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x24E5 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE31 DUP3 DUP3 PUSH2 0x1B56 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE46 PUSH2 0xE40 PUSH2 0x133F JUMP JUMPDEST DUP3 PUSH2 0x1D1F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE8 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x251B PUSH1 0x24 SWAP2 CODECOPY PUSH2 0xED9 DUP7 PUSH2 0xED4 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x1803 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xEFC DUP4 PUSH2 0xEF6 PUSH2 0x133F JUMP JUMPDEST DUP4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0xF06 DUP4 DUP4 PUSH2 0x1D1F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF3C PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xF37 PUSH2 0x133F JUMP JUMPDEST PUSH2 0xFCC JUMP JUMPDEST PUSH2 0xF91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x37 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25A9 PUSH1 0x37 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF99 PUSH2 0x1EE5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC4 DUP3 PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1FD1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF5 DUP3 PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1FEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1095 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x106A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1095 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1078 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1169 PUSH2 0x10B3 PUSH2 0x133F JUMP JUMPDEST DUP5 PUSH2 0x1164 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25E0 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x10DD PUSH2 0x133F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1803 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1187 PUSH2 0x1180 PUSH2 0x133F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x153E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B0 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x201B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x1201 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x11FC PUSH2 0x133F JUMP JUMPDEST PUSH2 0xFCC JUMP JUMPDEST PUSH2 0x1256 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x248D PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1260 DUP3 DUP3 PUSH2 0x1950 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1337 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2030 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2585 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1453 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2445 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x15C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2560 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x164A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2398 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1655 DUP4 DUP4 DUP4 PUSH2 0x20A0 JUMP JUMPDEST PUSH2 0x16C1 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2467 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1803 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1756 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x19E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x18B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1875 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x185A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18A2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x18E4 DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x130F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x194C JUMPI PUSH2 0x18F1 PUSH2 0x133F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1977 DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x20B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x19DF JUMPI PUSH2 0x1984 PUSH2 0x133F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1A61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A73 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0x1AE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1B29 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C05 PUSH1 0x0 DUP4 DUP4 PUSH2 0x20A0 JUMP JUMPDEST PUSH2 0x1C1A DUP2 PUSH1 0x3 SLOAD PUSH2 0x19E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1C72 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x19E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1DA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x253F PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DB1 DUP3 PUSH1 0x0 DUP4 PUSH2 0x20A0 JUMP JUMPDEST PUSH2 0x1E1D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23EA PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1803 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E75 DUP2 PUSH1 0x3 SLOAD PUSH2 0x20E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1EED PUSH2 0xE49 JUMP JUMPDEST ISZERO PUSH2 0x1F60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1FA4 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE0 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2013 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x21E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2029 DUP3 PUSH1 0x0 ADD PUSH2 0x2209 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203C DUP4 DUP4 PUSH2 0x21E6 JUMP JUMPDEST PUSH2 0x2095 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x209A JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20AB DUP4 DUP4 DUP4 PUSH2 0x221A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D8 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2288 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2158 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0x21C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2376 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x21D3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2225 DUP4 DUP4 DUP4 PUSH2 0x2370 JUMP JUMPDEST PUSH2 0x222D PUSH2 0xE49 JUMP JUMPDEST ISZERO PUSH2 0x2283 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2634 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x2364 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SUB SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x22D3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x22F0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 ADD DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x2328 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x236A JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E647345524332303A207472616E PUSH20 0x66657220746F20746865207A65726F2061646472 PUSH6 0x737341636365 PUSH20 0x73436F6E74726F6C3A2073656E646572206D7573 PUSH21 0x20626520616E2061646D696E20746F206772616E74 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS POP PUSH19 0x657365744D696E7465725061757365723A206D PUSH22 0x737420686176652070617573657220726F6C6520746F KECCAK256 PUSH22 0x6E706175736545524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65416363 PUSH6 0x7373436F6E74 PUSH19 0x6F6C3A2073656E646572206D75737420626520 PUSH2 0x6E20 PUSH2 0x646D PUSH10 0x6E20746F207265766F6B PUSH6 0x45524332303A KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332305072657365 PUSH21 0x4D696E7465725061757365723A206D757374206861 PUSH23 0x65206D696E74657220726F6C6520746F206D696E744552 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654552 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS POP PUSH19 0x657365744D696E7465725061757365723A206D PUSH22 0x737420686176652070617573657220726F6C6520746F KECCAK256 PUSH17 0x6175736545524332303A20646563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F41636365 PUSH20 0x73436F6E74726F6C3A2063616E206F6E6C792072 PUSH6 0x6E6F756E6365 KECCAK256 PUSH19 0x6F6C657320666F722073656C66455243323050 PUSH2 0x7573 PUSH2 0x626C PUSH6 0x3A20746F6B65 PUSH15 0x207472616E73666572207768696C65 KECCAK256 PUSH17 0x6175736564A2646970667358221220009F PUSH7 0x598501208BE1E1 0xF7 LOG1 0xB7 CALLDATACOPY 0xB2 0xB3 LOG0 PUSH6 0x3ECCEB7B7C23 0xF9 SELFBALANCE SWAP6 SLT DUP2 SGT GASLIMIT NOT PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "824:1980:3:-:0;;;1233:237;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1300:4;1306:6;2040:5:4;2032;:13;;;;;;;;;;;;:::i;:::-;;2065:7;2055;:17;;;;;;;;;;;;:::i;:::-;;2094:2;2082:9;;:14;;;;;;;;;;;;;;;;;;1958:145;;945:5:11;935:7;;:15;;;;;;;;;;;;;;;;;;1324:44:3::1;1772:4:1;1335:18:3::0;::::1;1355:12;:10;;;:12;;:::i;:::-;1324:10;;;:44;;:::i;:::-;1379:37;957:24;1403:12;:10;;;:12;;:::i;:::-;1379:10;;;:37;;:::i;:::-;1426;1025:24;1450:12;:10;;;:12;;:::i;:::-;1426:10;;;:37;;:::i;:::-;1233:237:::0;;824:1980;;598:104:9;651:15;685:10;678:17;;598:104;:::o;6588:110:1:-;6666:25;6677:4;6683:7;6666:10;;;:25;;:::i;:::-;6588:110;;:::o;7025:184::-;7098:33;7123:7;7098:6;:12;7105:4;7098:12;;;;;;;;;;;:20;;:24;;;;;;:33;;;;:::i;:::-;7094:109;;;7179:12;:10;;;:12;;:::i;:::-;7152:40;;7170:7;7152:40;;7164:4;7152:40;;;;;;;;;;7094:109;7025:184;;:::o;6429:150:10:-;6499:4;6522:50;6527:3;:10;;6563:5;6547:23;;6539:32;;6522:4;;;:50;;:::i;:::-;6515:57;;6429:150;;;;:::o;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;;;:21;;:::i;:::-;1719:319;;1761:3;:11;;1778:5;1761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:3;:11;;:18;;;;1919:3;:12;;:19;1932:5;1919:19;;;;;;;;;;;:40;;;;1980:4;1973:11;;;;1719:319;2022:5;2015:12;;1640:404;;;;;:::o;3805:127::-;3878:4;3924:1;3901:3;:12;;:19;3914:5;3901:19;;;;;;;;;;;;:24;;3894:31;;3805:127;;;;:::o;824:1980:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a95760003560e01c806370a08231116100f9578063a457c2d711610097578063d539139311610071578063d539139314610861578063d547741f1461087f578063dd62ed3e146108cd578063e63ab1e914610945576101a9565b8063a457c2d714610757578063a9059cbb146107bb578063ca15c8731461081f576101a9565b80639010d07c116100d35780639010d07c146105f057806391d148541461065257806395d89b41146106b6578063a217fddf14610739576101a9565b806370a082311461054057806379cc6790146105985780638456cb59146105e6576101a9565b8063313ce567116101665780633f4ba83a116101405780633f4ba83a1461049a57806340c10f19146104a457806342966c68146104f25780635c975abb14610520576101a9565b8063313ce567146103c757806336568abe146103e85780633950935114610436576101a9565b806306fdde03146101ae578063095ea7b31461023157806318160ddd1461029557806323b872dd146102b3578063248a9ca3146103375780632f2ff15d14610379575b600080fd5b6101b6610963565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101f65780820151818401526020810190506101db565b50505050905090810190601f1680156102235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61027d6004803603604081101561024757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a05565b60405180821515815260200191505060405180910390f35b61029d610a23565b6040518082815260200191505060405180910390f35b61031f600480360360608110156102c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a2d565b60405180821515815260200191505060405180910390f35b6103636004803603602081101561034d57600080fd5b8101908080359060200190929190505050610b06565b6040518082815260200191505060405180910390f35b6103c56004803603604081101561038f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b25565b005b6103cf610bae565b604051808260ff16815260200191505060405180910390f35b610434600480360360408110156103fe57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bc5565b005b6104826004803603604081101561044c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c5e565b60405180821515815260200191505060405180910390f35b6104a2610d11565b005b6104f0600480360360408110156104ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610da1565b005b61051e6004803603602081101561050857600080fd5b8101908080359060200190929190505050610e35565b005b610528610e49565b60405180821515815260200191505060405180910390f35b6105826004803603602081101561055657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e60565b6040518082815260200191505060405180910390f35b6105e4600480360360408110156105ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ea9565b005b6105ee610f0b565b005b6106266004803603604081101561060657600080fd5b810190808035906020019092919080359060200190929190505050610f9b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61069e6004803603604081101561066857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fcc565b60405180821515815260200191505060405180910390f35b6106be610ffd565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106fe5780820151818401526020810190506106e3565b50505050905090810190601f16801561072b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61074161109f565b6040518082815260200191505060405180910390f35b6107a36004803603604081101561076d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110a6565b60405180821515815260200191505060405180910390f35b610807600480360360408110156107d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611173565b60405180821515815260200191505060405180910390f35b61084b6004803603602081101561083557600080fd5b8101908080359060200190929190505050611191565b6040518082815260200191505060405180910390f35b6108696111b7565b6040518082815260200191505060405180910390f35b6108cb6004803603604081101561089557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111db565b005b61092f600480360360408110156108e357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611264565b6040518082815260200191505060405180910390f35b61094d6112eb565b6040518082815260200191505060405180910390f35b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109fb5780601f106109d0576101008083540402835291602001916109fb565b820191906000526020600020905b8154815290600101906020018083116109de57829003601f168201915b5050505050905090565b6000610a19610a1261133f565b8484611347565b6001905092915050565b6000600354905090565b6000610a3a84848461153e565b610afb84610a4661133f565b610af6856040518060600160405280602881526020016124bd60289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610aac61133f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118039092919063ffffffff16565b611347565b600190509392505050565b6000806000838152602001908152602001600020600201549050919050565b610b4b60008084815260200190815260200160002060020154610b4661133f565b610fcc565b610ba0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806123bb602f913960400191505060405180910390fd5b610baa82826118bd565b5050565b6000600660009054906101000a900460ff16905090565b610bcd61133f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612605602f913960400191505060405180910390fd5b610c5a8282611950565b5050565b6000610d07610c6b61133f565b84610d028560026000610c7c61133f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119e390919063ffffffff16565b611347565b6001905092915050565b610d427f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610d3d61133f565b610fcc565b610d97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603981526020018061240c6039913960400191505060405180910390fd5b610d9f611a6b565b565b610dd27f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610dcd61133f565b610fcc565b610e27576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806124e56036913960400191505060405180910390fd5b610e318282611b56565b5050565b610e46610e4061133f565b82611d1f565b50565b6000600660019054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610ee88260405180606001604052806024815260200161251b60249139610ed986610ed461133f565b611264565b6118039092919063ffffffff16565b9050610efc83610ef661133f565b83611347565b610f068383611d1f565b505050565b610f3c7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610f3761133f565b610fcc565b610f91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001806125a96037913960400191505060405180910390fd5b610f99611ee5565b565b6000610fc482600080868152602001908152602001600020600001611fd190919063ffffffff16565b905092915050565b6000610ff582600080868152602001908152602001600020600001611feb90919063ffffffff16565b905092915050565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110955780601f1061106a57610100808354040283529160200191611095565b820191906000526020600020905b81548152906001019060200180831161107857829003601f168201915b5050505050905090565b6000801b81565b60006111696110b361133f565b84611164856040518060600160405280602581526020016125e060259139600260006110dd61133f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118039092919063ffffffff16565b611347565b6001905092915050565b600061118761118061133f565b848461153e565b6001905092915050565b60006111b060008084815260200190815260200160002060000161201b565b9050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b611201600080848152602001908152602001600020600201546111fc61133f565b610fcc565b611256576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061248d6030913960400191505060405180910390fd5b6112608282611950565b5050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6000611337836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612030565b905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156113cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806125856024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611453576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806124456022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156115c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806125606025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561164a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806123986023913960400191505060405180910390fd5b6116558383836120a0565b6116c18160405180606001604052806026815260200161246760269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118039092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061175681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119e390919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906118b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561187557808201518184015260208101905061185a565b50505050905090810190601f1680156118a25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b6118e48160008085815260200190815260200160002060000161130f90919063ffffffff16565b1561194c576118f161133f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b611977816000808581526020019081526020016000206000016120b090919063ffffffff16565b156119df5761198461133f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080828401905083811015611a61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b611a73610e49565b611ae5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600660016101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611b2961133f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611bf9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611c05600083836120a0565b611c1a816003546119e390919063ffffffff16565b600381905550611c7281600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119e390919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611da5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061253f6021913960400191505060405180910390fd5b611db1826000836120a0565b611e1d816040518060600160405280602281526020016123ea60229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546118039092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e75816003546120e090919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b611eed610e49565b15611f60576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600660016101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611fa461133f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000611fe08360000183612163565b60001c905092915050565b6000612013836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6121e6565b905092915050565b600061202982600001612209565b9050919050565b600061203c83836121e6565b61209557826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905061209a565b600090505b92915050565b6120ab83838361221a565b505050565b60006120d8836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612288565b905092915050565b600082821115612158576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b6000818360000180549050116121c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806123766022913960400191505060405180910390fd5b8260000182815481106121d357fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b612225838383612370565b61222d610e49565b15612283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612634602a913960400191505060405180910390fd5b505050565b6000808360010160008481526020019081526020016000205490506000811461236457600060018203905060006001866000018054905003905060008660000182815481106122d357fe5b90600052602060002001549050808760000184815481106122f057fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061232857fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061236a565b60009150505b92915050565b50505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e706175736545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e7445524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20706175736545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c6645524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a2646970667358221220009f66598501208be1e1f7a1b737b2b3a0653ecceb7b7c23f94795128113451964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x861 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x87F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x8CD JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x945 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x757 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x7BB JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x81F JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x9010D07C GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x652 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6B6 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x739 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x540 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5E6 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x4F2 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x520 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x436 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x379 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x223 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x363 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB25 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CF PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x482 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A2 PUSH2 0xD11 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDA1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE35 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x528 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x582 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEA9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5EE PUSH2 0xF0B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x626 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x69E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6BE PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6FE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6E3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x72B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x741 PUSH2 0x109F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x807 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x84B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x869 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8CB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x895 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94D PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x9FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA19 PUSH2 0xA12 PUSH2 0x133F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3A DUP5 DUP5 DUP5 PUSH2 0x153E JUMP JUMPDEST PUSH2 0xAFB DUP5 PUSH2 0xA46 PUSH2 0x133F JUMP JUMPDEST PUSH2 0xAF6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24BD PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0xAAC PUSH2 0x133F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1803 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB4B PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xB46 PUSH2 0x133F JUMP JUMPDEST PUSH2 0xFCC JUMP JUMPDEST PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23BB PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBAA DUP3 DUP3 PUSH2 0x18BD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBCD PUSH2 0x133F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2605 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC5A DUP3 DUP3 PUSH2 0x1950 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD07 PUSH2 0xC6B PUSH2 0x133F JUMP JUMPDEST DUP5 PUSH2 0xD02 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0xC7C PUSH2 0x133F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x19E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD42 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xD3D PUSH2 0x133F JUMP JUMPDEST PUSH2 0xFCC JUMP JUMPDEST PUSH2 0xD97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x240C PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD9F PUSH2 0x1A6B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDD2 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xDCD PUSH2 0x133F JUMP JUMPDEST PUSH2 0xFCC JUMP JUMPDEST PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x24E5 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE31 DUP3 DUP3 PUSH2 0x1B56 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE46 PUSH2 0xE40 PUSH2 0x133F JUMP JUMPDEST DUP3 PUSH2 0x1D1F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE8 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x251B PUSH1 0x24 SWAP2 CODECOPY PUSH2 0xED9 DUP7 PUSH2 0xED4 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x1803 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xEFC DUP4 PUSH2 0xEF6 PUSH2 0x133F JUMP JUMPDEST DUP4 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0xF06 DUP4 DUP4 PUSH2 0x1D1F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF3C PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xF37 PUSH2 0x133F JUMP JUMPDEST PUSH2 0xFCC JUMP JUMPDEST PUSH2 0xF91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x37 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25A9 PUSH1 0x37 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF99 PUSH2 0x1EE5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC4 DUP3 PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1FD1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF5 DUP3 PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x1FEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1095 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x106A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1095 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1078 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1169 PUSH2 0x10B3 PUSH2 0x133F JUMP JUMPDEST DUP5 PUSH2 0x1164 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25E0 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x10DD PUSH2 0x133F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1803 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1187 PUSH2 0x1180 PUSH2 0x133F JUMP JUMPDEST DUP5 DUP5 PUSH2 0x153E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B0 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x201B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x1201 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x11FC PUSH2 0x133F JUMP JUMPDEST PUSH2 0xFCC JUMP JUMPDEST PUSH2 0x1256 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x248D PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1260 DUP3 DUP3 PUSH2 0x1950 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1337 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2030 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2585 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1453 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2445 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x15C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2560 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x164A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2398 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1655 DUP4 DUP4 DUP4 PUSH2 0x20A0 JUMP JUMPDEST PUSH2 0x16C1 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2467 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1803 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1756 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x19E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x18B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1875 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x185A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18A2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x18E4 DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x130F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x194C JUMPI PUSH2 0x18F1 PUSH2 0x133F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1977 DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x20B0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x19DF JUMPI PUSH2 0x1984 PUSH2 0x133F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1A61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A73 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0x1AE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1B29 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C05 PUSH1 0x0 DUP4 DUP4 PUSH2 0x20A0 JUMP JUMPDEST PUSH2 0x1C1A DUP2 PUSH1 0x3 SLOAD PUSH2 0x19E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1C72 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x19E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1DA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x253F PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DB1 DUP3 PUSH1 0x0 DUP4 PUSH2 0x20A0 JUMP JUMPDEST PUSH2 0x1E1D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23EA PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1803 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1E75 DUP2 PUSH1 0x3 SLOAD PUSH2 0x20E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1EED PUSH2 0xE49 JUMP JUMPDEST ISZERO PUSH2 0x1F60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1FA4 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE0 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2013 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x21E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2029 DUP3 PUSH1 0x0 ADD PUSH2 0x2209 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203C DUP4 DUP4 PUSH2 0x21E6 JUMP JUMPDEST PUSH2 0x2095 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x209A JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20AB DUP4 DUP4 DUP4 PUSH2 0x221A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D8 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2288 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2158 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0x21C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2376 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x21D3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2225 DUP4 DUP4 DUP4 PUSH2 0x2370 JUMP JUMPDEST PUSH2 0x222D PUSH2 0xE49 JUMP JUMPDEST ISZERO PUSH2 0x2283 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2634 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x2364 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SUB SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x22D3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x22F0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 ADD DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x2328 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x236A JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E647345524332303A207472616E PUSH20 0x66657220746F20746865207A65726F2061646472 PUSH6 0x737341636365 PUSH20 0x73436F6E74726F6C3A2073656E646572206D7573 PUSH21 0x20626520616E2061646D696E20746F206772616E74 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS POP PUSH19 0x657365744D696E7465725061757365723A206D PUSH22 0x737420686176652070617573657220726F6C6520746F KECCAK256 PUSH22 0x6E706175736545524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65416363 PUSH6 0x7373436F6E74 PUSH19 0x6F6C3A2073656E646572206D75737420626520 PUSH2 0x6E20 PUSH2 0x646D PUSH10 0x6E20746F207265766F6B PUSH6 0x45524332303A KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332305072657365 PUSH21 0x4D696E7465725061757365723A206D757374206861 PUSH23 0x65206D696E74657220726F6C6520746F206D696E744552 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654552 NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS POP PUSH19 0x657365744D696E7465725061757365723A206D PUSH22 0x737420686176652070617573657220726F6C6520746F KECCAK256 PUSH17 0x6175736545524332303A20646563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F41636365 PUSH20 0x73436F6E74726F6C3A2063616E206F6E6C792072 PUSH6 0x6E6F756E6365 KECCAK256 PUSH19 0x6F6C657320666F722073656C66455243323050 PUSH2 0x7573 PUSH2 0x626C PUSH6 0x3A20746F6B65 PUSH15 0x207472616E73666572207768696C65 KECCAK256 PUSH17 0x6175736564A2646970667358221220009F PUSH7 0x598501208BE1E1 0xF7 LOG1 0xB7 CALLDATACOPY 0xB2 0xB3 LOG0 PUSH6 0x3ECCEB7B7C23 0xF9 SELFBALANCE SWAP6 SLT DUP2 SGT GASLIMIT NOT PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "824:1980:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3235:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4877:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4282:112:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4644:223;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3086:89:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5818:205:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5589:215:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2440:175:3;;;:::i;:::-;;1659:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;524:89:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1052:84:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3399:125:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;919:290:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2064:169:3;;;:::i;:::-;;3965:136:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2950:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2370:93:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1727:49:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6291:266:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3727:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3255:125:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;919:62:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5101:226:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3957:149:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;987:62:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2168:89:4;2213:13;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;4399:4;4392:11;;4244:166;;;;:::o;3235:106::-;3296:7;3322:12;;3315:19;;3235:106;:::o;4877:317::-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;:11;:19;5088:6;5076:19;;;;;;;;;;;;;;;:33;5096:12;:10;:12::i;:::-;5076:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5045:8;:121::i;:::-;5183:4;5176:11;;4877:317;;;;;:::o;4282:112:1:-;4339:7;4365:6;:12;4372:4;4365:12;;;;;;;;;;;:22;;;4358:29;;4282:112;;;:::o;4644:223::-;4727:45;4735:6;:12;4742:4;4735:12;;;;;;;;;;;:22;;;4759:12;:10;:12::i;:::-;4727:7;:45::i;:::-;4719:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:25;4846:4;4852:7;4835:10;:25::i;:::-;4644:223;;:::o;3086:89:4:-;3135:5;3159:9;;;;;;;;;;;3152:16;;3086:89;:::o;5818:205:1:-;5915:12;:10;:12::i;:::-;5904:23;;:7;:23;;;5896:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5990:26;6002:4;6008:7;5990:11;:26::i;:::-;5818:205;;:::o;5589:215:4:-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;5725:25;;;;;;;;;;;;;;;:34;5751:7;5725:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5693:8;:83::i;:::-;5793:4;5786:11;;5589:215;;;;:::o;2440:175:3:-;2492:34;1025:24;2513:12;:10;:12::i;:::-;2492:7;:34::i;:::-;2484:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2598:10;:8;:10::i;:::-;2440:175::o;1659:202::-;1734:34;957:24;1755:12;:10;:12::i;:::-;1734:7;:34::i;:::-;1726:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1837:17;1843:2;1847:6;1837:5;:17::i;:::-;1659:202;;:::o;524:89:5:-;579:27;585:12;:10;:12::i;:::-;599:6;579:5;:27::i;:::-;524:89;:::o;1052:84:11:-;1099:4;1122:7;;;;;;;;;;;1115:14;;1052:84;:::o;3399:125:4:-;3473:7;3499:9;:18;3509:7;3499:18;;;;;;;;;;;;;;;;3492:25;;3399:125;;;:::o;919:290:5:-;995:26;1024:84;1061:6;1024:84;;;;;;;;;;;;;;;;;:32;1034:7;1043:12;:10;:12::i;:::-;1024:9;:32::i;:::-;:36;;:84;;;;;:::i;:::-;995:113;;1119:51;1128:7;1137:12;:10;:12::i;:::-;1151:18;1119:8;:51::i;:::-;1180:22;1186:7;1195:6;1180:5;:22::i;:::-;919:290;;;:::o;2064:169:3:-;2114:34;1025:24;2135:12;:10;:12::i;:::-;2114:7;:34::i;:::-;2106:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2218:8;:6;:8::i;:::-;2064:169::o;3965:136:1:-;4038:7;4064:30;4088:5;4064:6;:12;4071:4;4064:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;4057:37;;3965:136;;;;:::o;2950:137::-;3019:4;3042:38;3072:7;3042:6;:12;3049:4;3042:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;3035:45;;2950:137;;;;:::o;2370:93:4:-;2417:13;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2370:93;:::o;1727:49:1:-;1772:4;1727:49;;;:::o;6291:266:4:-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;6432:25;;;;;;;;;;;;;;;:34;6458:7;6432:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6400:8;:129::i;:::-;6546:4;6539:11;;6291:266;;;;:::o;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;:::-;3888:4;3881:11;;3727:172;;;;:::o;3255:125:1:-;3318:7;3344:29;:6;:12;3351:4;3344:12;;;;;;;;;;;:20;;:27;:29::i;:::-;3337:36;;3255:125;;;:::o;919:62:3:-;957:24;919:62;:::o;5101:226:1:-;5185:45;5193:6;:12;5200:4;5193:12;;;;;;;;;;;:22;;;5217:12;:10;:12::i;:::-;5185:7;:45::i;:::-;5177:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5294:26;5306:4;5312:7;5294:11;:26::i;:::-;5101:226;;:::o;3957:149:4:-;4046:7;4072:11;:18;4084:5;4072:18;;;;;;;;;;;;;;;:27;4091:7;4072:27;;;;;;;;;;;;;;;;4065:34;;3957:149;;;;:::o;987:62:3:-;1025:24;987:62;:::o;6429:150:10:-;6499:4;6522:50;6527:3;:10;;6563:5;6547:23;;6539:32;;6522:4;:50::i;:::-;6515:57;;6429:150;;;;:::o;598:104:9:-;651:15;685:10;678:17;;598:104;:::o;9355:340:4:-;9473:1;9456:19;;:5;:19;;;;9448:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9553:1;9534:21;;:7;:21;;;;9526:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9635:6;9605:11;:18;9617:5;9605:18;;;;;;;;;;;;;;;:27;9624:7;9605:27;;;;;;;;;;;;;;;:36;;;;9672:7;9656:32;;9665:5;9656:32;;;9681:6;9656:32;;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;7154:1;7136:20;;:6;:20;;;;7128:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7237:1;7216:23;;:9;:23;;;;7208:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;:9;:17;7378:6;7368:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7348:9;:17;7358:6;7348:17;;;;;;;;;;;;;;;:91;;;;7472:32;7497:6;7472:9;:20;7482:9;7472:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7449:9;:20;7459:9;7449:20;;;;;;;;;;;;;;;:55;;;;7536:9;7519:35;;7528:6;7519:35;;;7547:6;7519:35;;;;;;;;;;;;;;;;;;7031:530;;;:::o;5432:163:2:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;7025:184:1:-;7098:33;7123:7;7098:6;:12;7105:4;7098:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;7094:109;;;7179:12;:10;:12::i;:::-;7152:40;;7170:7;7152:40;;7164:4;7152:40;;;;;;;;;;7094:109;7025:184;;:::o;7215:188::-;7289:36;7317:7;7289:6;:12;7296:4;7289:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;7285:112;;;7373:12;:10;:12::i;:::-;7346:40;;7364:7;7346:40;;7358:4;7346:40;;;;;;;;;;7285:112;7215:188;;:::o;2690:175:2:-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;2064:117:11:-;1631:8;:6;:8::i;:::-;1623:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2132:5:::1;2122:7;;:15;;;;;;;;;;;;;;;;;;2152:22;2161:12;:10;:12::i;:::-;2152:22;;;;;;;;;;;;;;;;;;;;2064:117::o:0;7832:370:4:-;7934:1;7915:21;;:7;:21;;;;7907:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7983:49;8012:1;8016:7;8025:6;7983:20;:49::i;:::-;8058:24;8075:6;8058:12;;:16;;:24;;;;:::i;:::-;8043:12;:39;;;;8113:30;8136:6;8113:9;:18;8123:7;8113:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8092:9;:18;8102:7;8092:18;;;;;;;;;;;;;;;:51;;;;8179:7;8158:37;;8175:1;8158:37;;;8188:6;8158:37;;;;;;;;;;;;;;;;;;7832:370;;:::o;8522:410::-;8624:1;8605:21;;:7;:21;;;;8597:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8675:49;8696:7;8713:1;8717:6;8675:20;:49::i;:::-;8756:68;8779:6;8756:68;;;;;;;;;;;;;;;;;:9;:18;8766:7;8756:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;8735:9;:18;8745:7;8735:18;;;;;;;;;;;;;;;:89;;;;8849:24;8866:6;8849:12;;:16;;:24;;;;:::i;:::-;8834:12;:39;;;;8914:1;8888:37;;8897:7;8888:37;;;8918:6;8888:37;;;;;;;;;;;;;;;;;;8522:410;;:::o;1817:115:11:-;1366:8;:6;:8::i;:::-;1365:9;1357:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1886:4:::1;1876:7;;:14;;;;;;;;;;;;;;;;;;1905:20;1912:12;:10;:12::i;:::-;1905:20;;;;;;;;;;;;;;;;;;;;1817:115::o:0;7677:156:10:-;7751:7;7801:22;7805:3;:10;;7817:5;7801:3;:22::i;:::-;7793:31;;7770:56;;7677:156;;;;:::o;6984:165::-;7064:4;7087:55;7097:3;:10;;7133:5;7117:23;;7109:32;;7087:9;:55::i;:::-;7080:62;;6984:165;;;;:::o;7230:115::-;7293:7;7319:19;7327:3;:10;;7319:7;:19::i;:::-;7312:26;;7230:115;;;:::o;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;1761:3;:11;;1778:5;1761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:3;:11;;:18;;;;1919:3;:12;;:19;1932:5;1919:19;;;;;;;;;;;:40;;;;1980:4;1973:11;;;;1719:319;2022:5;2015:12;;1640:404;;;;;:::o;2621:181:3:-;2751:44;2778:4;2784:2;2788:6;2751:26;:44::i;:::-;2621:181;;;:::o;6747:156:10:-;6820:4;6843:53;6851:3;:10;;6887:5;6871:23;;6863:32;;6843:7;:53::i;:::-;6836:60;;6747:156;;;;:::o;3136:155:2:-;3194:7;3226:1;3221;:6;;3213:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:1;3279;:5;3272:12;;3136:155;;;;:::o;4452:201:10:-;4519:7;4567:5;4546:3;:11;;:18;;;;:26;4538:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;3805:127::-;3878:4;3924:1;3901:3;:12;;:19;3914:5;3901:19;;;;;;;;;;;;:24;;3894:31;;3805:127;;;;:::o;4013:107::-;4069:7;4095:3;:11;;:18;;;;4088:25;;4013:107;;;:::o;590:234:6:-;698:44;725:4;731:2;735:6;698:26;:44::i;:::-;762:8;:6;:8::i;:::-;761:9;753:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;590:234;;;:::o;2212:1512:10:-;2278:4;2394:18;2415:3;:12;;:19;2428:5;2415:19;;;;;;;;;;;;2394:40;;2463:1;2449:10;:15;2445:1273;;2806:21;2843:1;2830:10;:14;2806:38;;2858:17;2899:1;2878:3;:11;;:18;;;;:22;2858:42;;3140:17;3160:3;:11;;3172:9;3160:22;;;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;:38;;;;3420:1;3404:13;:17;3378:3;:12;;:23;3391:9;3378:23;;;;;;;;;;;:43;;;;3527:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;2212:1512;;;;;:::o;10701:92:4:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1975000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "322",
								"MINTER_ROLE()": "249",
								"PAUSER_ROLE()": "315",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1242",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "1101",
								"decreaseAllowance(address,uint256)": "infinite",
								"getRoleAdmin(bytes32)": "1296",
								"getRoleMember(bytes32,uint256)": "infinite",
								"getRoleMemberCount(bytes32)": "1379",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"pause()": "infinite",
								"paused()": "1216",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unpause()": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1300,
									"end": 1304,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1306,
									"end": 1312,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2040,
									"end": 2045,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2096,
									"name": "PUSH",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 945,
									"end": 950,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 935,
									"end": 942,
									"name": "PUSH",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 935,
									"end": 942,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 935,
									"end": 950,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 935,
									"end": 950,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 935,
									"end": 950,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 935,
									"end": 950,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 935,
									"end": 950,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 935,
									"end": 950,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 935,
									"end": 950,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 935,
									"end": 950,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 935,
									"end": 950,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 935,
									"end": 950,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 935,
									"end": 950,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 935,
									"end": 950,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 935,
									"end": 950,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 935,
									"end": 950,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 935,
									"end": 950,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 935,
									"end": 950,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 935,
									"end": 950,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 935,
									"end": 950,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1324,
									"end": 1368,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1772,
									"end": 1776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1335,
									"end": 1353,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1335,
									"end": 1353,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1355,
									"end": 1367,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 1355,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1355,
									"end": 1365,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1355,
									"end": 1365,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1355,
									"end": 1367,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1355,
									"end": 1367,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1355,
									"end": 1367,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1355,
									"end": 1367,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 1355,
									"end": 1367,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1324,
									"end": 1334,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1324,
									"end": 1334,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1324,
									"end": 1334,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1324,
									"end": 1368,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1324,
									"end": 1368,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1324,
									"end": 1368,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1324,
									"end": 1368,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1324,
									"end": 1368,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1379,
									"end": 1416,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 957,
									"end": 981,
									"name": "PUSH",
									"source": 3,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 1403,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1403,
									"end": 1413,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1403,
									"end": 1413,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 1413,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1415,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 1415,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 1415,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 1415,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1403,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1379,
									"end": 1389,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1379,
									"end": 1389,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1379,
									"end": 1389,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1379,
									"end": 1416,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1379,
									"end": 1416,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1379,
									"end": 1416,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1379,
									"end": 1416,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1379,
									"end": 1416,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1463,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 1025,
									"end": 1049,
									"name": "PUSH",
									"source": 3,
									"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
								},
								{
									"begin": 1450,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 1450,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1450,
									"end": 1460,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1460,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1450,
									"end": 1462,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1462,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1450,
									"end": 1462,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1450,
									"end": 1462,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 1450,
									"end": 1462,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1426,
									"end": 1436,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1426,
									"end": 1436,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1463,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1426,
									"end": 1463,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1426,
									"end": 1463,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1426,
									"end": 1463,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 1426,
									"end": 1463,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1470,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 651,
									"end": 666,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 678,
									"end": 695,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 678,
									"end": 695,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6683,
									"end": 6690,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6666,
									"end": 6676,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 6666,
									"end": 6676,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6666,
									"end": 6676,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6666,
									"end": 6691,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6588,
									"end": 6698,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7123,
									"end": 7130,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7104,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7105,
									"end": 7109,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7110,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7118,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7118,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551731"
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7122,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7098,
									"end": 7131,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7094,
									"end": 7203,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7094,
									"end": 7203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 7094,
									"end": 7203,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 7179,
									"end": 7189,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 7179,
									"end": 7189,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7179,
									"end": 7189,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 7179,
									"end": 7191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7170,
									"end": 7177,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7164,
									"end": 7168,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "PUSH",
									"source": 1,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7152,
									"end": 7192,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 7094,
									"end": 7203,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 7094,
									"end": 7203,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7025,
									"end": 7209,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6499,
									"end": 6503,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 6527,
									"end": 6530,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6527,
									"end": 6537,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6527,
									"end": 6537,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6563,
									"end": 6568,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6547,
									"end": 6570,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6547,
									"end": 6570,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6539,
									"end": 6571,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6539,
									"end": 6571,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 6522,
									"end": 6526,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 6522,
									"end": 6526,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6522,
									"end": 6526,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 6522,
									"end": 6572,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6515,
									"end": 6572,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6515,
									"end": 6572,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6429,
									"end": 6579,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1703,
									"end": 1707,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1734,
									"end": 1737,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1739,
									"end": 1744,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1724,
									"end": 1733,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1724,
									"end": 1733,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1724,
									"end": 1733,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1724,
									"end": 1745,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1719,
									"end": 2038,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1719,
									"end": 2038,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1764,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1772,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1761,
									"end": 1772,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1778,
									"end": 1783,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1784,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1941,
									"end": 1944,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1941,
									"end": 1952,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1941,
									"end": 1952,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1941,
									"end": 1959,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1941,
									"end": 1959,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1941,
									"end": 1959,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1941,
									"end": 1959,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1922,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1931,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1919,
									"end": 1931,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1932,
									"end": 1937,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1919,
									"end": 1938,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1959,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1959,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1959,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1919,
									"end": 1959,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1980,
									"end": 1984,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1973,
									"end": 1984,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1973,
									"end": 1984,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1973,
									"end": 1984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1973,
									"end": 1984,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1719,
									"end": 2038,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1719,
									"end": 2038,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2022,
									"end": 2027,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1640,
									"end": 2044,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3878,
									"end": 3882,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3924,
									"end": 3925,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3904,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3901,
									"end": 3913,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3914,
									"end": 3919,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3920,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3925,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 3901,
									"end": 3925,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3894,
									"end": 3925,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3894,
									"end": 3925,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3805,
									"end": 3932,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "tag",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "tag",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "tag",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "tag",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "tag",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "tag",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "tag",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 824,
									"end": 2804,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220009f66598501208be1e1f7a1b737b2b3a0653ecceb7b7c23f94795128113451964736f6c634300060c0033",
									".code": [
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "D5391393"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "D5391393"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "D547741F"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "E63AB1E9"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "CA15C873"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "9010D07C"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "9010D07C"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "91D14854"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "A217FDDF"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "79CC6790"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "8456CB59"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "3F4BA83A"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "3F4BA83A"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "40C10F19"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "42966C68"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "5C975ABB"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "36568ABE"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "248A9CA3"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "2F2FF15D"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 2804,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2615,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2440,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2440,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2440,
											"end": 2615,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2440,
											"end": 2615,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2440,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2615,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2233,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2064,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2064,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2064,
											"end": 2233,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2064,
											"end": 2233,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2064,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2233,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 919,
											"end": 981,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 919,
											"end": 981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 919,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 919,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 919,
											"end": 981,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 919,
											"end": 981,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 919,
											"end": 981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 919,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 919,
											"end": 981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 919,
											"end": 981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 919,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 919,
											"end": 981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 919,
											"end": 981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 919,
											"end": 981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 981,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4327,
											"end": 4331,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4352,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4343,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3296,
											"end": 3303,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5054,
											"end": 5060,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5062,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH data",
											"source": 4,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5087,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5094,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5096,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4339,
											"end": 4346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4376,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4377,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4394,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4742,
											"end": 4746,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4735,
											"end": 4757,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4735,
											"end": 4757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4735,
											"end": 4757,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4759,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4759,
											"end": 4771,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4759,
											"end": 4771,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4759,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4727,
											"end": 4772,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4727,
											"end": 4772,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4727,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH data",
											"source": 1,
											"value": "BA7116025F1EF6B158A2BD2238E617F30E17C9E456917D901086CA4F8AD2811"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4719,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4846,
											"end": 4850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4835,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4867,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5915,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5915,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5904,
											"end": 5911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5904,
											"end": 5927,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH data",
											"source": 1,
											"value": "FB06FA8FF2141E8ED74502F6792273793F25F0E9D3CF15344F3F5A0D4948FD4B"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 5896,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5990,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6002,
											"end": 6006,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5990,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5990,
											"end": 6016,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5990,
											"end": 6016,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 5990,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6023,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5677,
											"end": 5681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5736,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5758,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5693,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5793,
											"end": 5797,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2440,
											"end": 2615,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2440,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1025,
											"end": 1049,
											"name": "PUSH",
											"source": 3,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2513,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2513,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2513,
											"end": 2525,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2513,
											"end": 2525,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2513,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2492,
											"end": 2526,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2492,
											"end": 2526,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2492,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "PUSH",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "PUSH data",
											"source": 3,
											"value": "176E32C23B35BED3CD8EE309232E2364823F6F66078E0CF4F5B5E41EEE016186"
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "PUSH",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2484,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2598,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2598,
											"end": 2608,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2598,
											"end": 2608,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2598,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2615,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 957,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 1755,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1755,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1755,
											"end": 1767,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1755,
											"end": 1767,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1755,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1734,
											"end": 1768,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1734,
											"end": 1768,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1734,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "PUSH",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "PUSH data",
											"source": 3,
											"value": "9EFA111136B49CF2058CE33F60FA04A5749FD87012D74CADC251E21E1DB53342"
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "PUSH",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1726,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1843,
											"end": 1845,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1837,
											"end": 1854,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1837,
											"end": 1854,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1837,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1861,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 579,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 585,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 585,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 585,
											"end": 597,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 585,
											"end": 597,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 585,
											"end": 597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 599,
											"end": 605,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 579,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 579,
											"end": 606,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 579,
											"end": 606,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 579,
											"end": 606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 524,
											"end": 613,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1103,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1115,
											"end": 1129,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1115,
											"end": 1129,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3508,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 995,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1061,
											"end": 1067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "PUSH data",
											"source": 5,
											"value": "A287C363786607A1457A2D9D12FA61C0073358E02D76B4035FC2C2D86A19C0DB"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1034,
											"end": 1041,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1043,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1043,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1043,
											"end": 1055,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1043,
											"end": 1055,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1043,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1024,
											"end": 1056,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1024,
											"end": 1056,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1024,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1024,
											"end": 1060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 995,
											"end": 1108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 995,
											"end": 1108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1119,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1128,
											"end": 1135,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1137,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1137,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1137,
											"end": 1149,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1149,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1137,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1169,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1119,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1119,
											"end": 1170,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1119,
											"end": 1170,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1119,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1180,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1186,
											"end": 1193,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1180,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1180,
											"end": 1202,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1180,
											"end": 1202,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1180,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2064,
											"end": 2233,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2064,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1025,
											"end": 1049,
											"name": "PUSH",
											"source": 3,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2135,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2135,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2135,
											"end": 2147,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2147,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2135,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2114,
											"end": 2148,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2114,
											"end": 2148,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2114,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "PUSH data",
											"source": 3,
											"value": "D581FB23A6D539F3015B3485052424734F4B05014D1D5211F35A049CFF57E330"
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2106,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2218,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2218,
											"end": 2226,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2218,
											"end": 2226,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2218,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2233,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 4088,
											"end": 4093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 4064,
											"end": 4087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 4064,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 4101,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 3072,
											"end": 3079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3053,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 3042,
											"end": 3071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 3042,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3035,
											"end": 3080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3035,
											"end": 3080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3087,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1776,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 6409,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH data",
											"source": 4,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6443,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6400,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6546,
											"end": 6550,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3839,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3892,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3318,
											"end": 3325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3344,
											"end": 3350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3355,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3344,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3380,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 919,
											"end": 981,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 919,
											"end": 981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 957,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 919,
											"end": 981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 919,
											"end": 981,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 5193,
											"end": 5199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5200,
											"end": 5204,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5205,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5215,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5193,
											"end": 5215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5215,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 5217,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 5217,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5185,
											"end": 5230,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5185,
											"end": 5230,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 5185,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH data",
											"source": 1,
											"value": "64344570EAB7406CA49D34D38BF2B2496DFDA914405390C5057C8B0AABF798A3"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 5177,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5294,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5306,
											"end": 5310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5294,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5294,
											"end": 5320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5294,
											"end": 5320,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5294,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5327,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4083,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4089,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4098,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1049,
											"name": "PUSH",
											"source": 3,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1049,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6522,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 6527,
											"end": 6530,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6527,
											"end": 6537,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6537,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6568,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6547,
											"end": 6570,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6547,
											"end": 6570,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6539,
											"end": 6571,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6571,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 6522,
											"end": 6572,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6522,
											"end": 6572,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 6522,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6515,
											"end": 6572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6515,
											"end": 6572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6579,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9473,
											"end": 9474,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9461,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH data",
											"source": 4,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9554,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9534,
											"end": 9541,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH data",
											"source": 4,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9635,
											"end": 9641,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9616,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9622,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9631,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9679,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9665,
											"end": 9670,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9681,
											"end": 9687,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7154,
											"end": 7155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7136,
											"end": 7142,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH data",
											"source": 4,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH data",
											"source": 4,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7290,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH data",
											"source": 4,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7377,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7364,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7481,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7482,
											"end": 7491,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7458,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7545,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7534,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7547,
											"end": 7553,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5584,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 7123,
											"end": 7130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7109,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 7098,
											"end": 7122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7094,
											"end": 7203,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7094,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 7094,
											"end": 7203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 7179,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7170,
											"end": 7177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7164,
											"end": 7168,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7192,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7094,
											"end": 7203,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 7094,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7025,
											"end": 7209,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 7317,
											"end": 7324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 7300,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7289,
											"end": 7309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 7289,
											"end": 7316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 7289,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7285,
											"end": 7397,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7285,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 7285,
											"end": 7397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7373,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 7373,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7373,
											"end": 7385,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7373,
											"end": 7385,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 7373,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7386,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7285,
											"end": 7397,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 7285,
											"end": 7397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7215,
											"end": 7403,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2064,
											"end": 2181,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 2064,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 1631,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 11,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2132,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2129,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2122,
											"end": 2129,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "PUSH",
											"source": 11,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 2161,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 2064,
											"end": 2181,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7934,
											"end": 7935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7915,
											"end": 7922,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7983,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 8012,
											"end": 8013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8016,
											"end": 8023,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8025,
											"end": 8031,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7983,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 7983,
											"end": 8032,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7983,
											"end": 8032,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 7983,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 8075,
											"end": 8081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8058,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 8058,
											"end": 8074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8043,
											"end": 8055,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8043,
											"end": 8082,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8043,
											"end": 8082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8043,
											"end": 8082,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8043,
											"end": 8082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 8136,
											"end": 8142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8122,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8123,
											"end": 8130,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 8113,
											"end": 8135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8101,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8102,
											"end": 8109,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8143,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 8186,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8175,
											"end": 8176,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8188,
											"end": 8194,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8522,
											"end": 8932,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 8522,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8624,
											"end": 8625,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8605,
											"end": 8626,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8605,
											"end": 8626,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8605,
											"end": 8612,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8605,
											"end": 8626,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8605,
											"end": 8626,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8605,
											"end": 8626,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8605,
											"end": 8626,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH data",
											"source": 4,
											"value": "B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 8696,
											"end": 8703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8713,
											"end": 8714,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8717,
											"end": 8723,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 8675,
											"end": 8724,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8675,
											"end": 8724,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 8675,
											"end": 8724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 8779,
											"end": 8785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "PUSH data",
											"source": 4,
											"value": "149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8765,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8766,
											"end": 8773,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 8756,
											"end": 8778,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8735,
											"end": 8744,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8745,
											"end": 8752,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8735,
											"end": 8824,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8735,
											"end": 8824,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8735,
											"end": 8824,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8735,
											"end": 8824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8849,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 8866,
											"end": 8872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8849,
											"end": 8861,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8849,
											"end": 8861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8849,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 8849,
											"end": 8865,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8849,
											"end": 8873,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8849,
											"end": 8873,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8849,
											"end": 8873,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8849,
											"end": 8873,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8849,
											"end": 8873,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8849,
											"end": 8873,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 8849,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8834,
											"end": 8846,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8834,
											"end": 8873,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8834,
											"end": 8873,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8834,
											"end": 8873,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8834,
											"end": 8873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8914,
											"end": 8915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8897,
											"end": 8904,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8918,
											"end": 8924,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8522,
											"end": 8932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8522,
											"end": 8932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8522,
											"end": 8932,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1817,
											"end": 1932,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 1817,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1886,
											"end": 1890,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 11,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 1912,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1932,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7751,
											"end": 7758,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7801,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 7805,
											"end": 7808,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7805,
											"end": 7815,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7805,
											"end": 7815,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7817,
											"end": 7822,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7801,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 7801,
											"end": 7823,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7801,
											"end": 7823,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 7801,
											"end": 7823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7793,
											"end": 7824,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7793,
											"end": 7824,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 7770,
											"end": 7826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7770,
											"end": 7826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7677,
											"end": 7833,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7064,
											"end": 7068,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 7097,
											"end": 7100,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7097,
											"end": 7107,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7097,
											"end": 7107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7133,
											"end": 7138,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7117,
											"end": 7140,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7117,
											"end": 7140,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7109,
											"end": 7141,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7109,
											"end": 7141,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 7087,
											"end": 7142,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7087,
											"end": 7142,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 7087,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7080,
											"end": 7142,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7080,
											"end": 7142,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7149,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7293,
											"end": 7300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 7327,
											"end": 7330,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7327,
											"end": 7337,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7327,
											"end": 7337,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7319,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7312,
											"end": 7338,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7312,
											"end": 7338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7345,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1703,
											"end": 1707,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 1734,
											"end": 1737,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1744,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 1724,
											"end": 1745,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1724,
											"end": 1745,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 1724,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1719,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 1719,
											"end": 2038,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1764,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1778,
											"end": 1783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1784,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1941,
											"end": 1944,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1941,
											"end": 1952,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1941,
											"end": 1952,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1941,
											"end": 1959,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1941,
											"end": 1959,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1941,
											"end": 1959,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1941,
											"end": 1959,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1922,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1931,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1919,
											"end": 1931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1937,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1959,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1959,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1959,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1959,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 1984,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1973,
											"end": 1984,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 1984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 1973,
											"end": 1984,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1719,
											"end": 2038,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 1719,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2027,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2027,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2015,
											"end": 2027,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 2044,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2621,
											"end": 2802,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2621,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2751,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2778,
											"end": 2782,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 2786,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2751,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 2751,
											"end": 2795,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2751,
											"end": 2795,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2751,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2621,
											"end": 2802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2621,
											"end": 2802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2621,
											"end": 2802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2621,
											"end": 2802,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6820,
											"end": 6824,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6843,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 6851,
											"end": 6854,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6851,
											"end": 6861,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6887,
											"end": 6892,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6871,
											"end": 6894,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6871,
											"end": 6894,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6863,
											"end": 6895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6863,
											"end": 6895,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 6843,
											"end": 6896,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6843,
											"end": 6896,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 6843,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6836,
											"end": 6896,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6836,
											"end": 6896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6747,
											"end": 6903,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4519,
											"end": 4526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4567,
											"end": 4572,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4549,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4564,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4564,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4564,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4572,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH data",
											"source": 10,
											"value": "45D6834E6193A687012A3AD777F612279E549B6945364D9D2324F48610D3CBB"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "CODECOPY",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 4538,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4631,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4639,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4639,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4640,
											"end": 4645,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4621,
											"end": 4646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4621,
											"end": 4646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4452,
											"end": 4653,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3878,
											"end": 3882,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3904,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3919,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3920,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3925,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3925,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3894,
											"end": 3925,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3894,
											"end": 3925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3932,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4069,
											"end": 4076,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4098,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4088,
											"end": 4113,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4088,
											"end": 4113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4013,
											"end": 4120,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 590,
											"end": 824,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 590,
											"end": 824,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 698,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 725,
											"end": 729,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 731,
											"end": 733,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 735,
											"end": 741,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 698,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 698,
											"end": 742,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 698,
											"end": 742,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 698,
											"end": 742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 762,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 762,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 762,
											"end": 770,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 762,
											"end": 770,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 762,
											"end": 770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 761,
											"end": 770,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH data",
											"source": 6,
											"value": "FCB1FC9F3615FD38AB90D28B50A608758C295EEACBD5840421A4EE3B0DF2F1F4"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 753,
											"end": 817,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 590,
											"end": 824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 590,
											"end": 824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 590,
											"end": 824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 590,
											"end": 824,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2282,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2418,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2427,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2415,
											"end": 2427,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2433,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2434,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2434,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2434,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2463,
											"end": 2464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2464,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 2445,
											"end": 3718,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2827,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2830,
											"end": 2840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2844,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2844,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2900,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2878,
											"end": 2881,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2889,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2889,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2900,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2900,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2900,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3157,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3163,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3171,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3171,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3172,
											"end": 3181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3312,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3277,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3285,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3285,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3286,
											"end": 3299,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3421,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3417,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3404,
											"end": 3421,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3381,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3390,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3378,
											"end": 3390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3400,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3378,
											"end": 3401,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3421,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3421,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3530,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3538,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3622,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3631,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3619,
											"end": 3631,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3638,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3612,
											"end": 3638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3612,
											"end": 3638,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3660,
											"end": 3664,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 3718,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 2445,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3702,
											"end": 3707,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3707,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 3724,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									],
									".data": {
										"149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"176E32C23B35BED3CD8EE309232E2364823F6F66078E0CF4F5B5E41EEE016186": "45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"45D6834E6193A687012A3AD777F612279E549B6945364D9D2324F48610D3CBB": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"64344570EAB7406CA49D34D38BF2B2496DFDA914405390C5057C8B0AABF798A3": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"9EFA111136B49CF2058CE33F60FA04A5749FD87012D74CADC251E21E1DB53342": "45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
										"A287C363786607A1457A2D9D12FA61C0073358E02D76B4035FC2C2D86A19C0DB": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
										"B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"BA7116025F1EF6B158A2BD2238E617F30E17C9E456917D901086CA4F8AD2811": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"D581FB23A6D539F3015B3485052424734F4B05014D1D5211F35A049CFF57E330": "45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f207061757365",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"FB06FA8FF2141E8ED74502F6792273793F25F0E9D3CF15344F3F5A0D4948FD4B": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
										"FCB1FC9F3615FD38AB90D28B50A608758C295EEACBD5840421A4EE3B0DF2F1F4": "45524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"PAUSER_ROLE()": "e63ab1e9",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{ERC20} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"constructor\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. See {ERC20-constructor}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":\"ERC20PresetMinterPauser\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x4fc155a2f7837603d69a13cfa481eb5e7f5e02cb77e2ec9edbac30986db37988\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0855147e38b5e36288a8df73b8da49132f14ec7abb19041b0c98872263643aaa\",\"dweb:/ipfs/QmSrSysyFUYQq7hbJaJXG7EyZW6ezDBzEJx3SABp6eiJSS\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xa7c607ed4a0b2bebb811a398838ce4b5165e490f420a06337478eb2ba8c90cfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7eaf468e140d3430711cb859fbb41b097093069a75bfe4ab19e515c59f8b78ea\",\"dweb:/ipfs/QmYvdoCh8TAX7ucpMZspPpHpQZSuNe8cQTrbZyUcy3caqc\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x9c0eb3b0e11d2480d49991dc384f1e5f9c9b9967cc81944d50916a9b9c6c4984\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99e4033d778624992e86f0b6d801a4f6d7b5c0cd5c79c1296be90a051ad5f5af\",\"dweb:/ipfs/QmShYmkUqh6pDEeoWadZ24icmCr4C2Xys1uE5boivPmbwf\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xa22af140ae7ec1f8f2f3bed5869cd0d548dfaac66343f0efc7324ff34aaf1254\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fed479feda7354e89c095fde0927dcb581f460257bf93b7db54b2b902b4bbd48\",\"dweb:/ipfs/QmSDUhS2AQvTGXHwaxDgAXtwXKCgQh2kp1nwhwUgr2hQZK\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x212fb1b1d4beaf74354dad9bc329f44ee3c5375ef1c32acff76b4ecefc10f1d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d21c68cb321d1c8d0fa39fd9ecb6bbe3b2f26623b0f38af280a010c916c85f23\",\"dweb:/ipfs/Qmf2P51HRC4ekDHLYfbXu5SXR33gXrWtq6oKSmfyWqVRuC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol:ERC20PresetMinterPauser",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 793,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol:ERC20PresetMinterPauser",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 799,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol:ERC20PresetMinterPauser",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 801,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol:ERC20PresetMinterPauser",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 803,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol:ERC20PresetMinterPauser",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 805,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol:ERC20PresetMinterPauser",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 807,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol:ERC20PresetMinterPauser",
								"label": "_decimals",
								"offset": 0,
								"slot": "6",
								"type": "t_uint8"
							},
							{
								"astId": 2282,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol:ERC20PresetMinterPauser",
								"label": "_paused",
								"offset": 1,
								"slot": "6",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressSet)2048_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 2047,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol:ERC20PresetMinterPauser",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1783_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol:ERC20PresetMinterPauser",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)2048_storage"
									},
									{
										"astId": 20,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol:ERC20PresetMinterPauser",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Set)1783_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1778,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol:ERC20PresetMinterPauser",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1782,
										"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol:ERC20PresetMinterPauser",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2040:2045  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2032:2037  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2065:2072  symbol_ */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2055:2062  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2094:2096  18 */\n  0x12\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2082:2091  _decimals */\n  0x05\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_29)\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_39:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_39)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_42\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_42:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2213:2226  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4327:4331  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      tag_58\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4352:4362  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4366:4373  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4375:4381  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4343:4351  _approve */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4399:4403  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4392:4403  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3296:3303  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3322:3334  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3315:3334  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4983:4987  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5009:5015  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5017:5026  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5028:5034  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4999:5008  _transfer */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5054:5060  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      tag_66\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5062:5072  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5114:5120  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5076:5087  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5088:5094  sender */\n      dup12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      tag_68\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5096:5106  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5076:5113  _allowances[sender][_msgSender()].sub */\n      tag_69\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5045:5053  _approve */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5183:5187  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5176:5187  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_30:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3135:3140  uint8 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3159:3168  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3152:3168  return _decimals */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5677:5681  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5702:5712  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5716:5723  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5764:5774  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5725:5736  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5737:5747  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5751:5758  spender */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5725:5763  _allowances[_msgSender()][spender].add */\n      tag_76\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5693:5701  _approve */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5793:5797  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5786:5797  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3473:3480  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3499:3508  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3509:3516  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3492:3517  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2417:2430  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6384:6388  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_83\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      tag_84\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6409:6419  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6423:6430  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6471:6486  subtractedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6432:6443  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      tag_86\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6444:6454  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6458:6465  spender */\n      dup11\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6432:6470  _allowances[_msgSender()][spender].sub */\n      tag_69\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6400:6408  _approve */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_83:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6546:6550  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6539:6550  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3813:3817  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      tag_89\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3839:3849  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3853:3862  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3864:3870  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3829:3838  _transfer */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_88:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3888:3892  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3881:3892  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4046:4053  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4072:4083  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4084:4089  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4091:4098  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":4065:4099  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9473:9474  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9456:9461  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9448:9516  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9553:9554  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9534:9541  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9526:9594  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9635:9641  amount */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9605:9616  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9617:9622  owner */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9624:9631  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9605:9641  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9672:9679  spender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9665:9670  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9681:9687  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7154:7155  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7136:7142  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7128:7198  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7237:7238  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7216:7225  recipient */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7208:7279  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7311:7317  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7319:7328  recipient */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7330:7336  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7290:7310  _beforeTokenTransfer */\n      tag_99\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7390:7396  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7368:7377  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7378:7384  sender */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7368:7389  _balances[sender].sub */\n      tag_69\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7348:7357  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7358:7364  sender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7348:7439  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      tag_101\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7497:7503  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7472:7481  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7482:7491  recipient */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7472:7496  _balances[recipient].add */\n      tag_76\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7449:7458  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7459:7468  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7449:7504  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7536:7545  recipient */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7528:7534  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7547:7553  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5518:5525  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5550:5551  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5545:5546  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5545:5551  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5553:5565  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      swap1\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5587:5588  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5583:5584  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5583:5588  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5576:5588  return a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":10701:10793  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220c1ad22f302d52a4cf876d9601fc35025e8bcc5635fd2e3169b62d95aba76b2de64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200139f3803806200139f833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160039080519060200190620001cd9291906200020b565b508060049080519060200190620001e69291906200020b565b506012600560006101000a81548160ff021916908360ff1602179055505050620002b1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024e57805160ff19168380011785556200027f565b828001600101855582156200027f579182015b828111156200027e57825182559160200191906001019062000261565b5b5090506200028e919062000292565b5090565b5b80821115620002ad57600081600090555060010162000293565b5090565b6110de80620002c16000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101360289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108460259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110606024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fcb6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061103b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fa86023913960400191505060405180910390fd5b610cb6838383610fa2565b610d2181604051806060016040528060268152602001610fed602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015610f98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c1ad22f302d52a4cf876d9601fc35025e8bcc5635fd2e3169b62d95aba76b2de64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x139F CODESIZE SUB DUP1 PUSH3 0x139F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CD SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x2B1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x24E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x27F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x27F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x27E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x28E SWAP2 SWAP1 PUSH3 0x292 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2AD JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x293 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x10DE DUP1 PUSH3 0x2C1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1013 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1084 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1060 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFCB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x103B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFED PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220C1AD 0x22 RETURN MUL 0xD5 0x2A 0x4C 0xF8 PUSH23 0xD9601FC35025E8BCC5635FD2E3169B62D95ABA76B2DE64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "1321:9474:4:-:0;;;1958:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2040:5;2032;:13;;;;;;;;;;;;:::i;:::-;;2065:7;2055;:17;;;;;;;;;;;;:::i;:::-;;2094:2;2082:9;;:14;;;;;;;;;;;;;;;;;;1958:145;;1321:9474;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101360289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108460259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110606024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fcb6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061103b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fa86023913960400191505060405180910390fd5b610cb6838383610fa2565b610d2181604051806060016040528060268152602001610fed602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015610f98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c1ad22f302d52a4cf876d9601fc35025e8bcc5635fd2e3169b62d95aba76b2de64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1013 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1084 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1060 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFCB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x103B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFED PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220C1AD 0x22 RETURN MUL 0xD5 0x2A 0x4C 0xF8 PUSH23 0xD9601FC35025E8BCC5635FD2E3169B62D95ABA76B2DE64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "1321:9474:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3235:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4877:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3086:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5589:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3399:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2370:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6291:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3727:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3957:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2168:89;2213:13;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;4399:4;4392:11;;4244:166;;;;:::o;3235:106::-;3296:7;3322:12;;3315:19;;3235:106;:::o;4877:317::-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;:11;:19;5088:6;5076:19;;;;;;;;;;;;;;;:33;5096:12;:10;:12::i;:::-;5076:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5045:8;:121::i;:::-;5183:4;5176:11;;4877:317;;;;;:::o;3086:89::-;3135:5;3159:9;;;;;;;;;;;3152:16;;3086:89;:::o;5589:215::-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;5725:25;;;;;;;;;;;;;;;:34;5751:7;5725:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5693:8;:83::i;:::-;5793:4;5786:11;;5589:215;;;;:::o;3399:125::-;3473:7;3499:9;:18;3509:7;3499:18;;;;;;;;;;;;;;;;3492:25;;3399:125;;;:::o;2370:93::-;2417:13;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2370:93;:::o;6291:266::-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;6432:25;;;;;;;;;;;;;;;:34;6458:7;6432:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6400:8;:129::i;:::-;6546:4;6539:11;;6291:266;;;;:::o;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;:::-;3888:4;3881:11;;3727:172;;;;:::o;3957:149::-;4046:7;4072:11;:18;4084:5;4072:18;;;;;;;;;;;;;;;:27;4091:7;4072:27;;;;;;;;;;;;;;;;4065:34;;3957:149;;;;:::o;598:104:9:-;651:15;685:10;678:17;;598:104;:::o;9355:340:4:-;9473:1;9456:19;;:5;:19;;;;9448:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9553:1;9534:21;;:7;:21;;;;9526:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9635:6;9605:11;:18;9617:5;9605:18;;;;;;;;;;;;;;;:27;9624:7;9605:27;;;;;;;;;;;;;;;:36;;;;9672:7;9656:32;;9665:5;9656:32;;;9681:6;9656:32;;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;7154:1;7136:20;;:6;:20;;;;7128:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7237:1;7216:23;;:9;:23;;;;7208:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;:9;:17;7378:6;7368:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7348:9;:17;7358:6;7348:17;;;;;;;;;;;;;;;:91;;;;7472:32;7497:6;7472:9;:20;7482:9;7472:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7449:9;:20;7459:9;7449:20;;;;;;;;;;;;;;;:55;;;;7536:9;7519:35;;7528:6;7519:35;;;7547:6;7519:35;;;;;;;;;;;;;;;;;;7031:530;;;:::o;5432:163:2:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;10701:92:4:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "863600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decimals()": "1144",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2040,
									"end": 2045,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2094,
									"end": 2096,
									"name": "PUSH",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c1ad22f302d52a4cf876d9601fc35025e8bcc5635fd2e3169b62d95aba76b2de64736f6c634300060c0033",
									".code": [
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4327,
											"end": 4331,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4352,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4343,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3296,
											"end": 3303,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5054,
											"end": 5060,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5062,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH data",
											"source": 4,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5087,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5094,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 5096,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5677,
											"end": 5681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5736,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5758,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5693,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5793,
											"end": 5797,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3508,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6409,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH data",
											"source": 4,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6443,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6400,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6546,
											"end": 6550,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3839,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3892,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4083,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4089,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4098,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9473,
											"end": 9474,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9461,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH data",
											"source": 4,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9554,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9534,
											"end": 9541,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH data",
											"source": 4,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9635,
											"end": 9641,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9616,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9622,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9631,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9679,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9665,
											"end": 9670,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9681,
											"end": 9687,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7154,
											"end": 7155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7136,
											"end": 7142,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH data",
											"source": 4,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH data",
											"source": 4,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7290,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH data",
											"source": 4,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7364,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7482,
											"end": 7491,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7545,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7534,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7547,
											"end": 7553,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5584,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 793,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 799,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 801,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 803,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 805,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 807,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x9c0eb3b0e11d2480d49991dc384f1e5f9c9b9967cc81944d50916a9b9c6c4984\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99e4033d778624992e86f0b6d801a4f6d7b5c0cd5c79c1296be90a051ad5f5af\",\"dweb:/ipfs/QmShYmkUqh6pDEeoWadZ24icmCr4C2Xys1uE5boivPmbwf\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 793,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 799,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 801,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 803,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 805,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 807,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol:ERC20Burnable",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol": {
				"ERC20Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xa22af140ae7ec1f8f2f3bed5869cd0d548dfaac66343f0efc7324ff34aaf1254\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fed479feda7354e89c095fde0927dcb581f460257bf93b7db54b2b902b4bbd48\",\"dweb:/ipfs/QmSDUhS2AQvTGXHwaxDgAXtwXKCgQh2kp1nwhwUgr2hQZK\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x212fb1b1d4beaf74354dad9bc329f44ee3c5375ef1c32acff76b4ecefc10f1d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d21c68cb321d1c8d0fa39fd9ecb6bbe3b2f26623b0f38af280a010c916c85f23\",\"dweb:/ipfs/Qmf2P51HRC4ekDHLYfbXu5SXR33gXrWtq6oKSmfyWqVRuC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 793,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol:ERC20Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 799,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol:ERC20Pausable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 801,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol:ERC20Pausable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 803,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol:ERC20Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 805,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol:ERC20Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 807,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol:ERC20Pausable",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 2282,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol:ERC20Pausable",
								"label": "_paused",
								"offset": 1,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Address.sol\":134:7818  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Address.sol\":134:7818  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a0c50e99e97374feeac0958616c226ee62a49eec7fecb3d2c959d7e7e81cce3d64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0c50e99e97374feeac0958616c226ee62a49eec7fecb3d2c959d7e7e81cce3d64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xC5 0xE SWAP10 0xE9 PUSH20 0x74FEEAC0958616C226EE62A49EEC7FECB3D2C959 0xD7 0xE7 0xE8 SHR 0xCE RETURNDATASIZE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "134:7684:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0c50e99e97374feeac0958616c226ee62a49eec7fecb3d2c959d7e7e81cce3d64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xC5 0xE SWAP10 0xE9 PUSH20 0x74FEEAC0958616C226EE62A49EEC7FECB3D2C959 0xD7 0xE7 0xE8 SHR 0xCE RETURNDATASIZE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "134:7684:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "INVALID",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a0c50e99e97374feeac0958616c226ee62a49eec7fecb3d2c959d7e7e81cce3d64736f6c634300060c0033",
									".code": [
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":753:9387  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":753:9387  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b0fbf5b5712d2115a0bd15778229c6b7fd271eb685e43f1cd74b3df14d27c5a064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0fbf5b5712d2115a0bd15778229c6b7fd271eb685e43f1cd74b3df14d27c5a064736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xFB CREATE2 0xB5 PUSH18 0x2D2115A0BD15778229C6B7FD271EB685E43F SHR 0xD7 0x4B RETURNDATASIZE CALL 0x4D 0x27 0xC5 LOG0 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "753:8634:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0fbf5b5712d2115a0bd15778229c6b7fd271eb685e43f1cd74b3df14d27c5a064736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xFB CREATE2 0xB5 PUSH18 0x2D2115A0BD15778229C6B7FD271EB685E43F SHR 0xD7 0x4B RETURNDATASIZE CALL 0x4D 0x27 0xC5 LOG0 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "753:8634:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "INVALID",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 753,
									"end": 9387,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0fbf5b5712d2115a0bd15778229c6b7fd271eb685e43f1cd74b3df14d27c5a064736f6c634300060c0033",
									".code": [
										{
											"begin": 753,
											"end": 9387,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 753,
											"end": 9387,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x212fb1b1d4beaf74354dad9bc329f44ee3c5375ef1c32acff76b4ecefc10f1d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d21c68cb321d1c8d0fa39fd9ecb6bbe3b2f26623b0f38af280a010c916c85f23\",\"dweb:/ipfs/Qmf2P51HRC4ekDHLYfbXu5SXR33gXrWtq6oKSmfyWqVRuC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2282,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/OpenZeppelinPresetContracts.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/OpenZeppelinPresetContracts.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/OpenZeppelinPresetContracts.sol": {
				"ast": {
					"absolutePath": "contracts/OpenZeppelinPresetContracts.sol",
					"exportedSymbols": {},
					"id": 3,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 3,
							"sourceUnit": 777,
							"src": "27:122:0",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "0:149:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							285
						]
					},
					"id": 286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol",
							"file": "../utils/EnumerableSet.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 286,
							"sourceUnit": 2265,
							"src": "66:36:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Address.sol",
							"file": "../utils/Address.sol",
							"id": 6,
							"nodeType": "ImportDirective",
							"scope": 286,
							"sourceUnit": 1750,
							"src": "103:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 7,
							"nodeType": "ImportDirective",
							"scope": 286,
							"sourceUnit": 1773,
							"src": "134:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 9,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1772,
										"src": "1478:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1772",
											"typeString": "contract Context"
										}
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1478:7:1"
								}
							],
							"contractDependencies": [
								1772
							],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "166:1276:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 285,
							"linearizedBaseContracts": [
								285,
								1772
							],
							"name": "AccessControl",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 13,
									"libraryName": {
										"contractScope": null,
										"id": 11,
										"name": "EnumerableSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2264,
										"src": "1498:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EnumerableSet_$2264",
											"typeString": "library EnumerableSet"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1492:49:1",
									"typeName": {
										"contractScope": null,
										"id": 12,
										"name": "EnumerableSet.AddressSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2048,
										"src": "1516:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$2048_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"id": 16,
									"libraryName": {
										"contractScope": null,
										"id": 14,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1749,
										"src": "1552:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1749",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1546:26:1",
									"typeName": {
										"id": 15,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1564:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "members",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 21,
											"src": "1604:32:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressSet_$2048_storage_ptr",
												"typeString": "struct EnumerableSet.AddressSet"
											},
											"typeName": {
												"contractScope": null,
												"id": 17,
												"name": "EnumerableSet.AddressSet",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 2048,
												"src": "1604:24:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2048_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 21,
											"src": "1646:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1646:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nodeType": "StructDefinition",
									"scope": 285,
									"src": "1578:92:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_roles",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 285,
									"src": "1676:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 24,
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1685:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1676:29:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"contractScope": null,
											"id": 23,
											"name": "RoleData",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 21,
											"src": "1696:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 28,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 285,
									"src": "1727:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 26,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1727:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783030",
										"id": 27,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1772:4:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1783:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 37,
									"name": "RoleAdminChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 37,
												"src": "2103:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 30,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2103:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 37,
												"src": "2125:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 37,
												"src": "2160:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 34,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2160:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2102:87:1"
									},
									"src": "2080:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "2196:198:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {_setupRole}."
									},
									"id": 46,
									"name": "RoleGranted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "2417:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 39,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2417:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "2439:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2439:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "2464:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2464:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2416:71:1"
									},
									"src": "2399:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2494:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 55,
									"name": "RoleRevoked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 55,
												"src": "2792:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2792:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 55,
												"src": "2814:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2814:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 55,
												"src": "2839:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2839:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2791:71:1"
									},
									"src": "2774:89:1"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3025:62:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 70,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "3072:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 65,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "3042:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 67,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 66,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "3049:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3042:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$21_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 68,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 18,
															"src": "3042:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2048_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2126,
														"src": "3042:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2048_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2048_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3042:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 64,
												"id": 72,
												"nodeType": "Return",
												"src": "3035:45:1"
											}
										]
									},
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "2869:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "2967:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 57,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2967:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "2981:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2981:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2966:31:1"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "3019:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 62,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3019:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3018:6:1"
									},
									"scope": 285,
									"src": "2950:137:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3327:53:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 82,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "3344:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 84,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 83,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "3351:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3344:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$21_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 18,
															"src": "3344:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2048_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2140,
														"src": "3344:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2048_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$2048_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3344:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 81,
												"id": 88,
												"nodeType": "Return",
												"src": "3337:36:1"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3093:157:1",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "3283:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 76,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3283:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3282:14:1"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "3318:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3317:9:1"
									},
									"scope": 285,
									"src": "3255:125:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "4047:54:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 105,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4088:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 100,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "4064:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 102,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 101,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "4071:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4064:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$21_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 103,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 18,
															"src": "4064:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2048_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2166,
														"src": "4064:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2048_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$2048_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4064:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 99,
												"id": 107,
												"nodeType": "Return",
												"src": "4057:37:1"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3386:574:1",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 109,
												"src": "3988:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3988:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 109,
												"src": "4002:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4002:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3987:29:1"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 109,
												"src": "4038:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4038:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4037:9:1"
									},
									"scope": 285,
									"src": "3965:136:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "4348:46:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 117,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "4365:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 119,
														"indexExpression": {
															"argumentTypes": null,
															"id": 118,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "4372:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4365:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "4365:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 116,
												"id": 121,
												"nodeType": "Return",
												"src": "4358:29:1"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "4107:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 123,
												"src": "4304:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 111,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4304:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4303:14:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 123,
												"src": "4339:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 114,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4339:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4338:9:1"
									},
									"scope": 285,
									"src": "4282:112:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "4709:158:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 133,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "4735:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																			}
																		},
																		"id": 135,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 134,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 126,
																			"src": "4742:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4735:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$21_storage",
																			"typeString": "struct AccessControl.RoleData storage ref"
																		}
																	},
																	"id": 136,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 20,
																	"src": "4735:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 137,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "4759:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4759:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 132,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "4727:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4727:45:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74",
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4774:49:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811",
																"typeString": "literal_string \"AccessControl: sender must be an admin to grant\""
															},
															"value": "AccessControl: sender must be an admin to grant"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811",
																"typeString": "literal_string \"AccessControl: sender must be an admin to grant\""
															}
														],
														"id": 131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4719:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4719:105:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "4719:105:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 144,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4846:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 145,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "4852:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 143,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "4835:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4835:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "4835:25:1"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "4400:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "4663:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 125,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4663:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "4677:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4662:31:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4709:0:1"
									},
									"scope": 285,
									"src": "4644:223:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "5167:160:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 159,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "5193:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																			}
																		},
																		"id": 161,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 160,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 152,
																			"src": "5200:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5193:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$21_storage",
																			"typeString": "struct AccessControl.RoleData storage ref"
																		}
																	},
																	"id": 162,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 20,
																	"src": "5193:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 163,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "5217:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5217:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 158,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "5185:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5185:45:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5232:50:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3",
																"typeString": "literal_string \"AccessControl: sender must be an admin to revoke\""
															},
															"value": "AccessControl: sender must be an admin to revoke"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3",
																"typeString": "literal_string \"AccessControl: sender must be an admin to revoke\""
															}
														],
														"id": 157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5177:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5177:106:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "5177:106:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 170,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "5306:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 171,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "5312:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 169,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "5294:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5294:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "5294:26:1"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "4873:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 175,
												"src": "5121:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 151,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5121:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 175,
												"src": "5135:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5135:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5120:31:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5167:0:1"
									},
									"scope": 285,
									"src": "5101:226:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "5886:137:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 184,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 180,
																"src": "5904:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 185,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1760,
																	"src": "5915:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5915:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5904:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5929:49:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5896:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5896:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "5896:83:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 192,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "6002:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 193,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "6008:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 191,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "5990:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5990:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5990:26:1"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "5333:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 197,
												"src": "5840:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 177,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5840:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 197,
												"src": "5854:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5839:31:1"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5886:0:1"
									},
									"scope": 285,
									"src": "5818:205:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "6656:42:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 206,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "6677:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 207,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6683:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 205,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "6666:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6666:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "6666:25:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "6029:554:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ===="
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "6608:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 199,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6608:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "6622:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6622:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6607:31:1"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6656:0:1"
									},
									"scope": 285,
									"src": "6588:110:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "6896:123:1",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 220,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6928:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 221,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "6934:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 223,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 222,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "6941:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6934:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$21_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 224,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "adminRole",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 20,
															"src": "6934:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 225,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "6958:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 219,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "6911:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6911:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 227,
												"nodeType": "EmitStatement",
												"src": "6906:62:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 228,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "6978:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 230,
															"indexExpression": {
																"argumentTypes": null,
																"id": 229,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "6985:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6978:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "6978:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 232,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "7003:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6978:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "6978:34:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "6704:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 236,
												"src": "6846:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 213,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6846:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "adminRole",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 236,
												"src": "6860:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6860:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6845:33:1"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6896:0:1"
									},
									"scope": 285,
									"src": "6823:196:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "7084:125:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 248,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "7123:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 243,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "7098:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 245,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 244,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "7105:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7098:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$21_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 246,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 18,
															"src": "7098:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2048_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2074,
														"src": "7098:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$2048_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2048_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7098:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 258,
												"nodeType": "IfStatement",
												"src": "7094:109:1",
												"trueBody": {
													"id": 257,
													"nodeType": "Block",
													"src": "7133:70:1",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 251,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "7164:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 252,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "7170:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 253,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1760,
																			"src": "7179:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7179:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 250,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "7152:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7152:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 256,
															"nodeType": "EmitStatement",
															"src": "7147:45:1"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 260,
												"src": "7045:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 237,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7045:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 260,
												"src": "7059:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7059:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7044:31:1"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7084:0:1"
									},
									"scope": 285,
									"src": "7025:184:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "7275:128:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 272,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "7317:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 267,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "7289:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 269,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 268,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "7296:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7289:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$21_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 18,
															"src": "7289:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2048_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 271,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2100,
														"src": "7289:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$2048_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2048_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7289:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 282,
												"nodeType": "IfStatement",
												"src": "7285:112:1",
												"trueBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "7327:70:1",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 275,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "7358:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 276,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 264,
																		"src": "7364:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 277,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1760,
																			"src": "7373:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7373:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 274,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "7346:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7346:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 280,
															"nodeType": "EmitStatement",
															"src": "7341:45:1"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "7236:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 261,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7236:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "7250:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7250:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7235:31:1"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7275:0:1"
									},
									"scope": 285,
									"src": "7215:188:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 286,
							"src": "1443:5962:1"
						}
					],
					"src": "33:7373:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							640
						]
					},
					"id": 641,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 287,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 640,
							"linearizedBaseContracts": [
								640
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "865:98:2",
										"statements": [
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 318,
														"src": "875:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 302,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "887:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 303,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "891:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 306,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "906:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 307,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "910:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 313,
												"nodeType": "IfStatement",
												"src": "902:28:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 311,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 299,
													"id": 312,
													"nodeType": "Return",
													"src": "913:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 315,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "954:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 316,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 299,
												"id": 317,
												"nodeType": "Return",
												"src": "940:16:2"
											}
										]
									},
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 319,
												"src": "805:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 319,
												"src": "816:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:2"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 319,
												"src": "850:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 319,
												"src": "856:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:2"
									},
									"scope": 640,
									"src": "789:174:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "1185:75:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 331,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1199:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 332,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1203:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 338,
												"nodeType": "IfStatement",
												"src": "1195:28:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 336,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 330,
													"id": 337,
													"nodeType": "Return",
													"src": "1206:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 340,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "1247:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 341,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "1251:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 343,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 330,
												"id": 344,
												"nodeType": "Return",
												"src": "1233:20:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:2",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 346,
												"src": "1125:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 346,
												"src": "1136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:2"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 346,
												"src": "1170:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 326,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 346,
												"src": "1176:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:2"
									},
									"scope": 640,
									"src": "1109:151:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1484:359:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 358,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1716:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 365,
												"nodeType": "IfStatement",
												"src": "1712:28:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 363,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 357,
													"id": 364,
													"nodeType": "Return",
													"src": "1724:16:2"
												}
											},
											{
												"assignments": [
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 386,
														"src": "1750:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 366,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 368,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1762:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 369,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1766:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 372,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "1781:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 373,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "1785:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 375,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1790:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 381,
												"nodeType": "IfStatement",
												"src": "1777:33:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 379,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 357,
													"id": 380,
													"nodeType": "Return",
													"src": "1793:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 383,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "1834:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 384,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 357,
												"id": 385,
												"nodeType": "Return",
												"src": "1820:16:2"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 387,
												"src": "1424:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 387,
												"src": "1435:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:2"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 387,
												"src": "1469:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 387,
												"src": "1475:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:2"
									},
									"scope": 640,
									"src": "1408:435:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "2068:76:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 399,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "2082:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 406,
												"nodeType": "IfStatement",
												"src": "2078:29:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 404,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 398,
													"id": 405,
													"nodeType": "Return",
													"src": "2090:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 408,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "2131:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 409,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "2135:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 411,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 398,
												"id": 412,
												"nodeType": "Return",
												"src": "2117:20:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 414,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 414,
												"src": "2019:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 414,
												"src": "2053:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 414,
												"src": "2059:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:2"
									},
									"scope": 640,
									"src": "1992:152:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "2379:76:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 426,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "2393:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 433,
												"nodeType": "IfStatement",
												"src": "2389:29:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 431,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 425,
													"id": 432,
													"nodeType": "Return",
													"src": "2401:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 435,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "2442:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 436,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "2446:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 438,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 425,
												"id": 439,
												"nodeType": "Return",
												"src": "2428:20:2"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 441,
												"src": "2319:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 441,
												"src": "2330:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 441,
												"src": "2364:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 441,
												"src": "2370:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:2"
									},
									"scope": 640,
									"src": "2303:152:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "2757:108:2",
										"statements": [
											{
												"assignments": [
													452
												],
												"declarations": [
													{
														"constant": false,
														"id": 452,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 466,
														"src": "2767:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 451,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 456,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 453,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "2779:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 454,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "2783:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 458,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "2802:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 459,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "2807:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 464,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 452,
													"src": "2857:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 465,
												"nodeType": "Return",
												"src": "2850:8:2"
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 467,
												"src": "2703:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 467,
												"src": "2714:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:2"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 467,
												"src": "2748:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:2"
									},
									"scope": 640,
									"src": "2690:175:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "3203:88:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 478,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "3221:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 479,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "3226:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 484,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "3279:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 485,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "3283:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 487,
												"nodeType": "Return",
												"src": "3272:12:2"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 489,
												"src": "3149:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 489,
												"src": "3160:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:2"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 489,
												"src": "3194:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:2"
									},
									"scope": 640,
									"src": "3136:155:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3605:148:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 499,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "3619:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3615:20:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 498,
													"id": 503,
													"nodeType": "Return",
													"src": "3627:8:2"
												}
											},
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 522,
														"src": "3645:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 510,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 507,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "3657:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 508,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "3661:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 512,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "3680:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 513,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "3684:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 515,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "3689:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 511,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 520,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 506,
													"src": "3745:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 498,
												"id": 521,
												"nodeType": "Return",
												"src": "3738:8:2"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "3551:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "3562:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:2"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "3596:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:2"
									},
									"scope": 640,
									"src": "3538:215:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "4284:83:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 534,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "4302:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 540,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "4355:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 541,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "4359:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 532,
												"id": 543,
												"nodeType": "Return",
												"src": "4348:12:2"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 545,
												"src": "4230:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 545,
												"src": "4241:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:2"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 545,
												"src": "4275:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:2"
									},
									"scope": 640,
									"src": "4217:150:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "4887:81:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 556,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4905:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 562,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "4956:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 563,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "4960:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 554,
												"id": 565,
												"nodeType": "Return",
												"src": "4949:12:2"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "4833:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "4844:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:2"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "4878:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:2"
									},
									"scope": 640,
									"src": "4820:148:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "5527:68:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 580,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "5545:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 581,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "5550:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 583,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "5553:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 579,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 586,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "5583:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 587,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "5587:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 578,
												"id": 589,
												"nodeType": "Return",
												"src": "5576:12:2"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "5445:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "5456:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "5467:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 573,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:2"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "5518:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:2"
									},
									"scope": 640,
									"src": "5432:163:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "6347:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 604,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "6365:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 607,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "6372:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 610,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "6402:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 611,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "6406:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 602,
												"id": 613,
												"nodeType": "Return",
												"src": "6395:12:2"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 615,
												"src": "6265:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 615,
												"src": "6276:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 615,
												"src": "6287:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 597,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:2"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 615,
												"src": "6338:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:2"
									},
									"scope": 640,
									"src": "6252:162:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7155:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 628,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "7173:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 631,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "7180:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 627,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 634,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "7210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 635,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "7214:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 626,
												"id": 637,
												"nodeType": "Return",
												"src": "7203:12:2"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 639,
												"src": "7073:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 639,
												"src": "7084:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 639,
												"src": "7095:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 621,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:2"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 639,
												"src": "7146:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:2"
									},
									"scope": 640,
									"src": "7060:162:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 641,
							"src": "630:6594:2"
						}
					],
					"src": "33:7192:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/presets/ERC20PresetMinterPauser.sol",
					"exportedSymbols": {
						"ERC20PresetMinterPauser": [
							776
						]
					},
					"id": 777,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 642,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/access/AccessControl.sol",
							"file": "../access/AccessControl.sol",
							"id": 643,
							"nodeType": "ImportDirective",
							"scope": 777,
							"sourceUnit": 286,
							"src": "66:37:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 644,
							"nodeType": "ImportDirective",
							"scope": 777,
							"sourceUnit": 1773,
							"src": "104:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol",
							"file": "../token/ERC20/ERC20.sol",
							"id": 645,
							"nodeType": "ImportDirective",
							"scope": 777,
							"sourceUnit": 1280,
							"src": "135:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol",
							"file": "../token/ERC20/ERC20Burnable.sol",
							"id": 646,
							"nodeType": "ImportDirective",
							"scope": 777,
							"sourceUnit": 1339,
							"src": "170:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol",
							"file": "../token/ERC20/ERC20Pausable.sol",
							"id": 647,
							"nodeType": "ImportDirective",
							"scope": 777,
							"sourceUnit": 1376,
							"src": "213:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 649,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1772,
										"src": "860:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1772",
											"typeString": "contract Context"
										}
									},
									"id": 650,
									"nodeType": "InheritanceSpecifier",
									"src": "860:7:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 651,
										"name": "AccessControl",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 285,
										"src": "869:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AccessControl_$285",
											"typeString": "contract AccessControl"
										}
									},
									"id": 652,
									"nodeType": "InheritanceSpecifier",
									"src": "869:13:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 653,
										"name": "ERC20Burnable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1338,
										"src": "884:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Burnable_$1338",
											"typeString": "contract ERC20Burnable"
										}
									},
									"id": 654,
									"nodeType": "InheritanceSpecifier",
									"src": "884:13:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 655,
										"name": "ERC20Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1375,
										"src": "899:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Pausable_$1375",
											"typeString": "contract ERC20Pausable"
										}
									},
									"id": 656,
									"nodeType": "InheritanceSpecifier",
									"src": "899:13:3"
								}
							],
							"contractDependencies": [
								285,
								1279,
								1338,
								1375,
								1453,
								1772,
								2356
							],
							"contractKind": "contract",
							"documentation": {
								"id": 648,
								"nodeType": "StructuredDocumentation",
								"src": "257:566:3",
								"text": " @dev {ERC20} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
							},
							"fullyImplemented": true,
							"id": 776,
							"linearizedBaseContracts": [
								776,
								1375,
								2356,
								1338,
								1279,
								1453,
								285,
								1772
							],
							"name": "ERC20PresetMinterPauser",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 661,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 776,
									"src": "919:62:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 657,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "919:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "4d494e5445525f524f4c45",
												"id": 659,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "967:13:3",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 658,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "957:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 660,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "957:24:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 666,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 776,
									"src": "987:62:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 662,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "987:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "5041555345525f524f4c45",
												"id": 664,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1035:13:3",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 663,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "1025:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 665,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1025:24:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "1314:156:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 679,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "1335:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 680,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "1355:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1355:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 678,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1324:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1324:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "1324:44:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 685,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "1390:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 686,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "1403:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1403:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 684,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1379:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1379:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "1379:37:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 691,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "1437:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 692,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "1450:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1450:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 690,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1426:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1426:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "1426:37:3"
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "1056:172:3",
										"text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n See {ERC20-constructor}."
									},
									"id": 697,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 674,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 669,
													"src": "1300:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"argumentTypes": null,
													"id": 675,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "1306:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 676,
											"modifierName": {
												"argumentTypes": null,
												"id": 673,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1279,
												"src": "1294:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$1279_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1294:19:3"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 697,
												"src": "1245:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 668,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1245:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 697,
												"src": "1265:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 670,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1265:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1244:42:3"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:3"
									},
									"scope": 776,
									"src": "1233:237:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "1716:145:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 707,
																	"name": "MINTER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "1742:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 708,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "1755:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1755:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 706,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "1734:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1734:34:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1770:56:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342",
																"typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""
															},
															"value": "ERC20PresetMinterPauser: must have minter role to mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342",
																"typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""
															}
														],
														"id": 705,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1726:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1726:101:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "1726:101:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 715,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "1843:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 716,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "1847:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 714,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "1837:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1837:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "1837:17:3"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "1476:178:3",
										"text": " @dev Creates `amount` new tokens for `to`.\n See {ERC20-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
									},
									"functionSelector": "40c10f19",
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 720,
												"src": "1673:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 720,
												"src": "1685:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1672:28:3"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1716:0:3"
									},
									"scope": 776,
									"src": "1659:202:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "2096:137:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 726,
																	"name": "PAUSER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "2122:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 727,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "2135:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2135:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 725,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "2114:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2114:34:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f207061757365",
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2150:57:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330",
																"typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to pause\""
															},
															"value": "ERC20PresetMinterPauser: must have pauser role to pause"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330",
																"typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to pause\""
															}
														],
														"id": 724,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2106:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2106:102:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "2106:102:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 733,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "2218:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2218:8:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "2218:8:3"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "1867:192:3",
										"text": " @dev Pauses all token transfers.\n See {ERC20Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
									},
									"functionSelector": "8456cb59",
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2078:2:3"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2096:0:3"
									},
									"scope": 776,
									"src": "2064:169:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "2474:141:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 743,
																	"name": "PAUSER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "2500:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 744,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "2513:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2513:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 742,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "2492:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2492:34:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2528:59:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186",
																"typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to unpause\""
															},
															"value": "ERC20PresetMinterPauser: must have pauser role to unpause"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186",
																"typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to unpause\""
															}
														],
														"id": 741,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2484:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2484:104:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "2484:104:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 750,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2355,
														"src": "2598:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2598:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "2598:10:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "2239:196:3",
										"text": " @dev Unpauses all token transfers.\n See {ERC20Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
									},
									"functionSelector": "3f4ba83a",
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2456:2:3"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2474:0:3"
									},
									"scope": 776,
									"src": "2440:175:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1278,
										1374
									],
									"body": {
										"id": 774,
										"nodeType": "Block",
										"src": "2741:61:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 769,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "2778:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 770,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "2784:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 771,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "2788:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 766,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "2751:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_ERC20PresetMinterPauser_$776",
																"typeString": "contract super ERC20PresetMinterPauser"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1374,
														"src": "2751:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2751:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "2751:44:3"
											}
										]
									},
									"documentation": null,
									"id": 775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 764,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"contractScope": null,
												"id": 762,
												"name": "ERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1279,
												"src": "2719:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$1279",
													"typeString": "contract ERC20"
												}
											},
											{
												"contractScope": null,
												"id": 763,
												"name": "ERC20Pausable",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1375,
												"src": "2726:13:3",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20Pausable_$1375",
													"typeString": "contract ERC20Pausable"
												}
											}
										],
										"src": "2710:30:3"
									},
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 775,
												"src": "2651:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 775,
												"src": "2665:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2665:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 775,
												"src": "2677:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2650:42:3"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2741:0:3"
									},
									"scope": 776,
									"src": "2621:181:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 777,
							"src": "824:1980:3"
						}
					],
					"src": "33:2772:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							1279
						]
					},
					"id": 1280,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 778,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 779,
							"nodeType": "ImportDirective",
							"scope": 1280,
							"sourceUnit": 1773,
							"src": "66:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 780,
							"nodeType": "ImportDirective",
							"scope": 1280,
							"sourceUnit": 1454,
							"src": "100:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 781,
							"nodeType": "ImportDirective",
							"scope": 1280,
							"sourceUnit": 641,
							"src": "123:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 783,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1772,
										"src": "1339:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1772",
											"typeString": "contract Context"
										}
									},
									"id": 784,
									"nodeType": "InheritanceSpecifier",
									"src": "1339:7:4"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 785,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1453,
										"src": "1348:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1453",
											"typeString": "contract IERC20"
										}
									},
									"id": 786,
									"nodeType": "InheritanceSpecifier",
									"src": "1348:6:4"
								}
							],
							"contractDependencies": [
								1453,
								1772
							],
							"contractKind": "contract",
							"documentation": {
								"id": 782,
								"nodeType": "StructuredDocumentation",
								"src": "158:1162:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1279,
							"linearizedBaseContracts": [
								1279,
								1453,
								1772
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 789,
									"libraryName": {
										"contractScope": null,
										"id": 787,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 640,
										"src": "1367:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$640",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1361:27:4",
									"typeName": {
										"id": 788,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1380:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 793,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1279,
									"src": "1394:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 792,
										"keyType": {
											"id": 790,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1403:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1394:28:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 791,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1414:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 799,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1279,
									"src": "1447:69:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 798,
										"keyType": {
											"id": 794,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1456:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1447:49:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 797,
											"keyType": {
												"id": 795,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1476:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1467:28:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 796,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1487:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 801,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1279,
									"src": "1523:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 800,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1523:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 803,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1279,
									"src": "1558:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 802,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1558:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 805,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1279,
									"src": "1584:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 804,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1584:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 807,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1279,
									"src": "1612:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 806,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1612:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "2022:81:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 815,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "2032:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 816,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "2040:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2032:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "2032:13:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 819,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "2055:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 820,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "2065:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2055:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "2055:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 823,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "2082:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2094:2:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2082:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "2082:14:4"
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "1642:311:4",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 828,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 828,
												"src": "1971:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 809,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1971:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 828,
												"src": "1992:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 811,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1970:44:4"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2022:0:4"
									},
									"scope": 1279,
									"src": "1958:145:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "2228:29:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 834,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 803,
													"src": "2245:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 833,
												"id": 835,
												"nodeType": "Return",
												"src": "2238:12:4"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "2109:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:2:4"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 837,
												"src": "2213:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 831,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2213:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2212:15:4"
									},
									"scope": 1279,
									"src": "2168:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "2432:31:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 843,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 805,
													"src": "2449:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 842,
												"id": 844,
												"nodeType": "Return",
												"src": "2442:14:4"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "2263:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2385:2:4"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 846,
												"src": "2417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 840,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2416:15:4"
									},
									"scope": 1279,
									"src": "2370:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "3142:33:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 852,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 807,
													"src": "3159:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 851,
												"id": 853,
												"nodeType": "Return",
												"src": "3152:16:4"
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "2469:612:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3103:2:4"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 855,
												"src": "3135:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 849,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3135:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3134:7:4"
									},
									"scope": 1279,
									"src": "3086:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1384
									],
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "3305:36:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 862,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 801,
													"src": "3322:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 861,
												"id": 863,
												"nodeType": "Return",
												"src": "3315:19:4"
											}
										]
									},
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "3181:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 858,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3278:8:4"
									},
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:2:4"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 865,
												"src": "3296:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3295:9:4"
									},
									"scope": 1279,
									"src": "3235:106:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1392
									],
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "3482:42:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 874,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "3499:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 876,
													"indexExpression": {
														"argumentTypes": null,
														"id": 875,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "3509:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3499:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 873,
												"id": 877,
												"nodeType": "Return",
												"src": "3492:25:4"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "3347:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 870,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3455:8:4"
									},
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 879,
												"src": "3418:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3418:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3417:17:4"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 879,
												"src": "3473:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3472:9:4"
									},
									"scope": 1279,
									"src": "3399:125:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1402
									],
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "3819:80:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 891,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "3839:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3839:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 893,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "3853:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 894,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "3864:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 890,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "3829:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3829:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "3829:42:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3888:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 889,
												"id": 898,
												"nodeType": "Return",
												"src": "3881:11:4"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "3530:192:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 886,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3795:8:4"
									},
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 900,
												"src": "3745:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 900,
												"src": "3764:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3744:35:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 900,
												"src": "3813:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 887,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3813:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3812:6:4"
									},
									"scope": 1279,
									"src": "3727:172:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1412
									],
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "4055:51:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 911,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "4072:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 913,
														"indexExpression": {
															"argumentTypes": null,
															"id": 912,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "4084:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4072:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 915,
													"indexExpression": {
														"argumentTypes": null,
														"id": 914,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "4091:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4072:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 910,
												"id": 916,
												"nodeType": "Return",
												"src": "4065:34:4"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "3905:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 907,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4028:8:4"
									},
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 918,
												"src": "3976:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3976:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 918,
												"src": "3991:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3975:32:4"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 918,
												"src": "4046:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4046:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4045:9:4"
									},
									"scope": 1279,
									"src": "3957:149:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1422
									],
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "4333:77:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 930,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "4352:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4352:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 932,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "4366:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 933,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "4375:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 929,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "4343:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4343:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "4343:39:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4399:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 928,
												"id": 937,
												"nodeType": "Return",
												"src": "4392:11:4"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "4112:127:4",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 925,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4309:8:4"
									},
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 939,
												"src": "4261:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4261:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 939,
												"src": "4278:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4260:33:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 939,
												"src": "4327:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4327:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4326:6:4"
									},
									"scope": 1279,
									"src": "4244:166:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1434
									],
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "4989:205:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 953,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "5009:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 954,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "5017:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 955,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "5028:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 952,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "4999:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4999:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "4999:36:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 959,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "5054:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 960,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "5062:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5062:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 969,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "5114:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5122:42:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 962,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "5076:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 964,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 963,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "5088:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5076:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 967,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 965,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1760,
																			"src": "5096:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5096:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5076:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 591,
																"src": "5076:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5076:89:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 958,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "5045:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5045:121:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "5045:121:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5183:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 951,
												"id": 975,
												"nodeType": "Return",
												"src": "5176:11:4"
											}
										]
									},
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "4416:456:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 948,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4965:8:4"
									},
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 977,
												"src": "4899:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 977,
												"src": "4915:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4915:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 977,
												"src": "4934:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4898:51:4"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 977,
												"src": "4983:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 949,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4983:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4982:6:4"
									},
									"scope": 1279,
									"src": "4877:317:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "5683:121:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 988,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "5702:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5702:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 990,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "5716:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 998,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "5764:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 991,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "5725:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 994,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 992,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1760,
																				"src": "5737:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5737:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5725:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 996,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 995,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "5751:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5725:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 467,
																"src": "5725:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5725:50:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 987,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "5693:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5693:83:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "5693:83:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5793:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 986,
												"id": 1003,
												"nodeType": "Return",
												"src": "5786:11:4"
											}
										]
									},
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "5200:384:4",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1005,
												"src": "5616:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5616:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1005,
												"src": "5633:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5633:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5615:37:4"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1005,
												"src": "5677:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 984,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5677:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5676:6:4"
									},
									"scope": 1279,
									"src": "5589:215:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "6390:167:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1016,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "6409:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6409:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1018,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "6423:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1026,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "6471:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6488:39:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1019,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "6432:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1022,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1020,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1760,
																				"src": "6444:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6444:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6432:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1024,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1023,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1008,
																		"src": "6458:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6432:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 591,
																"src": "6432:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6432:96:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1015,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "6400:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6400:129:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "6400:129:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6546:4:4",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1014,
												"id": 1032,
												"nodeType": "Return",
												"src": "6539:11:4"
											}
										]
									},
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "5810:476:4",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1034,
												"src": "6318:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6318:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1034,
												"src": "6335:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6335:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6317:42:4"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1034,
												"src": "6384:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1012,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6384:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6383:6:4"
									},
									"scope": 1279,
									"src": "6291:266:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "7118:443:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1045,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "7136:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7154:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7146:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1046,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7146:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7146:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7136:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7158:39:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1044,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7128:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7128:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "7128:70:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1055,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "7216:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7237:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7229:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1056,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7229:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7229:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7216:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7241:37:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7208:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7208:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "7208:71:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1065,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "7311:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1066,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "7319:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1067,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "7330:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "7290:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7290:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "7290:47:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1070,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "7348:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1072,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1071,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "7358:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7348:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1077,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "7390:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7398:40:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1073,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "7368:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1075,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1074,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "7378:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7368:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 591,
															"src": "7368:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7368:71:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7348:91:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "7348:91:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1082,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "7449:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1084,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1083,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "7459:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7449:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1089,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "7497:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1085,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "7472:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1087,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1086,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "7482:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7472:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 467,
															"src": "7472:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7472:32:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7449:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "7449:55:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1094,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "7528:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1095,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "7536:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1096,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "7547:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1093,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "7519:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7519:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "EmitStatement",
												"src": "7514:40:4"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "6563:463:4",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1100,
												"src": "7050:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7050:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1100,
												"src": "7066:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7066:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1100,
												"src": "7085:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7085:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7049:51:4"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7118:0:4"
									},
									"scope": 1279,
									"src": "7031:530:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "7897:305:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1109,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "7915:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7934:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7926:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1110,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7926:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7926:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7915:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7938:33:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7907:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7907:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "7907:65:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8004:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1119,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8004:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8004:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1123,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "8016:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1124,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "8025:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1118,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "7983:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7983:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "7983:49:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1127,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "8043:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1130,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "8075:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1128,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "8058:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 467,
															"src": "8058:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8058:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8043:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "8043:39:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1134,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "8092:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1136,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1135,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "8102:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8092:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1141,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "8136:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1137,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "8113:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1139,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1138,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "8123:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8113:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 467,
															"src": "8113:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8113:30:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8092:51:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "8092:51:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8175:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8167:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1146,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8167:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8167:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1150,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "8179:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1151,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "8188:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1145,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "8158:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8158:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "EmitStatement",
												"src": "8153:42:4"
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "7567:260:4",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1155,
												"src": "7847:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7847:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1155,
												"src": "7864:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7864:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7846:33:4"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7897:0:4"
									},
									"scope": 1279,
									"src": "7832:370:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "8587:345:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1164,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "8605:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8624:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8616:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1165,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8616:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8616:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8605:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8628:35:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8597:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8597:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "8597:67:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1174,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "8696:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8713:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8705:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1175,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8705:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8705:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1179,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "8717:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1173,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "8675:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8675:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "8675:49:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1182,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "8735:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1184,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1183,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "8745:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8735:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1189,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "8779:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8787:36:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1185,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "8756:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1187,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1186,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "8766:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8756:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 591,
															"src": "8756:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8756:68:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8735:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "8735:89:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1194,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "8834:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1197,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "8866:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1195,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "8849:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 489,
															"src": "8849:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8849:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8834:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "8834:39:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1202,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "8897:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8914:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8906:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1203,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8906:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8906:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1207,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "8918:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1201,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "8888:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8888:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "EmitStatement",
												"src": "8883:42:4"
											}
										]
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "8208:309:4",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1211,
												"src": "8537:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8537:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1211,
												"src": "8554:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8554:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8536:33:4"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8587:0:4"
									},
									"scope": 1279,
									"src": "8522:410:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "9438:257:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1222,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "9456:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9473:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9465:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1223,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9465:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9465:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9456:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9477:38:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9448:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9448:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "9448:68:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1232,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1216,
																"src": "9534:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9553:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9545:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1233,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9545:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9545:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9534:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9557:36:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9526:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9526:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "9526:68:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1241,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "9605:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1244,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1242,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "9617:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9605:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1245,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1243,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "9624:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9605:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1246,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "9635:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9605:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "9605:36:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1250,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "9665:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1251,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "9672:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1252,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "9681:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1249,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "9656:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9656:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1254,
												"nodeType": "EmitStatement",
												"src": "9651:37:4"
											}
										]
									},
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "8938:412:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1256,
												"src": "9373:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9373:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1256,
												"src": "9388:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9388:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1256,
												"src": "9405:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9405:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9372:48:4"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9438:0:4"
									},
									"scope": 1279,
									"src": "9355:340:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "10076:38:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1262,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "10086:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1263,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "10098:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "10086:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "10086:21:4"
											}
										]
									},
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "9701:312:4",
										"text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1267,
												"src": "10042:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1258,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10042:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10041:17:4"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10076:0:4"
									},
									"scope": 1279,
									"src": "10018:96:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "10790:3:4",
										"statements": []
									},
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "10120:576:4",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1278,
												"src": "10731:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10731:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1278,
												"src": "10745:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10745:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1278,
												"src": "10757:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10757:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10730:42:4"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10790:0:4"
									},
									"scope": 1279,
									"src": "10701:92:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1280,
							"src": "1321:9474:4"
						}
					],
					"src": "33:10763:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Burnable.sol",
					"exportedSymbols": {
						"ERC20Burnable": [
							1338
						]
					},
					"id": 1339,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1281,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 1282,
							"nodeType": "ImportDirective",
							"scope": 1339,
							"sourceUnit": 1773,
							"src": "66:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 1283,
							"nodeType": "ImportDirective",
							"scope": 1339,
							"sourceUnit": 1280,
							"src": "100:21:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1285,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1772,
										"src": "367:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1772",
											"typeString": "contract Context"
										}
									},
									"id": 1286,
									"nodeType": "InheritanceSpecifier",
									"src": "367:7:5"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1287,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1279,
										"src": "376:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$1279",
											"typeString": "contract ERC20"
										}
									},
									"id": 1288,
									"nodeType": "InheritanceSpecifier",
									"src": "376:5:5"
								}
							],
							"contractDependencies": [
								1279,
								1453,
								1772
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1284,
								"nodeType": "StructuredDocumentation",
								"src": "123:208:5",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": false,
							"id": 1338,
							"linearizedBaseContracts": [
								1338,
								1279,
								1453,
								1772
							],
							"name": "ERC20Burnable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1291,
									"libraryName": {
										"contractScope": null,
										"id": 1289,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 640,
										"src": "394:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$640",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "388:27:5",
									"typeName": {
										"id": 1290,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "407:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "569:44:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1298,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "585:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "585:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1300,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "599:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1297,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "579:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "579:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "579:27:5"
											}
										]
									},
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "421:98:5",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1304,
												"src": "538:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "537:16:5"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "569:0:5"
									},
									"scope": 1338,
									"src": "524:89:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "985:224:5",
										"statements": [
											{
												"assignments": [
													1313
												],
												"declarations": [
													{
														"constant": false,
														"id": 1313,
														"mutability": "mutable",
														"name": "decreasedAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1336,
														"src": "995:26:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1312,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "995:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1323,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1320,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "1061:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1069:38:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															},
															"value": "ERC20: burn amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1315,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1307,
																	"src": "1034:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1316,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "1043:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1043:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1314,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "1024:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view returns (uint256)"
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1024:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 591,
														"src": "1024:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1024:84:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "995:113:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1325,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "1128:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1326,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "1137:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1137:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1328,
															"name": "decreasedAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "1151:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1324,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "1119:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1119:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "1119:51:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1332,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "1186:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1333,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "1195:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1331,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "1180:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1180:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "1180:22:5"
											}
										]
									},
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "619:295:5",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1337,
												"src": "937:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1337,
												"src": "954:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "954:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "936:33:5"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "985:0:5"
									},
									"scope": 1338,
									"src": "919:290:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1339,
							"src": "332:879:5"
						}
					],
					"src": "33:1179:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20Pausable.sol",
					"exportedSymbols": {
						"ERC20Pausable": [
							1375
						]
					},
					"id": 1376,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1340,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 1341,
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 1280,
							"src": "66:21:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol",
							"file": "../../utils/Pausable.sol",
							"id": 1342,
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 2357,
							"src": "88:34:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1344,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1279,
										"src": "429:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$1279",
											"typeString": "contract ERC20"
										}
									},
									"id": 1345,
									"nodeType": "InheritanceSpecifier",
									"src": "429:5:6"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1346,
										"name": "Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2356,
										"src": "436:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Pausable_$2356",
											"typeString": "contract Pausable"
										}
									},
									"id": 1347,
									"nodeType": "InheritanceSpecifier",
									"src": "436:8:6"
								}
							],
							"contractDependencies": [
								1279,
								1453,
								1772,
								2356
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1343,
								"nodeType": "StructuredDocumentation",
								"src": "124:269:6",
								"text": " @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug."
							},
							"fullyImplemented": false,
							"id": 1375,
							"linearizedBaseContracts": [
								1375,
								2356,
								1279,
								1453,
								1772
							],
							"name": "ERC20Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1278
									],
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "688:136:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1361,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "725:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1362,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "731:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1363,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "735:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1358,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "698:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_ERC20Pausable_$1375",
																"typeString": "contract super ERC20Pausable"
															}
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1278,
														"src": "698:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "698:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "698:44:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "761:9:6",
															"subExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1367,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "762:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "762:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564",
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "772:44:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4",
																"typeString": "literal_string \"ERC20Pausable: token transfer while paused\""
															},
															"value": "ERC20Pausable: token transfer while paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4",
																"typeString": "literal_string \"ERC20Pausable: token transfer while paused\""
															}
														],
														"id": 1366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "753:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "753:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "753:64:6"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "451:134:6",
										"text": " @dev See {ERC20-_beforeTokenTransfer}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1356,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "679:8:6"
									},
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1374,
												"src": "620:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1374,
												"src": "634:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1374,
												"src": "646:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "619:42:6"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "688:0:6"
									},
									"scope": 1375,
									"src": "590:234:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1376,
							"src": "394:432:6"
						}
					],
					"src": "33:794:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1453
						]
					},
					"id": 1454,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1377,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1378,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:7",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1453,
							"linearizedBaseContracts": [
								1453
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:7",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:7"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1384,
												"src": "277:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "276:9:7"
									},
									"scope": 1453,
									"src": "231:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:7",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1392,
												"src": "388:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "387:17:7"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1392,
												"src": "428:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "427:9:7"
									},
									"scope": 1453,
									"src": "369:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:7",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1402,
												"src": "675:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1402,
												"src": "694:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:35:7"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1402,
												"src": "728:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:6:7"
									},
									"scope": 1453,
									"src": "657:77:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1412,
												"src": "1028:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1412,
												"src": "1043:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1027:32:7"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1412,
												"src": "1083:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1082:9:7"
									},
									"scope": 1453,
									"src": "1009:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1413,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:7",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1422,
												"src": "1762:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1422,
												"src": "1779:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1761:33:7"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1422,
												"src": "1813:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1812:6:7"
									},
									"scope": 1453,
									"src": "1745:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1423,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:7",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1434,
												"src": "2148:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1434,
												"src": "2164:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1434,
												"src": "2183:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2147:51:7"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1434,
												"src": "2217:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:6:7"
									},
									"scope": 1453,
									"src": "2126:97:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1443,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1443,
												"src": "2407:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1443,
												"src": "2429:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1443,
												"src": "2449:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2406:57:7"
									},
									"src": "2392:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1452,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1452,
												"src": "2638:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1452,
												"src": "2661:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1452,
												"src": "2686:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2637:63:7"
									},
									"src": "2623:78:7"
								}
							],
							"scope": 1454,
							"src": "137:2566:7"
						}
					],
					"src": "33:2671:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1749
						]
					},
					"id": 1750,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1455,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1456,
								"nodeType": "StructuredDocumentation",
								"src": "66:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1749,
							"linearizedBaseContracts": [
								1749
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1472,
										"nodeType": "Block",
										"src": "792:347:8",
										"statements": [
											{
												"assignments": [
													1465
												],
												"declarations": [
													{
														"constant": false,
														"id": 1465,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1472,
														"src": "989:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1464,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1466,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "989:12:8"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:8"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1086:11:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:20:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1078:4:8"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1459,
														"isOffset": false,
														"isSlot": false,
														"src": "1098:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1465,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:4:8",
														"valueSize": 1
													}
												],
												"id": 1467,
												"nodeType": "InlineAssembly",
												"src": "1067:41:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1468,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "1124:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1124:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1463,
												"id": 1471,
												"nodeType": "Return",
												"src": "1117:15:8"
											}
										]
									},
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "156:565:8",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1473,
												"src": "746:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:17:8"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1473,
												"src": "786:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1461,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "785:6:8"
									},
									"scope": 1749,
									"src": "726:413:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "2127:320:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1484,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2153:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1749",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1749",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2145:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1482,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2145:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2145:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1487,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "2170:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2145:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:31:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2137:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "2137:73:8"
											},
											{
												"assignments": [
													1493,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1493,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1506,
														"src": "2299:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1492,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2299:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1500,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:2:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1494,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "2317:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2317:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1496,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "2340:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2317:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2298:54:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1502,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "2370:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:60:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1501,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2362:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "2362:78:8"
											}
										]
									},
									"documentation": {
										"id": 1474,
										"nodeType": "StructuredDocumentation",
										"src": "1145:906:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1507,
												"src": "2075:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1507,
												"src": "2102:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2074:43:8"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:8"
									},
									"scope": 1749,
									"src": "2056:391:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "3277:82:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1518,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "3305:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1519,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "3313:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3319:32:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1517,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1524,
															1544
														],
														"referencedDeclaration": 1544,
														"src": "3292:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1516,
												"id": 1522,
												"nodeType": "Return",
												"src": "3285:67:8"
											}
										]
									},
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "2453:730:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1524,
												"src": "3210:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1524,
												"src": "3226:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1511,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3226:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3209:35:8"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1524,
												"src": "3263:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3263:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3262:14:8"
									},
									"scope": 1749,
									"src": "3188:171:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1543,
										"nodeType": "Block",
										"src": "3698:76:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "3737:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1538,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "3745:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3751:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 1540,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "3754:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1536,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1564,
															1614
														],
														"referencedDeclaration": 1614,
														"src": "3715:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1535,
												"id": 1542,
												"nodeType": "Return",
												"src": "3708:59:8"
											}
										]
									},
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "3365:211:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1544,
												"src": "3603:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1544,
												"src": "3619:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1528,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3619:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1544,
												"src": "3638:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1530,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3638:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3602:63:8"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1544,
												"src": "3684:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3684:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3683:14:8"
									},
									"scope": 1749,
									"src": "3581:193:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "4249:111:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1557,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "4288:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1558,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "4296:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1559,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "4302:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:43:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1556,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1564,
															1614
														],
														"referencedDeclaration": 1614,
														"src": "4266:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1555,
												"id": 1562,
												"nodeType": "Return",
												"src": "4259:94:8"
											}
										]
									},
									"documentation": {
										"id": 1545,
										"nodeType": "StructuredDocumentation",
										"src": "3780:351:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1564,
												"src": "4167:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4167:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1564,
												"src": "4183:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1548,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4183:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1564,
												"src": "4202:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4166:50:8"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1564,
												"src": "4235:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4235:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4234:14:8"
									},
									"scope": 1749,
									"src": "4136:224:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1613,
										"nodeType": "Block",
										"src": "4749:382:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1581,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4775:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1749",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1749",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4767:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1579,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4767:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4767:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4767:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1584,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "4792:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4767:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:40:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1578,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4759:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "4759:81:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1591,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1567,
																	"src": "4869:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1590,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "4858:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4858:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:31:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1589,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4850:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1595,
												"nodeType": "ExpressionStatement",
												"src": "4850:60:8"
											},
											{
												"assignments": [
													1597,
													1599
												],
												"declarations": [
													{
														"constant": false,
														"id": 1597,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1613,
														"src": "4981:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1596,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4981:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1599,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1613,
														"src": "4995:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1598,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4995:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1606,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1604,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "5050:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1600,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1567,
																"src": "5022:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5022:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1602,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "5042:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5022:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:75:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1608,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "5090:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1609,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "5099:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1610,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "5111:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1607,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1748,
														"src": "5072:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1577,
												"id": 1612,
												"nodeType": "Return",
												"src": "5065:59:8"
											}
										]
									},
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "4366:237:8",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1614,
												"src": "4639:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1614,
												"src": "4655:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1568,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4655:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1614,
												"src": "4674:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1614,
												"src": "4689:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1572,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4689:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4638:78:8"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1614,
												"src": "4735:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1575,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4734:14:8"
									},
									"scope": 1749,
									"src": "4608:523:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1630,
										"nodeType": "Block",
										"src": "5408:97:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1625,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "5444:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1626,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "5452:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5458:39:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1624,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1631,
															1666
														],
														"referencedDeclaration": 1666,
														"src": "5425:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1623,
												"id": 1629,
												"nodeType": "Return",
												"src": "5418:80:8"
											}
										]
									},
									"documentation": {
										"id": 1615,
										"nodeType": "StructuredDocumentation",
										"src": "5137:166:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1631,
												"src": "5336:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1631,
												"src": "5352:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5335:35:8"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1631,
												"src": "5394:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5394:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5393:14:8"
									},
									"scope": 1749,
									"src": "5308:197:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "5817:288:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1645,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1634,
																	"src": "5846:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1644,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "5835:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5835:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:38:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1643,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5827:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1649,
												"nodeType": "ExpressionStatement",
												"src": "5827:67:8"
											},
											{
												"assignments": [
													1651,
													1653
												],
												"declarations": [
													{
														"constant": false,
														"id": 1651,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1665,
														"src": "5965:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1650,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5965:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1653,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1665,
														"src": "5979:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1652,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5979:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1658,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1656,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "6024:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1654,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "6006:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6006:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:65:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1660,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "6064:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1661,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "6073:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1662,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "6085:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1659,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1748,
														"src": "6046:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6046:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1642,
												"id": 1664,
												"nodeType": "Return",
												"src": "6039:59:8"
											}
										]
									},
									"documentation": {
										"id": 1632,
										"nodeType": "StructuredDocumentation",
										"src": "5511:173:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1666,
												"src": "5717:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1666,
												"src": "5733:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1635,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5733:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1666,
												"src": "5752:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1637,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5752:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5716:63:8"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1666,
												"src": "5803:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5803:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5802:14:8"
									},
									"scope": 1749,
									"src": "5689:416:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "6381:101:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1677,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "6419:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1678,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "6427:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6433:41:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1676,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1683,
															1718
														],
														"referencedDeclaration": 1718,
														"src": "6398:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6398:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1675,
												"id": 1681,
												"nodeType": "Return",
												"src": "6391:84:8"
											}
										]
									},
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "6111:168:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1683,
												"src": "6314:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1683,
												"src": "6330:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1670,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6330:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6313:35:8"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1683,
												"src": "6367:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1673,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6367:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6366:14:8"
									},
									"scope": 1749,
									"src": "6284:198:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "6793:292:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1697,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1686,
																	"src": "6822:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1696,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "6811:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6811:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:40:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6803:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1701,
												"nodeType": "ExpressionStatement",
												"src": "6803:69:8"
											},
											{
												"assignments": [
													1703,
													1705
												],
												"declarations": [
													{
														"constant": false,
														"id": 1703,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1717,
														"src": "6943:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1702,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6943:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1705,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1717,
														"src": "6957:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1704,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6957:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1710,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1708,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "7004:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1706,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "6984:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6984:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6984:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6942:67:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1712,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "7044:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1713,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1705,
															"src": "7053:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1714,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "7065:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1711,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1748,
														"src": "7026:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1694,
												"id": 1716,
												"nodeType": "Return",
												"src": "7019:59:8"
											}
										]
									},
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "6488:175:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1718,
												"src": "6698:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1718,
												"src": "6714:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6714:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1718,
												"src": "6733:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1689,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6733:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6697:63:8"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1718,
												"src": "6779:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1692,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6779:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6778:14:8"
									},
									"scope": 1749,
									"src": "6668:417:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1747,
										"nodeType": "Block",
										"src": "7220:596:8",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1729,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1720,
													"src": "7234:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1745,
													"nodeType": "Block",
													"src": "7291:519:8",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1733,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1722,
																		"src": "7375:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7375:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7395:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7375:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1743,
																"nodeType": "Block",
																"src": "7747:53:8",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1740,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1724,
																					"src": "7772:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1739,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "7765:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7765:20:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1742,
																		"nodeType": "ExpressionStatement",
																		"src": "7765:20:8"
																	}
																]
															},
															"id": 1744,
															"nodeType": "IfStatement",
															"src": "7371:429:8",
															"trueBody": {
																"id": 1738,
																"nodeType": "Block",
																"src": "7398:343:8",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7582:145:8",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7604:40:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7633:10:8"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7627:5:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7627:17:8"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7608:15:8",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7676:2:8",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7680:10:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7672:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7672:19:8"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7693:15:8"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7665:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7665:44:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7665:44:8"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1722,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7633:10:8",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1722,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7680:10:8",
																				"valueSize": 1
																			}
																		],
																		"id": 1737,
																		"nodeType": "InlineAssembly",
																		"src": "7573:154:8"
																	}
																]
															}
														}
													]
												},
												"id": 1746,
												"nodeType": "IfStatement",
												"src": "7230:580:8",
												"trueBody": {
													"id": 1732,
													"nodeType": "Block",
													"src": "7243:42:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1730,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1722,
																"src": "7264:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1728,
															"id": 1731,
															"nodeType": "Return",
															"src": "7257:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1748,
												"src": "7118:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1719,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7118:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1748,
												"src": "7132:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1721,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1748,
												"src": "7157:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1723,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7157:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7117:67:8"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1748,
												"src": "7206:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1726,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7206:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7205:14:8"
									},
									"scope": 1749,
									"src": "7091:725:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1750,
							"src": "134:7684:8"
						}
					],
					"src": "33:7786:8"
				},
				"id": 8
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1772
						]
					},
					"id": 1773,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1751,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1772,
							"linearizedBaseContracts": [
								1772
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1759,
										"nodeType": "Block",
										"src": "668:34:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1756,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "685:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "685:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1755,
												"id": 1758,
												"nodeType": "Return",
												"src": "678:17:9"
											}
										]
									},
									"documentation": null,
									"id": 1760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:9"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1760,
												"src": "651:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "650:17:9"
									},
									"scope": 1772,
									"src": "598:104:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1770,
										"nodeType": "Block",
										"src": "773:165:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1765,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "783:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1772",
														"typeString": "contract Context"
													}
												},
												"id": 1766,
												"nodeType": "ExpressionStatement",
												"src": "783:4:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1767,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "923:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "923:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1764,
												"id": 1769,
												"nodeType": "Return",
												"src": "916:15:9"
											}
										]
									},
									"documentation": null,
									"id": 1771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:9"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1771,
												"src": "759:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1762,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "758:14:9"
									},
									"scope": 1772,
									"src": "708:230:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1773,
							"src": "566:374:9"
						}
					],
					"src": "33:908:9"
				},
				"id": 9
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							2264
						]
					},
					"id": 2265,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1774,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1775,
								"nodeType": "StructuredDocumentation",
								"src": "66:686:10",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported."
							},
							"fullyImplemented": true,
							"id": 2264,
							"linearizedBaseContracts": [
								2264
							],
							"name": "EnumerableSet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 1783,
									"members": [
										{
											"constant": false,
											"id": 1778,
											"mutability": "mutable",
											"name": "_values",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1783,
											"src": "1275:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 1776,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1275:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1777,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "1275:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1782,
											"mutability": "mutable",
											"name": "_indexes",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1783,
											"src": "1426:37:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1781,
												"keyType": {
													"id": 1779,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1426:28:10",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1446:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nodeType": "StructDefinition",
									"scope": 2264,
									"src": "1221:249:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "1709:335:10",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1723:22:10",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1794,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1786,
																"src": "1734:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"argumentTypes": null,
																"id": 1795,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "1739:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1793,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "1724:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1783_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1724:21:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1821,
													"nodeType": "Block",
													"src": "2001:37:10",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2022:5:10",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1792,
															"id": 1820,
															"nodeType": "Return",
															"src": "2015:12:10"
														}
													]
												},
												"id": 1822,
												"nodeType": "IfStatement",
												"src": "1719:319:10",
												"trueBody": {
													"id": 1818,
													"nodeType": "Block",
													"src": "1747:248:10",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1803,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "1778:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1798,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1786,
																			"src": "1761:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1801,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1778,
																		"src": "1761:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1761:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 1804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1761:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1805,
															"nodeType": "ExpressionStatement",
															"src": "1761:23:10"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1806,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1786,
																			"src": "1919:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1782,
																		"src": "1919:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1810,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1808,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "1932:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1919:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1811,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1786,
																			"src": "1941:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1812,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1778,
																		"src": "1941:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1941:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1919:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1815,
															"nodeType": "ExpressionStatement",
															"src": "1919:40:10"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1980:4:10",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1792,
															"id": 1817,
															"nodeType": "Return",
															"src": "1973:11:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1784,
										"nodeType": "StructuredDocumentation",
										"src": "1476:159:10",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "1654:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1785,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1783,
													"src": "1654:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "1671:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1787,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1671:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1653:32:10"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "1703:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1703:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1702:6:10"
									},
									"scope": 2264,
									"src": "1640:404:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1903,
										"nodeType": "Block",
										"src": "2284:1440:10",
										"statements": [
											{
												"assignments": [
													1835
												],
												"declarations": [
													{
														"constant": false,
														"id": 1835,
														"mutability": "mutable",
														"name": "valueIndex",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1903,
														"src": "2394:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1834,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2394:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1840,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1836,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1827,
															"src": "2415:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1837,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1782,
														"src": "2415:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1839,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1838,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "2428:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2415:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2394:40:10"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1841,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1835,
														"src": "2449:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2463:1:10",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2449:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1901,
													"nodeType": "Block",
													"src": "3681:37:10",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3702:5:10",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1833,
															"id": 1900,
															"nodeType": "Return",
															"src": "3695:12:10"
														}
													]
												},
												"id": 1902,
												"nodeType": "IfStatement",
												"src": "2445:1273:10",
												"trueBody": {
													"id": 1898,
													"nodeType": "Block",
													"src": "2466:1209:10",
													"statements": [
														{
															"assignments": [
																1845
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1845,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1898,
																	"src": "2806:21:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1844,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2806:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1849,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1846,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1835,
																	"src": "2830:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2843:1:10",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2830:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2806:38:10"
														},
														{
															"assignments": [
																1851
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1851,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1898,
																	"src": "2858:17:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1850,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2858:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1857,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1852,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1827,
																			"src": "2878:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1853,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1778,
																		"src": "2878:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2878:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2899:1:10",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2878:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2858:42:10"
														},
														{
															"assignments": [
																1859
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1859,
																	"mutability": "mutable",
																	"name": "lastvalue",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1898,
																	"src": "3140:17:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1858,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "3140:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1864,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1860,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1827,
																		"src": "3160:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 1861,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1778,
																	"src": "3160:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 1863,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1862,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "3172:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3160:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3140:42:10"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1865,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1827,
																			"src": "3274:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1868,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1778,
																		"src": "3274:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1869,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1867,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1845,
																		"src": "3286:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3274:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1870,
																	"name": "lastvalue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1859,
																	"src": "3303:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "3274:38:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1872,
															"nodeType": "ExpressionStatement",
															"src": "3274:38:10"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1873,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1827,
																			"src": "3378:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1876,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1782,
																		"src": "3378:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1877,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1875,
																		"name": "lastvalue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "3391:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3378:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1878,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1845,
																		"src": "3404:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3420:1:10",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3404:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3378:43:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1882,
															"nodeType": "ExpressionStatement",
															"src": "3378:43:10"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1883,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1827,
																			"src": "3527:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1886,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1778,
																		"src": "3527:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3527:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3527:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1889,
															"nodeType": "ExpressionStatement",
															"src": "3527:17:10"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3612:26:10",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1890,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1827,
																			"src": "3619:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1782,
																		"src": "3619:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1893,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1892,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1829,
																		"src": "3632:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3619:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1895,
															"nodeType": "ExpressionStatement",
															"src": "3612:26:10"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 1896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3660:4:10",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1833,
															"id": 1897,
															"nodeType": "Return",
															"src": "3653:11:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "2050:157:10",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1904,
												"src": "2229:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1826,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1783,
													"src": "2229:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1904,
												"src": "2246:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1828,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2246:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2228:32:10"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1904,
												"src": "2278:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2278:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2277:6:10"
									},
									"scope": 2264,
									"src": "2212:1512:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1921,
										"nodeType": "Block",
										"src": "3884:48:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1914,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1907,
																"src": "3901:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1782,
															"src": "3901:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1917,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1916,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "3914:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3924:1:10",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3901:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1913,
												"id": 1920,
												"nodeType": "Return",
												"src": "3894:31:10"
											}
										]
									},
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "3730:70:10",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1922,
												"src": "3824:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1906,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1783,
													"src": "3824:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1922,
												"src": "3841:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1908,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3823:32:10"
									},
									"returnParameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1922,
												"src": "3878:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1911,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3878:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3877:6:10"
									},
									"scope": 2264,
									"src": "3805:127:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1934,
										"nodeType": "Block",
										"src": "4078:42:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1930,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "4095:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1931,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1778,
														"src": "4095:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4095:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1929,
												"id": 1933,
												"nodeType": "Return",
												"src": "4088:25:10"
											}
										]
									},
									"documentation": {
										"id": 1923,
										"nodeType": "StructuredDocumentation",
										"src": "3938:70:10",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1935,
												"src": "4030:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1924,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1783,
													"src": "4030:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4029:17:10"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1935,
												"src": "4069:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4069:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4068:9:10"
									},
									"scope": 2264,
									"src": "4013:107:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1959,
										"nodeType": "Block",
										"src": "4528:125:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1946,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1938,
																		"src": "4546:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 1947,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1778,
																	"src": "4546:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4546:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1949,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1940,
																"src": "4567:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4546:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4574:36:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															},
															"value": "EnumerableSet: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															}
														],
														"id": 1945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4538:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4538:73:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1953,
												"nodeType": "ExpressionStatement",
												"src": "4538:73:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1954,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "4628:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1778,
														"src": "4628:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1957,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1956,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1940,
														"src": "4640:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4628:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1944,
												"id": 1958,
												"nodeType": "Return",
												"src": "4621:25:10"
											}
										]
									},
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "4125:322:10",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1960,
												"src": "4465:15:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1937,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1783,
													"src": "4465:3:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1960,
												"src": "4482:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4464:32:10"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1960,
												"src": "4519:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1942,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4519:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4518:9:10"
									},
									"scope": 2264,
									"src": "4452:201:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 1963,
									"members": [
										{
											"constant": false,
											"id": 1962,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1963,
											"src": "4706:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 1961,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1783,
												"src": "4706:3:10",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nodeType": "StructDefinition",
									"scope": 2264,
									"src": "4678:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "4969:47:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1974,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1966,
																"src": "4991:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1963_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1962,
															"src": "4991:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 1976,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "5003:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1973,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1824,
														"src": "4986:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1783_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4986:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1972,
												"id": 1978,
												"nodeType": "Return",
												"src": "4979:30:10"
											}
										]
									},
									"documentation": {
										"id": 1964,
										"nodeType": "StructuredDocumentation",
										"src": "4729:159:10",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1980,
												"src": "4906:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1963_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1965,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1963,
													"src": "4906:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1963_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1980,
												"src": "4930:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1967,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4930:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4905:39:10"
									},
									"returnParameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1980,
												"src": "4963:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1970,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4963:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4962:6:10"
									},
									"scope": 2264,
									"src": "4893:123:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1996,
										"nodeType": "Block",
										"src": "5263:50:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1991,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1983,
																"src": "5288:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1963_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1962,
															"src": "5288:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 1993,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "5300:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1990,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "5280:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1783_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5280:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1989,
												"id": 1995,
												"nodeType": "Return",
												"src": "5273:33:10"
											}
										]
									},
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "5022:157:10",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1997,
												"src": "5200:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1963_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1982,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1963,
													"src": "5200:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1963_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1997,
												"src": "5224:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1984,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5199:39:10"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1997,
												"src": "5257:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1987,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5257:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5256:6:10"
									},
									"scope": 2264,
									"src": "5184:129:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2013,
										"nodeType": "Block",
										"src": "5480:52:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2008,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2000,
																"src": "5507:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1963_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2009,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1962,
															"src": "5507:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 2010,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "5519:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2007,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "5497:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1783_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5497:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2006,
												"id": 2012,
												"nodeType": "Return",
												"src": "5490:35:10"
											}
										]
									},
									"documentation": {
										"id": 1998,
										"nodeType": "StructuredDocumentation",
										"src": "5319:70:10",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2014,
												"src": "5412:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1963_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1999,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1963,
													"src": "5412:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1963_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2014,
												"src": "5436:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2001,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5411:39:10"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2014,
												"src": "5474:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2004,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5474:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5473:6:10"
									},
									"scope": 2264,
									"src": "5394:138:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2027,
										"nodeType": "Block",
										"src": "5685:43:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2023,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "5710:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1963_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2024,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1962,
															"src": "5710:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2022,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "5702:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1783_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5702:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2021,
												"id": 2026,
												"nodeType": "Return",
												"src": "5695:26:10"
											}
										]
									},
									"documentation": {
										"id": 2015,
										"nodeType": "StructuredDocumentation",
										"src": "5538:70:10",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 2028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2028,
												"src": "5629:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1963_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 2016,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1963,
													"src": "5629:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1963_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5628:24:10"
									},
									"returnParameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2028,
												"src": "5676:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5676:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5675:9:10"
									},
									"scope": 2264,
									"src": "5613:115:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "6143:46:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2039,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2031,
																"src": "6164:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1963_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2040,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1962,
															"src": "6164:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 2041,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2033,
															"src": "6176:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2038,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "6160:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1783_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6160:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2037,
												"id": 2043,
												"nodeType": "Return",
												"src": "6153:29:10"
											}
										]
									},
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "5733:322:10",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2045,
												"src": "6072:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1963_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 2030,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1963,
													"src": "6072:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1963_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2045,
												"src": "6096:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6096:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6071:39:10"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2045,
												"src": "6134:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2035,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6134:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6133:9:10"
									},
									"scope": 2264,
									"src": "6060:129:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 2048,
									"members": [
										{
											"constant": false,
											"id": 2047,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2048,
											"src": "6242:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 2046,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1783,
												"src": "6242:3:10",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nodeType": "StructDefinition",
									"scope": 2264,
									"src": "6214:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2073,
										"nodeType": "Block",
										"src": "6505:74:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2059,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2051,
																"src": "6527:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2048_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2060,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2047,
															"src": "6527:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2067,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2053,
																					"src": "6563:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2066,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6555:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2065,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "6555:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 2068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6555:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6547:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2063,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6547:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6547:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6539:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2061,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6539:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6539:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2058,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1824,
														"src": "6522:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1783_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6522:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2057,
												"id": 2072,
												"nodeType": "Return",
												"src": "6515:57:10"
											}
										]
									},
									"documentation": {
										"id": 2049,
										"nodeType": "StructuredDocumentation",
										"src": "6265:159:10",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2074,
												"src": "6442:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2048_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2050,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2048,
													"src": "6442:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2048_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2074,
												"src": "6466:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6466:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6441:39:10"
									},
									"returnParameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2074,
												"src": "6499:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2055,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6499:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6498:6:10"
									},
									"scope": 2264,
									"src": "6429:150:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2099,
										"nodeType": "Block",
										"src": "6826:77:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2085,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "6851:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2048_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2047,
															"src": "6851:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2093,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2079,
																					"src": "6887:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6879:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2091,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "6879:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 2094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6879:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6871:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2089,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6871:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6871:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6863:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2087,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6863:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6863:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2084,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "6843:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1783_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6843:53:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2083,
												"id": 2098,
												"nodeType": "Return",
												"src": "6836:60:10"
											}
										]
									},
									"documentation": {
										"id": 2075,
										"nodeType": "StructuredDocumentation",
										"src": "6585:157:10",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2100,
												"src": "6763:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2048_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2076,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2048,
													"src": "6763:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2048_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2100,
												"src": "6787:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6787:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6762:39:10"
									},
									"returnParameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2100,
												"src": "6820:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2081,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6820:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6819:6:10"
									},
									"scope": 2264,
									"src": "6747:156:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2125,
										"nodeType": "Block",
										"src": "7070:79:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2111,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2103,
																"src": "7097:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2048_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2112,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2047,
															"src": "7097:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2119,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2105,
																					"src": "7133:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7125:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2117,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "7125:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 2120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7125:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7117:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2115,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7117:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7117:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7109:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2113,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7109:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7109:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2110,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "7087:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1783_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7087:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2109,
												"id": 2124,
												"nodeType": "Return",
												"src": "7080:62:10"
											}
										]
									},
									"documentation": {
										"id": 2101,
										"nodeType": "StructuredDocumentation",
										"src": "6909:70:10",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2126,
												"src": "7002:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2048_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2102,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2048,
													"src": "7002:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2048_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2126,
												"src": "7026:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7026:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7001:39:10"
									},
									"returnParameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2126,
												"src": "7064:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2107,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7064:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7063:6:10"
									},
									"scope": 2264,
									"src": "6984:165:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2139,
										"nodeType": "Block",
										"src": "7302:43:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2135,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2129,
																"src": "7327:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2048_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2136,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2047,
															"src": "7327:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2134,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "7319:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1783_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7319:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2133,
												"id": 2138,
												"nodeType": "Return",
												"src": "7312:26:10"
											}
										]
									},
									"documentation": {
										"id": 2127,
										"nodeType": "StructuredDocumentation",
										"src": "7155:70:10",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 2140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2140,
												"src": "7246:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2048_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2128,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2048,
													"src": "7246:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2048_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7245:24:10"
									},
									"returnParameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2140,
												"src": "7293:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7293:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7292:9:10"
									},
									"scope": 2264,
									"src": "7230:115:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2165,
										"nodeType": "Block",
										"src": "7760:73:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 2157,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2143,
																						"src": "7805:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$2048_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 2158,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2047,
																					"src": "7805:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1783_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 2159,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2145,
																					"src": "7817:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$1783_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2156,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1960,
																				"src": "7801:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1783_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 2160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7801:22:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7793:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2154,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7793:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7793:31:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7785:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2152,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "7785:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7785:40:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7777:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2150,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7777:7:10",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7777:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 2149,
												"id": 2164,
												"nodeType": "Return",
												"src": "7770:56:10"
											}
										]
									},
									"documentation": {
										"id": 2141,
										"nodeType": "StructuredDocumentation",
										"src": "7350:322:10",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2166,
												"src": "7689:22:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2048_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2142,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2048,
													"src": "7689:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2048_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2166,
												"src": "7713:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7713:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7688:39:10"
									},
									"returnParameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2166,
												"src": "7751:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7751:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7750:9:10"
									},
									"scope": 2264,
									"src": "7677:156:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 2169,
									"members": [
										{
											"constant": false,
											"id": 2168,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2169,
											"src": "7881:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 2167,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1783,
												"src": "7881:3:10",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1783_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nodeType": "StructDefinition",
									"scope": 2264,
									"src": "7856:42:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2188,
										"nodeType": "Block",
										"src": "8141:56:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2180,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2172,
																"src": "8163:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2169_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2181,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2168,
															"src": "8163:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2184,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "8183:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8175:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2182,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8175:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8175:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2179,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1824,
														"src": "8158:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1783_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8158:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2178,
												"id": 2187,
												"nodeType": "Return",
												"src": "8151:39:10"
											}
										]
									},
									"documentation": {
										"id": 2170,
										"nodeType": "StructuredDocumentation",
										"src": "7904:159:10",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2189,
												"src": "8081:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2169_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2171,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2169,
													"src": "8081:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2169_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2189,
												"src": "8102:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8102:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8080:36:10"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2189,
												"src": "8135:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8135:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8134:6:10"
									},
									"scope": 2264,
									"src": "8068:129:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2208,
										"nodeType": "Block",
										"src": "8441:59:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2200,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2192,
																"src": "8466:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2169_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2201,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2168,
															"src": "8466:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2204,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2194,
																	"src": "8486:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8478:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2202,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8478:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8478:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2199,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "8458:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1783_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8458:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2198,
												"id": 2207,
												"nodeType": "Return",
												"src": "8451:42:10"
											}
										]
									},
									"documentation": {
										"id": 2190,
										"nodeType": "StructuredDocumentation",
										"src": "8203:157:10",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2209,
												"src": "8381:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2169_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2191,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2169,
													"src": "8381:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2169_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2209,
												"src": "8402:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8402:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8380:36:10"
									},
									"returnParameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2209,
												"src": "8435:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8435:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8434:6:10"
									},
									"scope": 2264,
									"src": "8365:135:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2228,
										"nodeType": "Block",
										"src": "8664:61:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2220,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2212,
																"src": "8691:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2169_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2221,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2168,
															"src": "8691:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2224,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2214,
																	"src": "8711:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8703:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2222,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8703:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8703:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2219,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "8681:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1783_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8681:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2218,
												"id": 2227,
												"nodeType": "Return",
												"src": "8674:44:10"
											}
										]
									},
									"documentation": {
										"id": 2210,
										"nodeType": "StructuredDocumentation",
										"src": "8506:70:10",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2229,
												"src": "8599:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2169_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2211,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2169,
													"src": "8599:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2169_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2229,
												"src": "8620:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8620:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8598:36:10"
									},
									"returnParameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2229,
												"src": "8658:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8658:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8657:6:10"
									},
									"scope": 2264,
									"src": "8581:144:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2242,
										"nodeType": "Block",
										"src": "8875:43:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2238,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2232,
																"src": "8900:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2169_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2239,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2168,
															"src": "8900:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1783_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2237,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "8892:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1783_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8892:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2236,
												"id": 2241,
												"nodeType": "Return",
												"src": "8885:26:10"
											}
										]
									},
									"documentation": {
										"id": 2230,
										"nodeType": "StructuredDocumentation",
										"src": "8731:70:10",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 2243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2243,
												"src": "8822:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2169_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2231,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2169,
													"src": "8822:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2169_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8821:21:10"
									},
									"returnParameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2243,
												"src": "8866:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8866:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8865:9:10"
									},
									"scope": 2264,
									"src": "8806:112:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "9330:55:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2256,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2246,
																		"src": "9359:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$2169_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 2257,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2168,
																	"src": "9359:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$1783_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2258,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2248,
																	"src": "9371:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$1783_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2255,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1960,
																"src": "9355:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1783_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 2259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9355:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9347:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2253,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9347:7:10",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9347:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2252,
												"id": 2261,
												"nodeType": "Return",
												"src": "9340:38:10"
											}
										]
									},
									"documentation": {
										"id": 2244,
										"nodeType": "StructuredDocumentation",
										"src": "8923:322:10",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2263,
												"src": "9262:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2169_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2245,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2169,
													"src": "9262:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2169_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2263,
												"src": "9283:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9261:36:10"
									},
									"returnParameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2263,
												"src": "9321:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9320:9:10"
									},
									"scope": 2264,
									"src": "9250:135:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2265,
							"src": "753:8634:10"
						}
					],
					"src": "33:9355:10"
				},
				"id": 10
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Pausable": [
							2356
						]
					},
					"id": 2357,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2266,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:11"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.4.0/contracts/utils/Context.sol",
							"file": "./Context.sol",
							"id": 2267,
							"nodeType": "ImportDirective",
							"scope": 2357,
							"sourceUnit": 1773,
							"src": "66:23:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2269,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1772,
										"src": "561:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1772",
											"typeString": "contract Context"
										}
									},
									"id": 2270,
									"nodeType": "InheritanceSpecifier",
									"src": "561:7:11"
								}
							],
							"contractDependencies": [
								1772
							],
							"contractKind": "contract",
							"documentation": {
								"id": 2268,
								"nodeType": "StructuredDocumentation",
								"src": "91:439:11",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 2356,
							"linearizedBaseContracts": [
								2356,
								1772
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2271,
										"nodeType": "StructuredDocumentation",
										"src": "575:73:11",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 2275,
									"name": "Paused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2275,
												"src": "666:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "665:17:11"
									},
									"src": "653:30:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2276,
										"nodeType": "StructuredDocumentation",
										"src": "689:70:11",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 2280,
									"name": "Unpaused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2280,
												"src": "779:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "778:17:11"
									},
									"src": "764:32:11"
								},
								{
									"constant": false,
									"id": 2282,
									"mutability": "mutable",
									"name": "_paused",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2356,
									"src": "802:20:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2281,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "802:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2290,
										"nodeType": "Block",
										"src": "925:32:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2286,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2282,
														"src": "935:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 2287,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "945:5:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "935:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2289,
												"nodeType": "ExpressionStatement",
												"src": "935:15:11"
											}
										]
									},
									"documentation": {
										"id": 2283,
										"nodeType": "StructuredDocumentation",
										"src": "829:67:11",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 2291,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:2:11"
									},
									"returnParameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "925:0:11"
									},
									"scope": 2356,
									"src": "901:56:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2299,
										"nodeType": "Block",
										"src": "1105:31:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2297,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2282,
													"src": "1122:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2296,
												"id": 2298,
												"nodeType": "Return",
												"src": "1115:14:11"
											}
										]
									},
									"documentation": {
										"id": 2292,
										"nodeType": "StructuredDocumentation",
										"src": "963:84:11",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 2300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1067:2:11"
									},
									"returnParameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2300,
												"src": "1099:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1099:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1098:6:11"
									},
									"scope": 2356,
									"src": "1052:84:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2311,
										"nodeType": "Block",
										"src": "1347:66:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1365:9:11",
															"subExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2304,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "1366:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 2305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1366:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5061757361626c653a20706175736564",
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1376:18:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 2303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1357:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1357:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2309,
												"nodeType": "ExpressionStatement",
												"src": "1357:38:11"
											},
											{
												"id": 2310,
												"nodeType": "PlaceholderStatement",
												"src": "1405:1:11"
											}
										]
									},
									"documentation": {
										"id": 2301,
										"nodeType": "StructuredDocumentation",
										"src": "1142:175:11",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2312,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1344:2:11"
									},
									"src": "1322:91:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2322,
										"nodeType": "Block",
										"src": "1613:69:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2316,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2300,
																"src": "1631:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1631:8:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1641:22:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 2315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1623:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1623:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2320,
												"nodeType": "ExpressionStatement",
												"src": "1623:41:11"
											},
											{
												"id": 2321,
												"nodeType": "PlaceholderStatement",
												"src": "1674:1:11"
											}
										]
									},
									"documentation": {
										"id": 2313,
										"nodeType": "StructuredDocumentation",
										"src": "1419:167:11",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 2323,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1610:2:11"
									},
									"src": "1591:91:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2338,
										"nodeType": "Block",
										"src": "1866:66:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2329,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2282,
														"src": "1876:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 2330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1886:4:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1876:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2332,
												"nodeType": "ExpressionStatement",
												"src": "1876:14:11"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2334,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "1912:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1912:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2333,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2275,
														"src": "1905:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1905:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2337,
												"nodeType": "EmitStatement",
												"src": "1900:25:11"
											}
										]
									},
									"documentation": {
										"id": 2324,
										"nodeType": "StructuredDocumentation",
										"src": "1688:124:11",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2339,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2327,
											"modifierName": {
												"argumentTypes": null,
												"id": 2326,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2312,
												"src": "1852:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1852:13:11"
										}
									],
									"name": "_pause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1832:2:11"
									},
									"returnParameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1866:0:11"
									},
									"scope": 2356,
									"src": "1817:115:11",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2354,
										"nodeType": "Block",
										"src": "2112:69:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2345,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2282,
														"src": "2122:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 2346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2132:5:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2122:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2348,
												"nodeType": "ExpressionStatement",
												"src": "2122:15:11"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2350,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "2161:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2161:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2349,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2280,
														"src": "2152:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2152:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2353,
												"nodeType": "EmitStatement",
												"src": "2147:27:11"
											}
										]
									},
									"documentation": {
										"id": 2340,
										"nodeType": "StructuredDocumentation",
										"src": "1938:121:11",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 2355,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2343,
											"modifierName": {
												"argumentTypes": null,
												"id": 2342,
												"name": "whenPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2323,
												"src": "2101:10:11",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2101:10:11"
										}
									],
									"name": "_unpause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:2:11"
									},
									"returnParameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2112:0:11"
									},
									"scope": 2356,
									"src": "2064:117:11",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2357,
							"src": "531:1652:11"
						}
					],
					"src": "33:2151:11"
				},
				"id": 11
			}
		}
	}
}